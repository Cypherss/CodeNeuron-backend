-- MySQL dump 10.13  Distrib 8.0.17, for macos10.14 (x86_64)
--
-- Host: localhost    Database: codeneuron
-- ------------------------------------------------------
-- Server version	8.0.15

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `comment`
--

DROP TABLE IF EXISTS `comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `content` varchar(500) NOT NULL,
  `user_id` int(11) NOT NULL,
  `user_name` varchar(20) NOT NULL,
  `create_time` timestamp NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `comment`
--

LOCK TABLES `comment` WRITE;
/*!40000 ALTER TABLE `comment` DISABLE KEYS */;
/*!40000 ALTER TABLE `comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `domain`
--

DROP TABLE IF EXISTS `domain`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `domain` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `closeness_threshold` double NOT NULL,
  `project_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=64 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `domain`
--

LOCK TABLES `domain` WRITE;
/*!40000 ALTER TABLE `domain` DISABLE KEYS */;
INSERT INTO `domain` VALUES (1,0,1),(2,0,1),(3,0,1),(4,0,1),(5,0,1),(6,0,1),(7,0,1),(8,0,1),(9,0,1),(10,0,1),(11,0,1),(12,0,1),(13,0,1),(14,0,1),(15,0,1),(16,0,1),(17,0,1),(18,0,1),(19,0,1),(20,0,1),(21,0,1),(22,0,1),(23,0,1),(24,0,1),(25,0,1),(26,0,1),(27,0,1),(28,0,1),(29,0,1),(30,0,1),(31,0,1),(32,0,1),(33,0,1),(34,0,1),(35,0,1),(36,0,1),(37,0,1),(38,0,1),(39,0,1),(40,0,1),(41,0,1),(42,0,1),(43,0,1),(44,0,1),(45,0,1),(46,0,1),(47,0,1),(48,0,1),(49,0,1),(50,0,1),(51,0,1),(52,0,1),(53,0,1),(54,0,1),(55,0,1),(56,0,1),(57,0,1),(58,0,1),(59,0,1),(60,0,1),(61,0,1),(62,0,1),(63,0,1);
/*!40000 ALTER TABLE `domain` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `domain_comment`
--

DROP TABLE IF EXISTS `domain_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `domain_comment` (
  `domain_id` int(11) NOT NULL,
  `comment_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `domain_comment`
--

LOCK TABLES `domain_comment` WRITE;
/*!40000 ALTER TABLE `domain_comment` DISABLE KEYS */;
/*!40000 ALTER TABLE `domain_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `domain_node`
--

DROP TABLE IF EXISTS `domain_node`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `domain_node` (
  `domain_id` int(11) NOT NULL,
  `node_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `domain_node`
--

LOCK TABLES `domain_node` WRITE;
/*!40000 ALTER TABLE `domain_node` DISABLE KEYS */;
INSERT INTO `domain_node` VALUES (1,148),(1,324),(1,1638),(1,1789),(1,330),(1,214),(1,736),(1,1303),(1,248),(1,349),(1,1041),(1,769),(1,426),(1,1380),(1,1262),(1,359),(1,1390),(1,918),(1,1785),(1,699),(1,169),(1,568),(1,122),(1,1429),(1,1320),(1,1108),(1,1495),(1,56),(1,316),(1,483),(1,1693),(1,662),(1,1004),(1,55),(1,1033),(1,1737),(1,546),(1,1954),(1,1952),(1,1244),(1,1629),(1,675),(1,126),(1,1283),(1,504),(1,1399),(1,1538),(1,915),(1,1073),(1,455),(1,366),(1,1436),(1,30),(1,676),(1,1230),(1,1333),(1,1909),(1,44),(1,1062),(1,579),(1,1706),(1,505),(1,1332),(1,1918),(1,1155),(1,1404),(1,978),(1,818),(1,384),(1,1536),(1,1499),(1,1564),(1,862),(1,168),(1,1951),(1,1664),(1,1103),(1,1768),(1,875),(1,1941),(1,89),(1,633),(1,452),(1,591),(1,932),(1,832),(1,227),(1,688),(1,125),(1,196),(1,1076),(1,1974),(1,1975),(1,894),(1,962),(1,1475),(1,1052),(1,1627),(1,1596),(1,1376),(1,1963),(1,541),(1,803),(1,1480),(1,246),(1,979),(1,1773),(1,1100),(1,1834),(1,8),(1,1430),(1,1467),(1,849),(1,1699),(1,1318),(1,1489),(1,1198),(1,871),(1,1385),(1,499),(1,1024),(1,323),(1,1448),(1,258),(1,1663),(1,1724),(1,329),(1,565),(1,1104),(1,589),(1,1425),(1,1388),(1,1226),(1,1225),(1,1633),(1,1061),(1,1833),(1,163),(1,1801),(1,141),(1,25),(1,1045),(1,432),(1,1653),(1,706),(1,1259),(1,820),(1,261),(1,407),(1,370),(1,1067),(1,1887),(1,933),(1,1319),(1,449),(1,1818),(1,1419),(1,390),(1,1621),(1,1605),(1,392),(1,1491),(1,1612),(1,1750),(1,1304),(1,178),(1,1603),(1,1159),(1,1012),(1,1267),(1,210),(1,459),(1,377),(1,1926),(1,1552),(1,332),(1,1902),(1,576),(1,1287),(1,1482),(1,1124),(1,1802),(1,1369),(1,1591),(1,1112),(1,116),(1,289),(1,281),(1,1766),(1,411),(1,301),(1,1137),(1,343),(1,801),(1,777),(1,788),(1,128),(1,965),(1,1765),(1,1400),(1,382),(1,1397),(1,1021),(1,1214),(1,1897),(1,1075),(1,959),(1,917),(1,1935),(1,817),(1,1881),(1,1059),(1,1082),(1,149),(1,82),(1,1374),(1,1157),(1,1826),(1,1777),(1,26),(1,627),(1,861),(1,1373),(1,700),(1,1598),(1,795),(1,373),(1,308),(1,401),(1,1658),(1,1719),(1,1760),(1,727),(1,351),(1,119),(1,326),(1,616),(1,852),(1,1767),(1,723),(1,734),(1,1500),(1,713),(1,1922),(1,310),(1,192),(1,941),(1,1459),(1,1365),(1,458),(1,930),(1,1643),(1,833),(1,630),(1,403),(1,252),(1,571),(1,738),(1,864),(1,447),(1,53),(1,217),(1,799),(1,720),(1,730),(1,1339),(1,475),(1,1701),(1,629),(1,1869),(1,1030),(1,1275),(1,1608),(1,614),(1,233),(1,1114),(1,1363),(1,581),(1,543),(1,1440),(1,175),(1,943),(1,442),(1,480),(1,244),(1,1705),(1,1345),(1,999),(1,226),(1,412),(1,1642),(1,1858),(1,1530),(1,42),(1,1634),(1,506),(1,225),(1,1543),(1,756),(1,1560),(1,1980),(1,1972),(1,890),(1,511),(1,1950),(1,1147),(1,1647),(1,1445),(1,446),(1,1029),(1,910),(1,1613),(1,448),(1,1815),(1,827),(1,604),(1,1452),(1,1249),(1,286),(1,960),(1,1604),(1,96),(1,354),(1,1694),(1,502),(1,1721),(1,1942),(1,1978),(1,1675),(1,479),(1,133),(1,1878),(1,1240),(1,94),(1,811),(1,1407),(1,465),(1,1352),(1,1310),(1,1129),(1,271),(1,1132),(1,1483),(1,1405),(1,1572),(1,1347),(1,750),(1,1710),(1,1662),(1,331),(1,1415),(1,1688),(1,1981),(1,1441),(1,1571),(1,572),(1,239),(1,1503),(1,1372),(1,212),(1,1046),(1,790),(1,1106),(1,739),(1,885),(1,1757),(1,737),(1,1411),(1,1006),(1,755),(1,1410),(1,267),(1,277),(1,1535),(1,74),(1,1945),(1,988),(1,1632),(1,1121),(1,1563),(1,859),(1,1896),(1,1672),(1,527),(1,829),(1,696),(1,935),(1,1550),(1,171),(1,1979),(1,1919),(1,410),(1,858),(1,1091),(1,1301),(1,22),(1,68),(1,1659),(1,981),(1,1284),(1,1969),(1,881),(1,124),(1,294),(1,536),(1,1562),(1,904),(1,1381),(1,312),(1,1533),(1,503),(1,911),(1,1575),(1,78),(1,297),(1,1428),(1,320),(1,321),(1,80),(1,346),(1,199),(1,888),(1,1088),(1,439),(1,1927),(1,1830),(1,792),(1,369),(1,1723),(1,27),(1,190),(1,1044),(1,661),(1,968),(1,743),(1,394),(1,905),(1,1541),(1,929),(1,1620),(1,66),(1,705),(1,1778),(1,830),(1,468),(1,1602),(1,406),(1,791),(1,837),(1,776),(1,1095),(1,1800),(1,1328),(1,371),(1,1611),(1,605),(1,1872),(1,1716),(1,1360),(1,1123),(1,880),(1,798),(1,1923),(1,1573),(1,937),(1,1577),(1,1936),(1,994),(1,751),(1,1540),(1,674),(1,1153),(1,1690),(1,1534),(1,1307),(1,1366),(1,989),(1,1667),(1,40),(1,1828),(1,1584),(1,537),(1,98),(1,828),(1,1674),(1,535),(1,804),(1,1644),(1,203),(1,912),(1,1351),(1,1110),(1,621),(1,752),(1,300),(1,466),(1,274),(1,508),(1,984),(1,794),(1,41),(1,637),(1,247),(1,559),(1,549),(1,786),(1,891),(1,64),(1,749),(1,745),(1,1809),(1,431),(1,1615),(1,509),(1,843),(1,1268),(1,1548),(1,201),(1,1924),(1,220),(1,1471),(1,704),(1,1416),(1,418),(1,1049),(1,405),(1,150),(1,761),(1,221),(1,75),(1,234),(1,813),(1,404),(1,1703),(1,922),(1,129),(1,691),(1,975),(1,1791),(1,1481),(1,1282),(1,291),(1,1028),(1,697),(1,443),(1,381),(1,1138),(1,172),(1,54),(1,1094),(1,1839),(1,1519),(1,419),(1,474),(1,1133),(1,1085),(1,165),(1,1401),(1,563),(1,270),(1,99),(1,184),(1,1034),(1,20),(1,1689),(1,916),(1,1618),(1,870),(1,6),(1,1058),(1,1474),(1,43),(1,1229),(1,92),(1,909),(1,1128),(1,101),(1,1013),(1,360),(1,770),(1,1567),(1,956),(1,847),(1,378),(1,744),(1,1866),(1,1895),(1,523),(1,1696),(1,325),(1,1251),(1,470),(1,595),(1,664),(1,395),(1,1014),(1,1970),(1,1630),(1,1568),(1,1464),(1,1047),(1,1074),(1,240),(1,1455),(1,522),(1,728),(1,653),(1,1496),(1,533),(1,951),(1,1654),(1,1685),(1,132),(1,850),(1,429),(1,278),(1,416),(1,1048),(1,1288),(1,113),(1,260),(1,1263),(1,1442),(1,1885),(1,900),(1,1439),(1,1040),(1,494),(1,1947),(1,1247),(1,1761),(1,1790),(1,216),(1,1645),(1,763),(1,626),(1,140),(1,135),(1,185),(1,1822),(1,872),(1,973),(1,957),(1,157),(1,524),(1,1714),(1,481),(1,1213),(1,441),(1,285),(1,1406),(1,253),(1,1949),(1,1090),(1,805),(1,430),(1,1152),(1,434),(1,1296),(1,276),(1,980),(1,948),(1,60),(1,1420),(1,547),(1,775),(1,1017),(1,1031),(1,928),(1,678),(1,146),(1,1273),(1,1431),(1,256),(1,1607),(1,358),(1,305),(1,1734),(1,898),(1,1370),(1,982),(1,1071),(1,1636),(1,796),(1,670),(1,1443),(1,1258),(1,1457),(1,427),(1,646),(1,1125),(1,1825),(1,409),(1,1079),(1,186),(1,167),(1,1322),(1,1606),(1,100),(1,238),(1,789),(1,1799),(1,290),(1,1948),(1,76),(1,1228),(1,588),(1,1635),(1,1139),(1,457),(1,1274),(1,944),(1,1938),(1,839),(1,1759),(1,641),(1,716),(1,542),(1,1463),(1,896),(1,1731),(1,1149),(1,942),(1,925),(1,1522),(1,263),(1,1745),(1,1684),(1,251),(1,154),(1,594),(1,1593),(1,1774),(1,1504),(1,1292),(1,1302),(1,1338),(1,698),(1,1962),(1,1311),(1,102),(1,694),(1,815),(1,1517),(1,1242),(1,1876),(1,1782),(1,765),(1,1278),(1,194),(1,598),(1,1069),(1,295),(1,106),(1,1493),(1,1423),(1,714),(1,758),(1,1221),(1,1906),(1,652),(1,991),(1,807),(1,1382),(1,1806),(1,424),(1,1748),(1,998),(1,1873),(1,1055),(1,886),(1,1546),(1,702),(1,415),(1,1619),(1,413),(1,1937),(1,344),(1,725),(1,400),(1,1679),(1,444),(1,1749),(1,160),(1,610),(1,1403),(1,644),(1,1036),(1,35),(1,689),(1,273),(1,574),(1,611),(1,1447),(1,1084),(1,1505),(1,1042),(1,222),(1,1525),(1,1859),(1,845),(1,634),(1,1609),(1,1553),(1,1931),(1,848),(1,1266),(1,1771),(1,997),(1,218),(1,906),(1,365),(1,1590),(1,773),(1,1329),(1,1232),(1,1678),(1,1794),(1,1007),(1,454),(1,1549),(1,1673),(1,1383),(1,1162),(1,402),(1,983),(1,1060),(1,883),(1,783),(1,118),(1,1344),(1,1027),(1,177),(1,1507),(1,417),(1,1086),(1,1875),(1,70),(1,645),(1,1808),(1,874),(1,176),(1,1523),(1,433),(1,1276),(1,731),(1,1709),(1,1637),(1,1569),(1,1269),(1,224),(1,345),(1,640),(1,318),(1,961),(1,1908),(1,1000),(1,902),(1,237),(1,1943),(1,23),(1,1736),(1,265),(1,303),(1,1677),(1,396),(1,1119),(1,1601),(1,296),(1,95),(1,1234),(1,1488),(1,1772),(1,32),(1,376),(1,213),(1,1367),(1,59),(1,519),(1,1805),(1,1020),(1,518),(1,1298),(1,77),(1,590),(1,823),(1,939),(1,1547),(1,1324),(1,1641),(1,422),(1,539),(1,512),(1,530),(1,860),(1,306),(1,1932),(1,162),(1,690),(1,1237),(1,1576),(1,1583),(1,1025),(1,1556),(1,580),(1,584),(1,617),(1,954),(1,601),(1,1889),(1,1001),(1,742),(1,9),(1,895),(1,1775),(1,299),(1,592),(1,673),(1,1286),(1,987),(1,334),(1,1281),(1,1154),(1,1115),(1,1330),(1,854),(1,1356),(1,1537),(1,1965),(1,1888),(1,600),(1,1348),(1,31),(1,393),(1,456),(1,548),(1,298),(1,532),(1,489),(1,1788),(1,507),(1,685),(1,889),(1,1241),(1,1946),(1,1066),(1,1250),(1,1502),(1,1349),(1,1720),(1,1150),(1,340),(1,1070),(1,582),(1,368),(1,643),(1,1011),(1,1391),(1,724),(1,67),(1,677),(1,173),(1,897),(1,335),(1,120),(1,534),(1,1109),(1,315),(1,1321),(1,1297),(1,1039),(1,307),(1,385),(1,450),(1,726),(1,517),(1,1579),(1,806),(1,206),(1,1939),(1,552),(1,780),(1,188),(1,1243),(1,174),(1,283),(1,1524),(1,562),(1,425),(1,1739),(1,241),(1,781),(1,279),(1,1928),(1,1335),(1,952),(1,181),(1,1527),(1,521),(1,666),(1,1290),(1,1051),(1,1929),(1,1880),(1,754),(1,139),(1,69),(1,46),(1,628),(1,414),(1,1600),(1,1384),(1,667),(1,526),(1,1711),(1,762),(1,838),(1,603),(1,471),(1,48),(1,1561),(1,525),(1,995),(1,1614),(1,197),(1,228),(1,1610),(1,785),(1,266),(1,52),(1,81),(1,606),(1,1326),(1,1695),(1,927),(1,1762),(1,1083),(1,1870),(1,624),(1,161),(1,1831),(1,1754),(1,500),(1,1959),(1,104),(1,836),(1,844),(1,1002),(1,272),(1,1728),(1,1233),(1,687),(1,1092),(1,151),(1,1122),(1,1581),(1,189),(1,356),(1,1882),(1,1316),(1,1364),(1,1916),(1,242),(1,1498),(1,1398),(1,1099),(1,1065),(1,1578),(1,1130),(1,1781),(1,1207),(1,180),(1,1285),(1,72),(1,51),(1,86),(1,29),(1,498),(1,437),(1,892),(1,208),(1,993),(1,155),(1,182),(1,1925),(1,1665),(1,958),(1,772),(1,1063),(1,1797),(1,1829),(1,19),(1,91),(1,1371),(1,1776),(1,50),(1,1660),(1,1239),(1,707),(1,1697),(1,1901),(1,681),(1,1418),(1,1730),(1,1915),(1,136),(1,17),(1,1291),(1,249),(1,1437),(1,648),(1,1968),(1,1093),(1,179),(1,771),(1,1545),(1,1375),(1,280),(1,955),(1,1227),(1,1131),(1,1657),(1,1362),(1,856),(1,1005),(1,1078),(1,1913),(1,831),(1,1592),(1,1037),(1,899),(1,1812),(1,1089),(1,733),(1,612),(1,583),(1,1160),(1,1555),(1,873),(1,93),(1,802),(1,350),(1,462),(1,159),(1,654),(1,639),(1,1783),(1,1732),(1,1009),(1,352),(1,1331),(1,1628),(1,1515),(1,586),(1,152),(1,1744),(1,985),(1,1098),(1,695),(1,1305),(1,1713),(1,1203),(1,585),(1,108),(1,520),(1,1270),(1,229),(1,1852),(1,1167),(1,1097),(1,609),(1,660),(1,107),(1,1337),(1,1035),(1,554),(1,1821),(1,1216),(1,735),(1,1810),(1,1589),(1,1698),(1,636),(1,822),(1,90),(1,39),(1,1257),(1,1532),(1,934),(1,1231),(1,115),(1,355),(1,1769),(1,143),(1,1715),(1,1622),(1,719),(1,658),(1,1914),(1,110),(1,473),(1,1763),(1,211),(1,1010),(1,57),(1,145),(1,1050),(1,659),(1,1340),(1,1617),(1,903),(1,198),(1,1814),(1,408),(1,207),(1,746),(1,656),(1,391),(1,7),(1,492),(1,28),(1,1479),(1,1764),(1,970),(1,438),(1,1700),(1,1784),(1,1883),(1,1068),(1,202),(1,1733),(1,445),(1,375),(1,1944),(1,322),(1,1113),(1,36),(1,269),(1,1072),(1,1616),(1,1807),(1,1458),(1,787),(1,778),(1,876),(1,1891),(1,1920),(1,931),(1,137),(1,1350),(1,1631),(1,608),(1,672),(1,372),(1,1486),(1,620),(1,166),(1,112),(1,440),(1,556),(1,1661),(1,1336),(1,971),(1,421),(1,826),(1,669),(1,1676),(1,607),(1,460),(1,1409),(1,245),(1,1746),(1,913),(1,632),(1,945),(1,1434),(1,1043),(1,851),(1,1976),(1,1921),(1,946),(1,147),(1,1215),(1,668),(1,665),(1,131),(1,327),(1,1780),(1,1211),(1,990),(1,347),(1,1008),(1,1449),(1,729),(1,1032),(1,1961),(1,1148),(1,1683),(1,1933),(1,901),(1,1501),(1,782),(1,501),(1,1740),(1,1738),(1,374),(1,602),(1,528),(1,893),(1,760),(1,1146),(1,1469),(1,1107),(1,812),(1,976),(1,908),(1,1438),(1,1585),(1,1424),(1,383),(1,336),(1,1245),(1,236),(1,680),(1,87),(1,986),(1,1708),(1,1026),(1,1111),(1,1353),(1,1143),(1,1490),(1,618),(1,453),(1,914),(1,1487),(1,1101),(1,1811),(1,544),(1,992),(1,516),(1,561),(1,1484),(1,1105),(1,467),(1,996),(1,1758),(1,907),(1,855),(1,398),(1,1820),(1,1940),(1,1315),(1,1494),(1,1199),(1,1554),(1,1953),(1,58),(1,887),(1,709),(1,1444),(1,63),(1,187),(1,1804),(1,1506),(1,721),(1,469),(1,1414),(1,1528),(1,625),(1,1835),(1,436),(1,1402),(1,71),(1,1779),(1,879),(1,257),(1,1792),(1,1102),(1,1368),(1,1038),(1,1451),(1,1354),(1,1751),(1,1793),(1,1871),(1,808),(1,482),(1,1838),(1,1393),(1,1798),(1,363),(1,1327),(1,966),(1,545),(1,170),(1,529),(1,650),(1,205),(1,158),(1,842),(1,1917),(1,1126),(1,1529),(1,884),(1,553),(1,1747),(1,1816),(1,655),(1,313),(1,924),(1,1346),(1,250),(1,1558),(1,964),(1,1456),(1,663),(1,567),(1,809),(1,587),(1,156),(1,1973),(1,1208),(1,810),(1,496),(1,1265),(1,1639),(1,223),(1,1531),(1,114),(1,1023),(1,684),(1,555),(1,1433),(1,464),(1,1158),(1,1142),(1,37),(1,1671),(1,195),(1,1325),(1,497),(1,1725),(1,1722),(1,288),(1,493),(1,722),(1,1518),(1,399),(1,1054),(1,857),(1,974),(1,1460),(1,949),(1,1323),(1,631),(1,339),(1,1357),(1,259),(1,613),(1,972),(1,923),(1,428),(1,200),(1,947),(1,1306),(1,232),(1,485),(1,309),(1,1161),(1,1289),(1,1704),(1,1238),(1,1163),(1,230),(1,682),(1,638),(1,420),(1,386),(1,1594),(1,819),(1,123),(1,61),(1,977),(1,1726),(1,967),(1,451),(1,853),(1,846),(1,367),(1,1140),(1,1752),(1,863),(1,877),(1,1544),(1,840),(1,1827),(1,24),(1,117),(1,476),(1,1960),(1,814),(1,1958),(1,1003),(1,1971),(1,1432),(1,1542),(1,1910),(1,564),(1,1819),(1,1559),(1,953),(1,1817),(1,741),(1,262),(1,740),(1,835),(1,319),(1,510),(1,671),(1,164),(1,293),(1,47),(1,1355),(1,1080),(1,651),(1,816),(1,204),(1,130),(1,348),(1,1692),(1,105),(1,1417),(1,127),(1,1741),(1,1566),(1,1468),(1,757),(1,715),(1,748),(1,1964),(1,514),(1,1588),(1,1691),(1,423),(1,1394),(1,869),(1,215),(1,1717),(1,1478),(1,21),(1,558),(1,304),(1,1461),(1,1718),(1,1341),(1,1492),(1,254),(1,1450),(1,1687),(1,1977),(1,573),(1,703),(1,134),(1,1851),(1,784),(1,193),(1,767),(1,338),(1,1624),(1,1299),(1,1580),(1,824),(1,764),(1,569),(1,711),(1,797),(1,1595),(1,65),(1,1485),(1,1707),(1,619),(1,926),(1,1317),(1,515),(1,1966),(1,825),(1,1435),(1,1053),(1,793),(1,712),(1,1462),(1,317),(1,1755),(1,1735),(1,275),(1,1127),(1,16),(1,1156),(1,1361),(1,940),(1,635),(1,1510),(1,1018),(1,1557),(1,1255),(1,1786),(1,231),(1,768),(1,264),(1,1860),(1,1712),(1,79),(1,478),(1,596),(1,364),(1,1599),(1,936),(1,191),(1,747),(1,1334),(1,311),(1,1574),(1,1526),(1,45),(1,13),(1,1470),(1,1087),(1,1625),(1,1832),(1,882),(1,560),(1,623),(1,1670),(1,1144),(1,531),(1,282),(1,1300),(1,557),(1,268),(1,333),(1,1900),(1,183),(1,1727),(1,710),(1,1770),(1,766),(1,1795),(1,686),(1,779),(1,5),(1,1893),(1,1514),(1,1145),(1,821),(1,49),(1,121),(1,1967),(1,1666),(1,109),(1,1861),(1,593),(1,491),(1,153),(1,759),(1,1646),(1,513),(1,243),(1,18),(1,708),(1,380),(1,1392),(1,353),(1,1204),(1,1894),(1,1582),(1,1539),(1,1587),(1,138),(1,834),(1,1056),(1,642),(1,969),(1,1824),(1,209),(1,38),(1,397),(1,328),(1,1877),(1,732),(1,341),(1,1570),(1,692),(1,701),(1,774),(1,1982),(1,302),(1,1879),(1,488),(1,1081),(1,292),(1,1892),(1,1855),(1,287),(1,472),(1,841),(1,33),(1,683),(1,477),(1,219),(1,1597),(1,1907),(1,255),(1,461),(1,963),(1,538),(1,337),(1,1787),(1,1096),(1,435),(1,1064),(1,1702),(1,62),(1,1312),(1,235),(1,1669),(1,1252),(1,575),(1,1015),(1,1141),(1,284),(1,1753),(1,1022),(1,753),(1,1379),(1,97),(1,615),(1,679),(1,1930),(1,938),(1,342),(1,919),(1,1874),(1,1264),(1,34),(1,1222),(1,484),(1,1626),(1,1903),(1,1565),(1,577),(1,868),(1,12),(1,597),(1,1217),(1,1803),(1,1890),(1,950),(1,1516),(1,1682),(1,1934),(1,657),(1,487),(1,1551),(1,379),(1,495),(1,1077),(1,647),(1,1904),(1,1586),(1,693),(1,1389),(1,566),(1,599),(1,1823),(1,570),(1,717),(1,357),(1,1151),(1,1016),(1,1508),(1,1509),(1,540),(1,878),(1,1134),(1,1019),(1,144),(1,1248),(1,1729),(1,314),(1,83),(1,142),(1,1813),(1,1686),(1,1192),(1,1623),(1,1277),(1,1513),(1,1408),(1,578),(1,1497),(1,622),(1,1387),(1,103),(1,73),(1,88),(1,111),(1,921),(1,800),(1,1756),(1,463),(1,920),(1,1796),(1,1256),(1,1057),(1,1120),(1,1640),(1,718),(1,1386),(1,486),(1,1246),(1,490),(1,1295),(1,649),(1,1446),(2,1172),(2,1170),(2,1168),(2,1171),(2,1169),(2,1173),(3,1182),(3,1181),(3,1183),(3,1178),(3,1180),(3,1179),(4,1844),(4,1846),(4,1847),(4,1845),(4,1848),(5,361),(5,1886),(5,1884),(5,1905),(5,362),(6,1190),(6,1189),(6,1191),(6,1188),(7,3),(7,14),(7,15),(7,4),(8,1185),(8,1187),(8,1184),(8,1186),(9,1212),(9,1201),(9,1202),(9,1200),(10,1174),(10,1177),(10,1175),(10,1176),(11,1218),(11,1219),(11,1220),(12,85),(12,84),(12,1668),(13,867),(13,865),(13,866),(14,1955),(14,1956),(14,1957),(15,1164),(15,1166),(15,1165),(16,1197),(16,1196),(16,1195),(17,1116),(17,1118),(17,1117),(18,389),(18,388),(18,387),(19,1649),(19,1648),(19,1650),(20,1427),(20,1426),(21,1224),(21,1223),(22,1841),(22,1840),(23,1206),(23,1205),(24,1395),(24,1396),(25,1135),(25,1136),(26,1261),(26,1260),(27,1856),(27,1857),(28,1454),(28,1453),(29,1742),(29,1743),(30,1864),(30,1865),(31,551),(31,550),(32,1253),(32,1254),(33,1651),(33,1652),(34,1850),(34,1849),(35,1477),(35,1476),(36,1473),(36,1472),(37,1313),(37,1314),(38,1236),(38,1235),(39,1853),(39,1854),(40,1656),(40,1655),(41,2),(41,1),(42,1912),(42,1911),(43,1836),(43,1837),(44,1681),(44,1680),(45,10),(45,11),(46,1413),(46,1412),(47,1272),(47,1271),(48,1899),(48,1898),(49,1279),(49,1280),(50,1193),(50,1194),(51,1209),(51,1210),(52,1377),(52,1378),(53,1843),(53,1842),(54,1359),(54,1358),(55,1308),(55,1309),(56,1422),(56,1421),(57,1465),(57,1466),(58,1867),(58,1868),(59,1343),(59,1342),(60,1863),(60,1862),(61,1511),(61,1512),(62,1294),(62,1293),(63,1520),(63,1521);
/*!40000 ALTER TABLE `domain_node` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `domain_user`
--

DROP TABLE IF EXISTS `domain_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `domain_user` (
  `domain_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `domain_user`
--

LOCK TABLES `domain_user` WRITE;
/*!40000 ALTER TABLE `domain_user` DISABLE KEYS */;
INSERT INTO `domain_user` VALUES (1,1),(2,1),(3,1),(4,1),(5,1),(6,1),(7,1),(8,1),(9,1),(10,1),(11,1),(12,1),(13,1),(14,1),(15,1),(16,1),(17,1),(18,1),(19,1),(20,1),(21,1),(22,1),(23,1),(24,1),(25,1),(26,1),(27,1),(28,1),(29,1),(30,1),(31,1),(32,1),(33,1),(34,1),(35,1),(36,1),(37,1),(38,1),(39,1),(40,1),(41,1),(42,1),(43,1),(44,1),(45,1),(46,1),(47,1),(48,1),(49,1),(50,1),(51,1),(52,1),(53,1),(54,1),(55,1),(56,1),(57,1),(58,1),(59,1),(60,1),(61,1),(62,1),(63,1);
/*!40000 ALTER TABLE `domain_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `edge`
--

DROP TABLE IF EXISTS `edge`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `edge` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `caller_name` varchar(350) NOT NULL,
  `callee_name` varchar(350) NOT NULL,
  `type_of_call` char(3) NOT NULL,
  `closeness` double DEFAULT '0',
  `project_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3842 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `edge`
--

LOCK TABLES `edge` WRITE;
/*!40000 ALTER TABLE `edge` DISABLE KEYS */;
INSERT INTO `edge` VALUES (1,'edu.ncsu.csc.itrust.BeanBuilder:build(java.util.Map,java.lang.Object)','edu.ncsu.csc.itrust.BeanBuilder:checkOverloadedMethods(java.lang.Object)','(O)',1,1),(2,'edu.ncsu.csc.itrust.Localization:instance()','edu.ncsu.csc.itrust.Localization:<init>()','(O)',1,1),(3,'edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)','edu.ncsu.csc.itrust.dao.DAOFactory:getFakeEmailDAO()','(M)',0.4,1),(4,'edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)','edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:sendEmailRecord(edu.ncsu.csc.itrust.beans.Email)','(M)',0.6666666666666666,1),(5,'edu.ncsu.csc.itrust.DateUtil:currentlyInMonthRange(int,int)','edu.ncsu.csc.itrust.DateUtil:isInMonthRange(java.util.Date,int,int)','(S)',1,1),(6,'edu.ncsu.csc.itrust.DateUtil:getSQLdateXyearsAgoFromNow(int)','edu.ncsu.csc.itrust.DateUtil:getDateXyearsAgoFromNow(int)','(S)',1,1),(7,'edu.ncsu.csc.itrust.DateUtil:getSQLdateXDaysAgoFromNow(int)','edu.ncsu.csc.itrust.DateUtil:getDateXDaysAgoFromNow(int)','(S)',1,1),(8,'edu.ncsu.csc.itrust.Messages:<clinit>()','edu.ncsu.csc.itrust.Localization:instance()','(S)',0.6666666666666666,1),(9,'edu.ncsu.csc.itrust.Messages:<clinit>()','edu.ncsu.csc.itrust.Localization:getCurrentLocale()','(M)',0.6666666666666666,1),(10,'edu.ncsu.csc.itrust.DBUtil:canObtainProductionInstance()','edu.ncsu.csc.itrust.dao.DAOFactory:getProductionInstance()','(S)',0.6666666666666666,1),(11,'edu.ncsu.csc.itrust.DBUtil:canObtainProductionInstance()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.00847457627118644,1),(12,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.04878048780487805,1),(13,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getHospitalsDAO()','(M)',0.3333333333333333,1),(14,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:getAvailableHospitals(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:getAllHospitals()','(M)',0.4,1),(15,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:getAvailableHospitals(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getHospitals(long)','(M)',0.3333333333333333,1),(16,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:getAvailableHospitals(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.031746031746031744,1),(17,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:getAssignedHospitals(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getHospitals(long)','(M)',0.4,1),(18,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:getAssignedHospitals(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03225806451612903,1),(19,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:assignHCPToHospital(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:assignHospital(long,java.lang.String)','(M)',0.6666666666666666,1),(20,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:assignHCPToHospital(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03225806451612903,1),(21,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:removeHCPAssignmentToHospital(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:removeHospitalAssignment(long,java.lang.String)','(M)',0.6666666666666666,1),(22,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:removeHCPAssignmentToHospital(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03225806451612903,1),(23,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:removeAllAssignmentsFromHCP(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:removeAllHospitalAssignmentsFrom(long)','(M)',0.6666666666666666,1),(24,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:removeAllAssignmentsFromHCP(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03225806451612903,1),(25,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:checkHCPID(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:checkPersonnelExists(long)','(M)',0.5,1),(26,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:checkHCPID(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03225806451612903,1),(27,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:checkLTHospital(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.08695652173913043,1),(28,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:checkLTHospital(java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getRole()','(M)',0.3333333333333333,1),(29,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:checkLTHospital(java.lang.String)','edu.ncsu.csc.itrust.enums.Role:toString()','(M)',0.2857142857142857,1),(30,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:checkLTHospital(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:checkLTHasHospital(long)','(M)',0.3333333333333333,1),(31,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:checkLTHospital(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03076923076923077,1),(32,'edu.ncsu.csc.itrust.action.ViewMyApptsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getApptDAO()','(M)',0.3333333333333333,1),(33,'edu.ncsu.csc.itrust.action.ViewMyApptsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.04878048780487805,1),(34,'edu.ncsu.csc.itrust.action.ViewMyApptsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.047619047619047616,1),(35,'edu.ncsu.csc.itrust.action.ViewMyApptsAction:getMyAppointments()','edu.ncsu.csc.itrust.dao.mysql.ApptDAO:getApptsFor(long)','(M)',0.6666666666666666,1),(36,'edu.ncsu.csc.itrust.action.ViewMyApptsAction:getAppointments(long)','edu.ncsu.csc.itrust.dao.mysql.ApptDAO:getApptsFor(long)','(M)',0.6666666666666666,1),(37,'edu.ncsu.csc.itrust.action.ViewMyApptsAction:getName(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','(M)',0.13333333333333333,1),(38,'edu.ncsu.csc.itrust.action.ViewMyApptsAction:getName(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.09523809523809523,1),(39,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getReferralDAO()','(M)',0.16666666666666666,1),(40,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.046511627906976744,1),(41,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.045454545454545456,1),(42,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.08,1),(43,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.action.SendMessageAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.2857142857142857,1),(44,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getReferral(long)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferral(long)','(M)',0.2857142857142857,1),(45,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:addReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getSenderID()','(M)',0.18181818181818182,1),(46,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:addReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03076923076923077,1),(47,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:addReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:addReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','(M)',0.3333333333333333,1),(48,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:addReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferral(long)','(M)',0.18181818181818182,1),(49,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:addReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','(M)',0.3333333333333333,1),(50,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:editReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getSenderID()','(M)',0.2222222222222222,1),(51,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:editReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.031746031746031744,1),(52,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:editReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:editReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','(M)',0.3333333333333333,1),(53,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:deleteReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getSenderID()','(M)',0.18181818181818182,1),(54,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:deleteReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03076923076923077,1),(55,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:deleteReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getId()','(M)',0.2857142857142857,1),(56,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:deleteReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:removeReferral(long)','(M)',0.3333333333333333,1),(57,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:deleteReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','(M)',0.3333333333333333,1),(58,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getPatientName(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getPatientID()','(M)',0.2222222222222222,1),(59,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getPatientName(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','(M)',0.13333333333333333,1),(60,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getReceivingHCPName(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getReceiverID()','(M)',0.2,1),(61,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getReceivingHCPName(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.09523809523809523,1),(62,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getReceivingHCPSpecialty(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getReceiverID()','(M)',0.18181818181818182,1),(63,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getReceivingHCPSpecialty(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.09523809523809523,1),(64,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getReceivingHCPSpecialty(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getSpecialty()','(M)',0.2,1),(65,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getOfficeVisitDate(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getOvid()','(M)',0.4,1),(66,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getOfficeVisitDate(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','(M)',0.14285714285714285,1),(67,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getOfficeVisitDate(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getVisitDateStr()','(M)',0.3333333333333333,1),(68,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getSenderID()','(M)',0.09090909090909091,1),(69,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.058823529411764705,1),(70,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getSpecialty()','(M)',0.08695652173913043,1),(71,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getReceiverID()','(M)',0.08333333333333333,1),(72,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.05714285714285714,1),(73,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.action.EditSingleReferralAction:getPatientName(edu.ncsu.csc.itrust.beans.ReferralBean)','(M)',0.1111111111111111,1),(74,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getReferralDetails()','(M)',0.1,1),(75,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getTimeStamp()','(M)',0.1111111111111111,1),(76,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.MessageBean:<init>()','(O)',0.1,1),(77,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.MessageBean:setFrom(long)','(M)',0.1,1),(78,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.MessageBean:setTo(long)','(M)',0.1,1),(79,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.MessageBean:setBody(java.lang.String)','(M)',0.1,1),(80,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.MessageBean:setSubject(java.lang.String)','(M)',0.1,1),(81,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.MessageBean:setRead(int)','(M)',0.10526315789473684,1),(82,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','(M)',0.10526315789473684,1),(83,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getPatientID()','(M)',0.08695652173913043,1),(84,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getTimeStamp()','(M)',0.1111111111111111,1),(85,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getSenderID()','(M)',0.09090909090909091,1),(86,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.05714285714285714,1),(87,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.058823529411764705,1),(88,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getSpecialty()','(M)',0.08695652173913043,1),(89,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getReceiverID()','(M)',0.08333333333333333,1),(90,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.action.EditSingleReferralAction:getPatientName(edu.ncsu.csc.itrust.beans.ReferralBean)','(M)',0.1111111111111111,1),(91,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getReferralDetails()','(M)',0.1,1),(92,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.MessageBean:<init>()','(O)',0.1,1),(93,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.MessageBean:setFrom(long)','(M)',0.1,1),(94,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.MessageBean:setTo(long)','(M)',0.1,1),(95,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.MessageBean:setBody(java.lang.String)','(M)',0.1,1),(96,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.MessageBean:setSubject(java.lang.String)','(M)',0.1,1),(97,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.MessageBean:setRead(int)','(M)',0.10526315789473684,1),(98,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','(M)',0.10526315789473684,1),(99,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getPatientID()','(M)',0.08695652173913043,1),(100,'edu.ncsu.csc.itrust.action.ChangeSessionTimeoutAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.dao.DAOFactory:getAccessDAO()','(M)',1,1),(101,'edu.ncsu.csc.itrust.action.ChangeSessionTimeoutAction:changeSessionTimeout(java.lang.String)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(java.lang.String[])','(O)',0.16666666666666666,1),(102,'edu.ncsu.csc.itrust.action.ChangeSessionTimeoutAction:changeSessionTimeout(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AccessDAO:setSessionTimeoutMins(int)','(M)',0.6666666666666666,1),(103,'edu.ncsu.csc.itrust.action.ChangeSessionTimeoutAction:getSessionTimeout()','edu.ncsu.csc.itrust.dao.mysql.AccessDAO:getSessionTimeoutMins()','(M)',1,1),(104,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:<clinit>()','edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:<init>(java.lang.String,int,java.lang.String)','(O)',0.5,1),(105,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:<clinit>()','edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:values()','(S)',0.4,1),(106,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:<clinit>()','edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:getTypeName()','(M)',0.5,1),(107,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getVisitRemindersDAO()','(M)',0.6666666666666666,1),(108,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.05,1),(109,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getVisitReminders(edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.030303030303030304,1),(110,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getVisitReminders(edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:$SWITCH_TABLE$edu$ncsu$csc$itrust$action$GetVisitRemindersAction$ReminderType()','(S)',0.2857142857142857,1),(111,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getVisitReminders(edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:ordinal()','(M)',0.25,1),(112,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getVisitReminders(edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType)','edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getDiagnosedVisitNeeders(long)','(M)',0.2857142857142857,1),(113,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getVisitReminders(edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType)','edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getFluShotDelinquents(long)','(M)',0.2857142857142857,1),(114,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getVisitReminders(edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getImmunizationNeeders(long)','(O)',0.2857142857142857,1),(115,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getImmunizationNeeders(long)','edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getPatients(long)','(M)',0.3333333333333333,1),(116,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getImmunizationNeeders(long)','edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm:getPatientID()','(M)',0.3333333333333333,1),(117,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getImmunizationNeeders(long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','(O)',0.3333333333333333,1),(118,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getImmunizationNeeders(long)','edu.ncsu.csc.itrust.beans.VisitFlag:<init>(java.lang.String,java.lang.String)','(O)',0.25,1),(119,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getImmunizationNeeders(long)','edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm:addVisitFlag(edu.ncsu.csc.itrust.beans.VisitFlag)','(M)',0.25,1),(120,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getProcedures(long)','(M)',0.10526315789473684,1),(121,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.046511627906976744,1),(122,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.beans.PatientBean:getDateOfBirth()','(M)',0.10526315789473684,1),(123,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.beans.PatientBean:getGender()','(M)',0.09090909090909091,1),(124,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.beans.ProcedureBean:getCPTCode()','(M)',0.08333333333333333,1),(125,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.beans.ProcedureBean:getDate()','(M)',0.1111111111111111,1),(126,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testHepB(int,java.util.Date,long)','(S)',0.1111111111111111,1),(127,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testRotaVirus(int,java.util.Date,long)','(S)',0.1111111111111111,1),(128,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testDipTet(int,java.util.Date,long)','(S)',0.1111111111111111,1),(129,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testHaemoFlu(int,java.util.Date,long,long)','(S)',0.1111111111111111,1),(130,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testPneumo(int,java.util.Date,long,long)','(S)',0.1111111111111111,1),(131,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testPolio(int,java.util.Date,long)','(S)',0.1111111111111111,1),(132,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testMeasles(int,java.util.Date,long)','(S)',0.1111111111111111,1),(133,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testVaricella(int,java.util.Date,long)','(S)',0.1111111111111111,1),(134,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testHepA(int,java.util.Date,long)','(S)',0.1111111111111111,1),(135,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.enums.Gender:getName()','(M)',0.1,1),(136,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testHPV(int,java.util.Date,long)','(S)',0.1111111111111111,1),(137,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testHPV(int,java.util.Date,long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:olderThan(java.util.Date,int,int,int)','(S)',0.18181818181818182,1),(138,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testHepA(int,java.util.Date,long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:olderThan(java.util.Date,int,int,int)','(S)',0.18181818181818182,1),(139,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testVaricella(int,java.util.Date,long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:olderThan(java.util.Date,int,int,int)','(S)',0.18181818181818182,1),(140,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testMeasles(int,java.util.Date,long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:olderThan(java.util.Date,int,int,int)','(S)',0.18181818181818182,1),(141,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testPolio(int,java.util.Date,long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:olderThan(java.util.Date,int,int,int)','(S)',0.18181818181818182,1),(142,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testPneumo(int,java.util.Date,long,long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:olderThan(java.util.Date,int,int,int)','(S)',0.16666666666666666,1),(143,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testPneumo(int,java.util.Date,long,long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:firstDoseAfter(java.util.Date,java.util.Date,int,int,int)','(S)',0.5,1),(144,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testHaemoFlu(int,java.util.Date,long,long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:olderThan(java.util.Date,int,int,int)','(S)',0.16666666666666666,1),(145,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testHaemoFlu(int,java.util.Date,long,long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:firstDoseAfter(java.util.Date,java.util.Date,int,int,int)','(S)',0.5,1),(146,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testDipTet(int,java.util.Date,long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:olderThan(java.util.Date,int,int,int)','(S)',0.18181818181818182,1),(147,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testRotaVirus(int,java.util.Date,long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:olderThan(java.util.Date,int,int,int)','(S)',0.18181818181818182,1),(148,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testHepB(int,java.util.Date,long)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:olderThan(java.util.Date,int,int,int)','(S)',0.18181818181818182,1),(149,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:olderThan(java.util.Date,int,int,int)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:endBefore(java.util.Date,java.util.Date,int,int,int)','(S)',0.6666666666666666,1),(150,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:firstDoseAfter(java.util.Date,java.util.Date,int,int,int)','edu.ncsu.csc.itrust.action.GetVisitRemindersAction:endBefore(java.util.Date,java.util.Date,int,int,int)','(S)',0.6666666666666666,1),(151,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:$SWITCH_TABLE$edu$ncsu$csc$itrust$action$GetVisitRemindersAction$ReminderType()','edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:values()','(S)',0.5,1),(152,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:$SWITCH_TABLE$edu$ncsu$csc$itrust$action$GetVisitRemindersAction$ReminderType()','edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:ordinal()','(M)',0.5,1),(153,'edu.ncsu.csc.itrust.action.AddERespAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.04878048780487805,1),(154,'edu.ncsu.csc.itrust.action.AddERespAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.09090909090909091,1),(155,'edu.ncsu.csc.itrust.action.AddERespAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.validate.AddPersonnelValidator:<init>()','(O)',0.15384615384615385,1),(156,'edu.ncsu.csc.itrust.action.AddERespAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.14285714285714285,1),(157,'edu.ncsu.csc.itrust.action.AddERespAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:addEmptyPersonnel(edu.ncsu.csc.itrust.enums.Role)','(M)',0.15384615384615385,1),(158,'edu.ncsu.csc.itrust.action.AddERespAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:setMID(long)','(M)',0.13333333333333333,1),(159,'edu.ncsu.csc.itrust.action.AddERespAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:editPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.14285714285714285,1),(160,'edu.ncsu.csc.itrust.action.AddERespAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.RandomPassword:getRandomPassword()','(S)',0.13333333333333333,1),(161,'edu.ncsu.csc.itrust.action.AddERespAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:addUser(java.lang.Long,edu.ncsu.csc.itrust.enums.Role,java.lang.String)','(M)',0.14285714285714285,1),(162,'edu.ncsu.csc.itrust.action.AddERespAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:setPassword(java.lang.String)','(M)',0.15384615384615385,1),(163,'edu.ncsu.csc.itrust.action.ViewPersonnelAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getFakeEmailDAO()','(M)',0.4,1),(164,'edu.ncsu.csc.itrust.action.ViewPersonnelAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.04878048780487805,1),(165,'edu.ncsu.csc.itrust.action.ViewPersonnelAction:getPersonnel(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.09523809523809523,1),(166,'edu.ncsu.csc.itrust.action.ViewPersonnelAction:getPersonnel(java.lang.String)','edu.ncsu.csc.itrust.Messages:getString(java.lang.String)','(S)',0.25,1),(167,'edu.ncsu.csc.itrust.action.ViewPersonnelAction:getPersonnel(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.031746031746031744,1),(168,'edu.ncsu.csc.itrust.action.ViewPersonnelAction:getEmailHistory()','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.09523809523809523,1),(169,'edu.ncsu.csc.itrust.action.ViewPersonnelAction:getEmailHistory()','edu.ncsu.csc.itrust.beans.PersonnelBean:getEmail()','(M)',0.18181818181818182,1),(170,'edu.ncsu.csc.itrust.action.ViewPersonnelAction:getEmailHistory()','edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getEmailsByPerson(java.lang.String)','(M)',0.4,1),(171,'edu.ncsu.csc.itrust.action.EditApptTypeAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:<init>()','(O)',0.6666666666666666,1),(172,'edu.ncsu.csc.itrust.action.EditApptTypeAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getApptTypeDAO()','(M)',0.6666666666666666,1),(173,'edu.ncsu.csc.itrust.action.EditApptTypeAction:getApptTypes()','edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:getApptTypes()','(M)',1,1),(174,'edu.ncsu.csc.itrust.action.EditApptTypeAction:addApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptTypeBean)','(M)',0.25,1),(175,'edu.ncsu.csc.itrust.action.EditApptTypeAction:addApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.action.EditApptTypeAction:getApptTypes()','(M)',0.25,1),(176,'edu.ncsu.csc.itrust.action.EditApptTypeAction:addApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.beans.ApptTypeBean:getName()','(M)',0.18181818181818182,1),(177,'edu.ncsu.csc.itrust.action.EditApptTypeAction:addApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:addApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','(M)',0.3333333333333333,1),(178,'edu.ncsu.csc.itrust.action.EditApptTypeAction:addApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.beans.ApptTypeBean:getDuration()','(M)',0.18181818181818182,1),(179,'edu.ncsu.csc.itrust.action.EditApptTypeAction:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptTypeBean)','(M)',0.2,1),(180,'edu.ncsu.csc.itrust.action.EditApptTypeAction:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.action.EditApptTypeAction:getApptTypes()','(M)',0.2,1),(181,'edu.ncsu.csc.itrust.action.EditApptTypeAction:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.beans.ApptTypeBean:getName()','(M)',0.15384615384615385,1),(182,'edu.ncsu.csc.itrust.action.EditApptTypeAction:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.beans.ApptTypeBean:getDuration()','(M)',0.15384615384615385,1),(183,'edu.ncsu.csc.itrust.action.EditApptTypeAction:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','(M)',0.25,1),(184,'edu.ncsu.csc.itrust.action.EditApptTypeAction:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05405405405405406,1),(185,'edu.ncsu.csc.itrust.action.EditApptTypeAction:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.0625,1),(186,'edu.ncsu.csc.itrust.action.EditApptTypeAction:getDurationByType(java.lang.String)','edu.ncsu.csc.itrust.action.EditApptTypeAction:getApptTypes()','(M)',0.3333333333333333,1),(187,'edu.ncsu.csc.itrust.action.EditApptTypeAction:getDurationByType(java.lang.String)','edu.ncsu.csc.itrust.beans.ApptTypeBean:getName()','(M)',0.2222222222222222,1),(188,'edu.ncsu.csc.itrust.action.EditApptTypeAction:getDurationByType(java.lang.String)','edu.ncsu.csc.itrust.beans.ApptTypeBean:getDuration()','(M)',0.2222222222222222,1),(189,'edu.ncsu.csc.itrust.action.LabProcHCPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.action.LabProcUAPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.4,1),(190,'edu.ncsu.csc.itrust.action.LabProcHCPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getLabProcedureDAO()','(M)',0.14285714285714285,1),(191,'edu.ncsu.csc.itrust.action.LabProcHCPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.08333333333333333,1),(192,'edu.ncsu.csc.itrust.action.LabProcHCPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.LabProcedureValidator:<init>()','(O)',0.3333333333333333,1),(193,'edu.ncsu.csc.itrust.action.LabProcHCPAction:sortByLOINC(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresLOINC(long)','(M)',1,1),(194,'edu.ncsu.csc.itrust.action.LabProcHCPAction:getLabProcForNextMonth()','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForLHCP(long)','(M)',0.4,1),(195,'edu.ncsu.csc.itrust.action.LabProcHCPAction:getLabProcForNextMonth()','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getID()','(M)',0.2857142857142857,1),(196,'edu.ncsu.csc.itrust.action.LabProcHCPAction:getLabProcForNextMonth()','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForLHCPForNextMonth(long)','(M)',0.5,1),(197,'edu.ncsu.csc.itrust.action.LabProcHCPAction:changePrivacy(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedure(long)','(M)',0.15384615384615385,1),(198,'edu.ncsu.csc.itrust.action.LabProcHCPAction:changePrivacy(long)','edu.ncsu.csc.itrust.action.LabProcHCPAction:checkAccess(long)','(M)',0.25,1),(199,'edu.ncsu.csc.itrust.action.LabProcHCPAction:changePrivacy(long)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getRights()','(M)',0.18181818181818182,1),(200,'edu.ncsu.csc.itrust.action.LabProcHCPAction:changePrivacy(long)','edu.ncsu.csc.itrust.beans.LabProcedureBean:allow()','(M)',0.25,1),(201,'edu.ncsu.csc.itrust.action.LabProcHCPAction:changePrivacy(long)','edu.ncsu.csc.itrust.beans.LabProcedureBean:restrict()','(M)',0.25,1),(202,'edu.ncsu.csc.itrust.action.LabProcHCPAction:changePrivacy(long)','edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','(M)',0.2,1),(203,'edu.ncsu.csc.itrust.action.LabProcHCPAction:changePrivacy(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateRights(edu.ncsu.csc.itrust.beans.LabProcedureBean)','(M)',0.25,1),(204,'edu.ncsu.csc.itrust.action.LabProcHCPAction:checkAccess(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedure(long)','(M)',0.2,1),(205,'edu.ncsu.csc.itrust.action.LabProcHCPAction:checkAccess(long)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getOvID()','(M)',0.3333333333333333,1),(206,'edu.ncsu.csc.itrust.action.LabProcHCPAction:checkAccess(long)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','(M)',0.13333333333333333,1),(207,'edu.ncsu.csc.itrust.action.LabProcHCPAction:checkAccess(long)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getHcpID()','(M)',0.18181818181818182,1),(208,'edu.ncsu.csc.itrust.action.LabProcHCPAction:getPendingCount()','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getHCPPendingCount(long)','(M)',1,1),(209,'edu.ncsu.csc.itrust.action.LabProcHCPAction:viewProceduresByHCP()','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getHCPLabProcedures(long)','(M)',1,1),(210,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.046511627906976744,1),(211,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.08333333333333333,1),(212,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.047619047619047616,1),(213,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.action.DeclareHCPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.4,1),(214,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getMID()','(M)',0.08,1),(215,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:<init>()','(O)',0.10526315789473684,1),(216,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:setHCPMID(long)','(M)',0.1111111111111111,1),(217,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getFullName()','(M)',0.09090909090909091,1),(218,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:setHCPName(java.lang.String)','(M)',0.1111111111111111,1),(219,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:setOVDate(java.lang.String)','(M)',0.1111111111111111,1),(220,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getSpecialty()','(M)',0.08695652173913043,1),(221,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:setHCPSpecialty(java.lang.String)','(M)',0.1111111111111111,1),(222,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getStreetAddress1()','(M)',0.1,1),(223,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getStreetAddress2()','(M)',0.1,1),(224,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getCity()','(M)',0.1,1),(225,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getState()','(M)',0.1,1),(226,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getZip()','(M)',0.09523809523809523,1),(227,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:setHCPAddr(java.lang.String)','(M)',0.1111111111111111,1),(228,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:checkDeclaredHCP(long,long)','(M)',0.10526315789473684,1),(229,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:setDesignated(boolean)','(M)',0.10526315789473684,1),(230,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:matchPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getLastName()','(M)',0.25,1),(231,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:matchPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getSpecialty()','(M)',0.2,1),(232,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:matchPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getZip()','(M)',0.25,1),(233,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisits(long)','(M)',0.1111111111111111,1),(234,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getHcpID()','(M)',0.10526315789473684,1),(235,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getVisitDate()','(M)',0.125,1),(236,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.06666666666666667,1),(237,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:matchPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String,java.lang.String,java.lang.String)','(O)',0.15384615384615385,1),(238,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getVisitDateStr()','(M)',0.13333333333333333,1),(239,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)','(O)',0.15384615384615385,1),(240,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDeclaredHCPs(long)','(M)',0.1,1),(241,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getMID()','(M)',0.09523809523809523,1),(242,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:getHCPMID()','(M)',0.13333333333333333,1),(243,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.05405405405405406,1),(244,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.027777777777777776,1),(245,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getVisitedHCPs()','edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','(O)',0.6666666666666666,1),(246,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getNamedHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:<init>()','(O)',0.3333333333333333,1),(247,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getNamedHCP(java.lang.String)','edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getVisitedHCPs()','(M)',0.3333333333333333,1),(248,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getNamedHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:getHCPName()','(M)',0.3333333333333333,1),(249,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:undeclareHCP(java.lang.String)','edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getVisitedHCPs()','(M)',0.25,1),(250,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:undeclareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:getHCPName()','(M)',0.25,1),(251,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:undeclareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:getHCPMID()','(M)',0.25,1),(252,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:undeclareHCP(java.lang.String)','edu.ncsu.csc.itrust.action.DeclareHCPAction:undeclareHCP(java.lang.String)','(M)',0.3333333333333333,1),(253,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:undeclareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:setDesignated(boolean)','(M)',0.25,1),(254,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getVisitedHCPs()','(M)',0.08333333333333333,1),(255,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:getHCPName()','(M)',0.08333333333333333,1),(256,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:getHCPMID()','(M)',0.08333333333333333,1),(257,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:checkDeclaredHCP(long,long)','(M)',0.08333333333333333,1),(258,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.action.DeclareHCPAction:declareHCP(java.lang.String)','(M)',0.09090909090909091,1),(259,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:setDesignated(boolean)','(M)',0.08333333333333333,1),(260,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getAllPersonnel()','(M)',0.09090909090909091,1),(261,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getFullName()','(M)',0.07407407407407407,1),(262,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:<init>()','(O)',0.08333333333333333,1),(263,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getMID()','(M)',0.06666666666666667,1),(264,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:setHCPMID(long)','(M)',0.08695652173913043,1),(265,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:setHCPName(java.lang.String)','(M)',0.08695652173913043,1),(266,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:setOVDate(java.lang.String)','(M)',0.08695652173913043,1),(267,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getSpecialty()','(M)',0.07142857142857142,1),(268,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:setHCPSpecialty(java.lang.String)','(M)',0.08695652173913043,1),(269,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getStreetAddress1()','(M)',0.08,1),(270,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getStreetAddress2()','(M)',0.08,1),(271,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getCity()','(M)',0.08,1),(272,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getState()','(M)',0.08,1),(273,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getZip()','(M)',0.07692307692307693,1),(274,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPVisitBean:setHCPAddr(java.lang.String)','(M)',0.08695652173913043,1),(275,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:checkDeclared(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:checkDeclaredHCP(long,long)','(M)',0.5,1),(276,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:filterHCPList(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)','(O)',0.6666666666666666,1),(277,'edu.ncsu.csc.itrust.action.AddUAPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.04878048780487805,1),(278,'edu.ncsu.csc.itrust.action.AddUAPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.09090909090909091,1),(279,'edu.ncsu.csc.itrust.action.AddUAPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.validate.AddPersonnelValidator:<init>()','(O)',0.15384615384615385,1),(280,'edu.ncsu.csc.itrust.action.AddUAPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.14285714285714285,1),(281,'edu.ncsu.csc.itrust.action.AddUAPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:addEmptyPersonnel(edu.ncsu.csc.itrust.enums.Role)','(M)',0.15384615384615385,1),(282,'edu.ncsu.csc.itrust.action.AddUAPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:setMID(long)','(M)',0.13333333333333333,1),(283,'edu.ncsu.csc.itrust.action.AddUAPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:editPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.14285714285714285,1),(284,'edu.ncsu.csc.itrust.action.AddUAPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.RandomPassword:getRandomPassword()','(S)',0.13333333333333333,1),(285,'edu.ncsu.csc.itrust.action.AddUAPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:addUser(java.lang.Long,edu.ncsu.csc.itrust.enums.Role,java.lang.String)','(M)',0.14285714285714285,1),(286,'edu.ncsu.csc.itrust.action.AddUAPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:setPassword(java.lang.String)','(M)',0.15384615384615385,1),(287,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:<init>()','(O)',0.6666666666666666,1),(288,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getICDCodesDAO()','(M)',0.25,1),(289,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:validate(edu.ncsu.csc.itrust.beans.DiagnosisBean)','(M)',0.2,1),(290,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','(M)',0.25,1),(291,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()','(M)',0.1,1),(292,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getDescription()','(M)',0.14285714285714285,1),(293,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05405405405405406,1),(294,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.0625,1),(295,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.iTrustException:getMessage()','(M)',0.13333333333333333,1),(296,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:validate(edu.ncsu.csc.itrust.beans.DiagnosisBean)','(M)',0.2857142857142857,1),(297,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','(M)',0.4,1),(298,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.058823529411764705,1),(299,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.06896551724137931,1),(300,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.EmailUtil:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.14285714285714285,1),(301,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.04878048780487805,1),(302,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.047619047619047616,1),(303,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.07407407407407407,1),(304,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getRepresentees()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresented(long)','(M)',0.2857142857142857,1),(305,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescribingDoctor(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPrescribingDoctor(edu.ncsu.csc.itrust.beans.PrescriptionBean)','(M)',0.6666666666666666,1),(306,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.04878048780487805,1),(307,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPrescriptions(long)','(M)',0.11764705882352941,1),(308,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.06451612903225806,1),(309,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresenting(long)','(M)',0.09523809523809523,1),(310,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.PatientBean:getMID()','(M)',0.08333333333333333,1),(311,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDeclaredHCPs(long)','(M)',0.08695652173913043,1),(312,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.PersonnelBean:getMID()','(M)',0.08333333333333333,1),(313,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getUAPsForHCP(long)','(M)',0.11764705882352941,1),(314,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.Email:<init>()','(O)',0.07142857142857142,1),(315,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)','(M)',0.07142857142857142,1),(316,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)','(M)',0.07142857142857142,1),(317,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.Messages:getString(java.lang.String)','(S)',0.1,1),(318,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.Email:setSubject(java.lang.String)','(M)',0.07407407407407407,1),(319,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)','(M)',0.07142857142857142,1),(320,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)','(M)',0.07692307692307693,1),(321,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.MedicationBeanValidator:<init>()','(O)',0.6666666666666666,1),(322,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getNDCodesDAO()','(M)',0.2857142857142857,1),(323,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.validate.MedicationBeanValidator:validate(edu.ncsu.csc.itrust.beans.MedicationBean)','(M)',0.2,1),(324,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','(M)',0.2,1),(325,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()','(M)',0.1,1),(326,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getDescription()','(M)',0.11764705882352941,1),(327,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05405405405405406,1),(328,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.0625,1),(329,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.iTrustException:getMessage()','(M)',0.13333333333333333,1),(330,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.validate.MedicationBeanValidator:validate(edu.ncsu.csc.itrust.beans.MedicationBean)','(M)',0.2857142857142857,1),(331,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:updateCode(edu.ncsu.csc.itrust.beans.MedicationBean)','(O)',0.4,1),(332,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.058823529411764705,1),(333,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.06896551724137931,1),(334,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:updateCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.MedicationBean)','(M)',0.6666666666666666,1),(335,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()','(M)',0.1,1),(336,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getNDCode(java.lang.String)','(M)',0.2,1),(337,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05405405405405406,1),(338,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.0625,1),(339,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','(M)',0.25,1),(340,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getDescription()','(M)',0.11764705882352941,1),(341,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.iTrustException:getMessage()','(M)',0.13333333333333333,1),(342,'edu.ncsu.csc.itrust.action.AddOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','edu.ncsu.csc.itrust.action.base.PatientBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','(O)',0.15384615384615385,1),(343,'edu.ncsu.csc.itrust.action.AddOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.09090909090909091,1),(344,'edu.ncsu.csc.itrust.action.AddOfficeVisitAction:addEmptyOfficeVisit(long)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:<init>()','(O)',0.3333333333333333,1),(345,'edu.ncsu.csc.itrust.action.AddOfficeVisitAction:addEmptyOfficeVisit(long)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setHcpID(long)','(M)',0.2222222222222222,1),(346,'edu.ncsu.csc.itrust.action.AddOfficeVisitAction:addEmptyOfficeVisit(long)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setPatientID(long)','(M)',0.2222222222222222,1),(347,'edu.ncsu.csc.itrust.action.AddOfficeVisitAction:addEmptyOfficeVisit(long)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:add(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','(M)',0.3333333333333333,1),(348,'edu.ncsu.csc.itrust.action.AddOfficeVisitAction:getAllOfficeVisits()','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisits(long)','(M)',0.2857142857142857,1),(349,'edu.ncsu.csc.itrust.action.AddOfficeVisitAction:getUserName()','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.09090909090909091,1),(350,'edu.ncsu.csc.itrust.action.AddOfficeVisitAction:getUserName()','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','(M)',0.2,1),(351,'edu.ncsu.csc.itrust.action.LabProcUAPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getTransactionDAO()','(M)',0.2857142857142857,1),(352,'edu.ncsu.csc.itrust.action.LabProcUAPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getLabProcedureDAO()','(M)',0.15384615384615385,1),(353,'edu.ncsu.csc.itrust.action.LabProcUAPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.LabProcedureValidator:<init>()','(O)',0.4,1),(354,'edu.ncsu.csc.itrust.action.LabProcUAPAction:updateProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','(M)',0.18181818181818182,1),(355,'edu.ncsu.csc.itrust.action.LabProcUAPAction:updateProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getStatus()','(M)',0.14285714285714285,1),(356,'edu.ncsu.csc.itrust.action.LabProcUAPAction:updateProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getProcedureID()','(M)',0.15384615384615385,1),(357,'edu.ncsu.csc.itrust.action.LabProcUAPAction:updateProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedure(long)','(M)',0.14285714285714285,1),(358,'edu.ncsu.csc.itrust.action.LabProcUAPAction:updateProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.EmailUtil:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.10526315789473684,1),(359,'edu.ncsu.csc.itrust.action.LabProcUAPAction:updateProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)','(O)',0.2222222222222222,1),(360,'edu.ncsu.csc.itrust.action.LabProcUAPAction:updateProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)','(M)',0.10526315789473684,1),(361,'edu.ncsu.csc.itrust.action.LabProcUAPAction:updateProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','(M)',0.2,1),(362,'edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.13333333333333333,1),(363,'edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getPid()','(M)',0.11764705882352941,1),(364,'edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.05263157894736842,1),(365,'edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.Email:<init>()','(O)',0.08,1),(366,'edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)','(M)',0.08,1),(367,'edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.07142857142857142,1),(368,'edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)','(M)',0.08,1),(369,'edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.Email:setSubject(java.lang.String)','(M)',0.08333333333333333,1),(370,'edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.PatientBean:getFullName()','(M)',0.10526315789473684,1),(371,'edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getLoinc()','(M)',0.13333333333333333,1),(372,'edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getStatus()','(M)',0.1111111111111111,1),(373,'edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)','(M)',0.08,1),(374,'edu.ncsu.csc.itrust.action.LabProcUAPAction:viewProcedures(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresDate(long)','(M)',1,1),(375,'edu.ncsu.csc.itrust.action.LabProcUAPAction:viewPatientProcedures(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedures(long,long)','(M)',1,1),(376,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.047619047619047616,1),(377,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.046511627906976744,1),(378,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getMessageDAO()','(M)',0.3333333333333333,1),(379,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getReferralDAO()','(M)',0.18181818181818182,1),(380,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMyMessages()','edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFor(long)','(M)',1,1),(381,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMyMessagesTimeAscending()','edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesTimeAscending(long)','(M)',1,1),(382,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMyMessagesNameAscending()','edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesNameAscending(long)','(M)',1,1),(383,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMyMessagesNameDescending()','edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesNameDescending(long)','(M)',1,1),(384,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMySentMessages()','edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFrom(long)','(M)',1,1),(385,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMySentMessagesTimeAscending()','edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromTimeAscending(long)','(M)',1,1),(386,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMySentMessagesNameAscending()','edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromNameAscending(long)','(M)',1,1),(387,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMySentMessagesNameDescending()','edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromNameDescending(long)','(M)',1,1),(388,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:filterMessages(java.util.List,java.lang.String)','edu.ncsu.csc.itrust.beans.MessageBean:getFrom()','(M)',0.25,1),(389,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:filterMessages(java.util.List,java.lang.String)','edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getName(long)','(M)',0.3333333333333333,1),(390,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:filterMessages(java.util.List,java.lang.String)','edu.ncsu.csc.itrust.beans.MessageBean:getSubject()','(M)',0.25,1),(391,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:filterMessages(java.util.List,java.lang.String)','edu.ncsu.csc.itrust.beans.MessageBean:getBody()','(M)',0.2222222222222222,1),(392,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:filterMessages(java.util.List,java.lang.String)','edu.ncsu.csc.itrust.beans.MessageBean:getSentDate()','(M)',0.3333333333333333,1),(393,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getName(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','(M)',0.13333333333333333,1),(394,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getName(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.09523809523809523,1),(395,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getPersonnelName(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.1,1),(396,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:setRead(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.dao.mysql.MessageDAO:updateRead(edu.ncsu.csc.itrust.beans.MessageBean)','(M)',0.6666666666666666,1),(397,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:setRead(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.0625,1),(398,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getUnreadCount()','edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMyMessages()','(M)',0.6666666666666666,1),(399,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getUnreadCount()','edu.ncsu.csc.itrust.beans.MessageBean:getRead()','(M)',0.5,1),(400,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:linkedToReferral(long)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:isReferralMessage(long)','(M)',1,1),(401,'edu.ncsu.csc.itrust.action.ViewAdverseEventAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.dao.DAOFactory:getAdverseEventDAO()','(M)',0.4,1),(402,'edu.ncsu.csc.itrust.action.ViewAdverseEventAction:getAdverseEvent(int)','edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getReport(int)','(M)',0.6666666666666666,1),(403,'edu.ncsu.csc.itrust.action.ViewAdverseEventAction:getUnremovedAdverseEventsByCode(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getUnremovedAdverseEventsByCode(java.lang.String)','(M)',1,1),(404,'edu.ncsu.csc.itrust.action.ViewAdverseEventAction:getNameForCode(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getNameForCode(java.lang.String)','(M)',1,1),(405,'edu.ncsu.csc.itrust.action.AddApptAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.ApptBeanValidator:<init>()','(O)',0.3333333333333333,1),(406,'edu.ncsu.csc.itrust.action.AddApptAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getApptDAO()','(M)',0.2857142857142857,1),(407,'edu.ncsu.csc.itrust.action.AddApptAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.047619047619047616,1),(408,'edu.ncsu.csc.itrust.action.AddApptAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.046511627906976744,1),(409,'edu.ncsu.csc.itrust.action.AddApptAction:addAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.validate.ApptBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptBean)','(M)',0.2857142857142857,1),(410,'edu.ncsu.csc.itrust.action.AddApptAction:addAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getDate()','(M)',0.2,1),(411,'edu.ncsu.csc.itrust.action.AddApptAction:addAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.dao.mysql.ApptDAO:scheduleAppt(edu.ncsu.csc.itrust.beans.ApptBean)','(M)',0.4,1),(412,'edu.ncsu.csc.itrust.action.AddApptAction:addAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getApptType()','(M)',0.25,1),(413,'edu.ncsu.csc.itrust.action.AddApptAction:getName(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','(M)',0.13333333333333333,1),(414,'edu.ncsu.csc.itrust.action.AddApptAction:getName(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.09523809523809523,1),(415,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.18181818181818182,1),(416,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getProceduresDAO()','(M)',0.18181818181818182,1),(417,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getCPTCodesDAO()','(M)',0.25,1),(418,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.18181818181818182,1),(419,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getProceduresDAO()','(M)',0.18181818181818182,1),(420,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getCPTCodesDAO()','(M)',0.25,1),(421,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:getImmunizations()','edu.ncsu.csc.itrust.action.EditImmunizationsAction:isUnsaved()','(M)',0.5,1),(422,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:getImmunizations()','edu.ncsu.csc.itrust.action.EditImmunizationsAction:getOvID()','(M)',0.5,1),(423,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:getImmunizations()','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getImmunizationList(long)','(M)',0.4,1),(424,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:addImmunization(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.action.EditImmunizationsAction:verifySaved()','(M)',0.4,1),(425,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:addImmunization(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:add(edu.ncsu.csc.itrust.beans.ProcedureBean)','(M)',0.5,1),(426,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:editImmunization(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.action.EditImmunizationsAction:verifySaved()','(M)',0.4,1),(427,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:editImmunization(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:edit(edu.ncsu.csc.itrust.beans.ProcedureBean)','(M)',0.5,1),(428,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:deleteImmunization(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.action.EditImmunizationsAction:verifySaved()','(M)',0.3333333333333333,1),(429,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:deleteImmunization(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getOvProcedureID()','(M)',0.3333333333333333,1),(430,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:deleteImmunization(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:remove(long)','(M)',0.4,1),(431,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:getImmunizationCodes()','edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getImmunizationCPTCodes()','(M)',1,1),(432,'edu.ncsu.csc.itrust.action.EmergencyReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.PatientBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','(O)',0.10526315789473684,1),(433,'edu.ncsu.csc.itrust.action.EmergencyReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.043478260869565216,1),(434,'edu.ncsu.csc.itrust.action.EmergencyReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getAllergyDAO()','(M)',0.15384615384615385,1),(435,'edu.ncsu.csc.itrust.action.EmergencyReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.07142857142857142,1),(436,'edu.ncsu.csc.itrust.action.EmergencyReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.EmailUtil:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.10526315789473684,1),(437,'edu.ncsu.csc.itrust.action.EmergencyReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.058823529411764705,1),(438,'edu.ncsu.csc.itrust.action.EmergencyReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.EmergencyReportAction:makeEmail()','(O)',0.2222222222222222,1),(439,'edu.ncsu.csc.itrust.action.EmergencyReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)','(M)',0.10526315789473684,1),(440,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getPatientName()','edu.ncsu.csc.itrust.beans.PatientBean:getFirstName()','(M)',0.2857142857142857,1),(441,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getPatientName()','edu.ncsu.csc.itrust.beans.PatientBean:getLastName()','(M)',0.2857142857142857,1),(442,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getPatientAge()','edu.ncsu.csc.itrust.beans.PatientBean:getAge()','(M)',0.4,1),(443,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getPatientGender()','edu.ncsu.csc.itrust.beans.PatientBean:getGender()','(M)',0.2857142857142857,1),(444,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getPatientGender()','edu.ncsu.csc.itrust.enums.Gender:toString()','(M)',0.4,1),(445,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getPatientEmergencyContact()','edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyName()','(M)',0.4,1),(446,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getPatientEmergencyContact()','edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone()','(M)',0.5,1),(447,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getBloodType()','edu.ncsu.csc.itrust.beans.PatientBean:getBloodType()','(M)',0.6666666666666666,1),(448,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getAllergies()','edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:getAllergies(long)','(M)',0.4,1),(449,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getCurrentPrescriptions()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getCurrentPrescriptions(long)','(M)',0.3333333333333333,1),(450,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getCurrentPrescriptions()','edu.ncsu.csc.itrust.beans.PrescriptionBean:getMedication()','(M)',0.2,1),(451,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getCurrentPrescriptions()','edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()','(M)',0.11764705882352941,1),(452,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getCurrentPrescriptions()','edu.ncsu.csc.itrust.enums.PrescriptionAlerts:isAlert(java.lang.String)','(S)',0.4,1),(453,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getWarningDiagnoses()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)','(M)',0.11764705882352941,1),(454,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getWarningDiagnoses()','edu.ncsu.csc.itrust.beans.DiagnosisBean:getVisitID()','(M)',0.16666666666666666,1),(455,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getWarningDiagnoses()','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','(M)',0.10526315789473684,1),(456,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getWarningDiagnoses()','edu.ncsu.csc.itrust.beans.DiagnosisBean:getClassification()','(M)',0.18181818181818182,1),(457,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getWarningDiagnoses()','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getVisitDate()','(M)',0.16666666666666666,1),(458,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getWarningDiagnoses()','edu.ncsu.csc.itrust.beans.DiagnosisBean:getDescription()','(M)',0.13333333333333333,1),(459,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getWarningDiagnoses()','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.06060606060606061,1),(460,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getWarningDiagnoses()','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.029411764705882353,1),(461,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getImmunizations()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getImmunizationProcedures(long)','(M)',1,1),(462,'edu.ncsu.csc.itrust.action.EmergencyReportAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:<init>()','(O)',0.09090909090909091,1),(463,'edu.ncsu.csc.itrust.action.EmergencyReportAction:makeEmail()','edu.ncsu.csc.itrust.beans.PatientBean:getMID()','(M)',0.1111111111111111,1),(464,'edu.ncsu.csc.itrust.action.EmergencyReportAction:makeEmail()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresenting(long)','(M)',0.13333333333333333,1),(465,'edu.ncsu.csc.itrust.action.EmergencyReportAction:makeEmail()','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.08,1),(466,'edu.ncsu.csc.itrust.action.EmergencyReportAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)','(M)',0.09090909090909091,1),(467,'edu.ncsu.csc.itrust.action.EmergencyReportAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)','(M)',0.09090909090909091,1),(468,'edu.ncsu.csc.itrust.action.EmergencyReportAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:setSubject(java.lang.String)','(M)',0.09523809523809523,1),(469,'edu.ncsu.csc.itrust.action.EmergencyReportAction:makeEmail()','edu.ncsu.csc.itrust.beans.PatientBean:getFullName()','(M)',0.125,1),(470,'edu.ncsu.csc.itrust.action.EmergencyReportAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)','(M)',0.09090909090909091,1),(471,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getTransactionDAO()','(M)',0.3333333333333333,1),(472,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.05,1),(473,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getAccesses(java.lang.String,java.lang.String,java.lang.String,boolean)','edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getRepresented(long)','(M)',0.25,1),(474,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getAccesses(java.lang.String,java.lang.String,java.lang.String,boolean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDeclaredHCPs(long)','(M)',0.13333333333333333,1),(475,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getAccesses(java.lang.String,java.lang.String,java.lang.String,boolean)','edu.ncsu.csc.itrust.beans.PatientBean:getMID()','(M)',0.125,1),(476,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getAccesses(java.lang.String,java.lang.String,java.lang.String,boolean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(java.lang.String[])','(O)',0.11764705882352941,1),(477,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getAccesses(java.lang.String,java.lang.String,java.lang.String,boolean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getMID()','(M)',0.125,1),(478,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getAccesses(java.lang.String,java.lang.String,java.lang.String,boolean)','edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getAllRecordAccesses(long,long,boolean)','(M)',0.25,1),(479,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getAccesses(java.lang.String,java.lang.String,java.lang.String,boolean)','edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getRecordAccesses(long,long,java.util.Date,java.util.Date,boolean)','(M)',0.25,1),(480,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getDefaultStart(java.util.List)','edu.ncsu.csc.itrust.beans.TransactionBean:getTimeLogged()','(M)',0.6666666666666666,1),(481,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getDefaultEnd(java.util.List)','edu.ncsu.csc.itrust.beans.TransactionBean:getTimeLogged()','(M)',0.6666666666666666,1),(482,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getRepresented(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresented(long)','(M)',0.2857142857142857,1),(483,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getRemoteMonitoringDAO()','(M)',0.4,1),(484,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.09090909090909091,1),(485,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getPatientsData()','edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientsData(long)','(M)',0.5,1),(486,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getPatientDataByDate(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(java.lang.String[])','(O)',0.16666666666666666,1),(487,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getPatientDataByDate(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientDataByDate(long,java.util.Date,java.util.Date)','(M)',0.6666666666666666,1),(488,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getPatientDataByType(long,java.lang.String)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(java.lang.String[])','(O)',0.16666666666666666,1),(489,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getPatientDataByType(long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientDataByType(long,java.lang.String)','(M)',0.6666666666666666,1),(490,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getPatientDataWithoutLogging()','edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientsData(long)','(M)',0.5,1),(491,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getPatientName(long)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','(M)',0.2222222222222222,1),(492,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getMonitoringHCPs()','edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getMonitoringHCPs(long)','(M)',1,1),(493,'edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,long)','edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:<init>()','(O)',0.5,1),(494,'edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getRemoteMonitoringDAO()','(M)',0.3333333333333333,1),(495,'edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.08695652173913043,1),(496,'edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction:getTelemedicineBean(long)','edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getTelemedicineBean(long)','(M)',1,1),(497,'edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction:addRemoteMonitoringData(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','(M)',0.3333333333333333,1),(498,'edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction:addRemoteMonitoringData(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserRole(long)','(M)',0.2,1),(499,'edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction:addRemoteMonitoringData(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.enums.Role:getUserRolesString()','(M)',0.4,1),(500,'edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction:addRemoteMonitoringData(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)','(M)',0.4,1),(501,'edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction:getPatientName(long)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','(M)',0.2222222222222222,1),(502,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.dao.DAOFactory:getICDCodesDAO()','(M)',0.25,1),(503,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.dao.DAOFactory:getDiagnosesDAO()','(M)',0.2857142857142857,1),(504,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getDiagnosisCodes()','edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getAllICDCodes()','(M)',0.6666666666666666,1),(505,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getDiagnosisStatistics(java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(java.lang.String[])','(O)',0.14285714285714285,1),(506,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getDiagnosisStatistics(java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getDiagnosisCodes()','(M)',0.4,1),(507,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getDiagnosisStatistics(java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()','(M)',0.11764705882352941,1),(508,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getDiagnosisStatistics(java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getDiagnosisCounts(java.lang.String,java.lang.String,java.util.Date,java.util.Date)','(M)',0.2857142857142857,1),(509,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getEpidemicStatistics(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(java.lang.String[])','(O)',0.1111111111111111,1),(510,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getEpidemicStatistics(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getCountForWeekOf(java.lang.String,java.lang.String,java.util.Date)','(M)',0.18181818181818182,1),(511,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getEpidemicStatistics(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:<init>(java.lang.String,long,long,java.util.Date,java.util.Date)','(O)',0.2,1),(512,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getEpidemicStatistics(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:findEarliestIncident(java.lang.String)','(M)',0.2,1),(513,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getEpidemicStatistics(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:getZipStats()','(M)',0.18181818181818182,1),(514,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getEpidemicStatistics(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:getRegionStats()','(M)',0.15384615384615385,1),(515,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getEpidemicStatistics(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:setRegionStats(long)','(M)',0.2222222222222222,1),(516,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getEpidemicStatistics(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:setZipStats(long)','(M)',0.2222222222222222,1),(517,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:isFluEpidemic(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:calcThreshold(double)','(O)',0.5,1),(518,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:isFluEpidemic(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getCountForWeekOf(java.lang.String,java.lang.String,java.util.Date)','(M)',0.3333333333333333,1),(519,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:isFluEpidemic(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:getRegionStats()','(M)',0.25,1),(520,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:isMalariaEpidemic(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getCountForWeekOf(java.lang.String,java.lang.String,java.util.Date)','(M)',0.3333333333333333,1),(521,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:isMalariaEpidemic(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:getRegionStats()','(M)',0.25,1),(522,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:isMalariaEpidemic(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:findEarliestIncident(java.lang.String)','(M)',0.4,1),(523,'edu.ncsu.csc.itrust.action.AddPatientAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.05,1),(524,'edu.ncsu.csc.itrust.action.AddPatientAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.09090909090909091,1),(525,'edu.ncsu.csc.itrust.action.AddPatientAction:addPatient(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.validate.AddPatientValidator:<init>()','(O)',0.2222222222222222,1),(526,'edu.ncsu.csc.itrust.action.AddPatientAction:addPatient(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.validate.AddPatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','(M)',0.2,1),(527,'edu.ncsu.csc.itrust.action.AddPatientAction:addPatient(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addEmptyPatient()','(M)',0.2222222222222222,1),(528,'edu.ncsu.csc.itrust.action.AddPatientAction:addPatient(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:setMID(long)','(M)',0.18181818181818182,1),(529,'edu.ncsu.csc.itrust.action.AddPatientAction:addPatient(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.RandomPassword:getRandomPassword()','(S)',0.13333333333333333,1),(530,'edu.ncsu.csc.itrust.action.AddPatientAction:addPatient(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:addUser(java.lang.Long,edu.ncsu.csc.itrust.enums.Role,java.lang.String)','(M)',0.14285714285714285,1),(531,'edu.ncsu.csc.itrust.action.AddPatientAction:addPatient(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:setPassword(java.lang.String)','(M)',0.2222222222222222,1),(532,'edu.ncsu.csc.itrust.action.AddPatientAction:addPatient(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:editPatient(edu.ncsu.csc.itrust.beans.PatientBean,long)','(M)',0.2,1),(533,'edu.ncsu.csc.itrust.action.SendMessageAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.045454545454545456,1),(534,'edu.ncsu.csc.itrust.action.SendMessageAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.044444444444444446,1),(535,'edu.ncsu.csc.itrust.action.SendMessageAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.EmailUtil:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.11764705882352941,1),(536,'edu.ncsu.csc.itrust.action.SendMessageAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getMessageDAO()','(M)',0.25,1),(537,'edu.ncsu.csc.itrust.action.SendMessageAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.EMailValidator:<init>()','(O)',0.2857142857142857,1),(538,'edu.ncsu.csc.itrust.action.SendMessageAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.MessageValidator:<init>()','(O)',0.2857142857142857,1),(539,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.validate.MessageValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','(M)',0.10526315789473684,1),(540,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.validate.EMailValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','(M)',0.10526315789473684,1),(541,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.dao.mysql.MessageDAO:addMessage(edu.ncsu.csc.itrust.beans.MessageBean)','(M)',0.1111111111111111,1),(542,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.Email:<init>()','(O)',0.06666666666666667,1),(543,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)','(M)',0.06666666666666667,1),(544,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.MessageBean:getFrom()','(M)',0.1,1),(545,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.MessageBean:getTo()','(M)',0.10526315789473684,1),(546,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.05714285714285714,1),(547,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getEmail()','(M)',0.08,1),(548,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getFullName()','(M)',0.08695652173913043,1),(549,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.046511627906976744,1),(550,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.06060606060606061,1),(551,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.PatientBean:getFullName()','(M)',0.08333333333333333,1),(552,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)','(M)',0.06666666666666667,1),(553,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.Email:setSubject(java.lang.String)','(M)',0.06896551724137931,1),(554,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)','(M)',0.06666666666666667,1),(555,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)','(M)',0.07142857142857142,1),(556,'edu.ncsu.csc.itrust.action.SendMessageAction:getPatientName(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','(M)',0.14285714285714285,1),(557,'edu.ncsu.csc.itrust.action.SendMessageAction:getPersonnelName(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.1,1),(558,'edu.ncsu.csc.itrust.action.SendMessageAction:getMyRepresentees()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresented(long)','(M)',0.25,1),(559,'edu.ncsu.csc.itrust.action.SendMessageAction:getMyRepresentees()','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.0625,1),(560,'edu.ncsu.csc.itrust.action.SendMessageAction:getMyDLHCPs()','edu.ncsu.csc.itrust.action.SendMessageAction:getDLHCPsFor(long)','(M)',1,1),(561,'edu.ncsu.csc.itrust.action.SendMessageAction:getDLHCPsFor(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDeclaredHCPs(long)','(M)',0.2,1),(562,'edu.ncsu.csc.itrust.action.SendMessageAction:getDLHCPsFor(long)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.0625,1),(563,'edu.ncsu.csc.itrust.action.EditPatientAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.PatientBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','(O)',0.125,1),(564,'edu.ncsu.csc.itrust.action.EditPatientAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.validate.PatientValidator:<init>()','(O)',0.3333333333333333,1),(565,'edu.ncsu.csc.itrust.action.EditPatientAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.046511627906976744,1),(566,'edu.ncsu.csc.itrust.action.EditPatientAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.045454545454545456,1),(567,'edu.ncsu.csc.itrust.action.EditPatientAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.EmailUtil:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.125,1),(568,'edu.ncsu.csc.itrust.action.EditPatientAction:updateInformation(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:setMID(long)','(M)',0.25,1),(569,'edu.ncsu.csc.itrust.action.EditPatientAction:updateInformation(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','(M)',0.2857142857142857,1),(570,'edu.ncsu.csc.itrust.action.EditPatientAction:updateInformation(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:editPatient(edu.ncsu.csc.itrust.beans.PatientBean,long)','(M)',0.2857142857142857,1),(571,'edu.ncsu.csc.itrust.action.EditPatientAction:updateInformation(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.action.EditPatientAction:makeEmail()','(O)',0.3333333333333333,1),(572,'edu.ncsu.csc.itrust.action.EditPatientAction:updateInformation(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)','(M)',0.125,1),(573,'edu.ncsu.csc.itrust.action.EditPatientAction:getPatient()','edu.ncsu.csc.itrust.action.EditPatientAction:getPid()','(M)',0.4,1),(574,'edu.ncsu.csc.itrust.action.EditPatientAction:getPatient()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.07142857142857142,1),(575,'edu.ncsu.csc.itrust.action.EditPatientAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:<init>()','(O)',0.09090909090909091,1),(576,'edu.ncsu.csc.itrust.action.EditPatientAction:makeEmail()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresenting(long)','(M)',0.13333333333333333,1),(577,'edu.ncsu.csc.itrust.action.EditPatientAction:makeEmail()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.05714285714285714,1),(578,'edu.ncsu.csc.itrust.action.EditPatientAction:makeEmail()','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.08,1),(579,'edu.ncsu.csc.itrust.action.EditPatientAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)','(M)',0.09090909090909091,1),(580,'edu.ncsu.csc.itrust.action.EditPatientAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)','(M)',0.09090909090909091,1),(581,'edu.ncsu.csc.itrust.action.EditPatientAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:setSubject(java.lang.String)','(M)',0.09523809523809523,1),(582,'edu.ncsu.csc.itrust.action.EditPatientAction:makeEmail()','edu.ncsu.csc.itrust.beans.PatientBean:getFullName()','(M)',0.125,1),(583,'edu.ncsu.csc.itrust.action.EditPatientAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)','(M)',0.09090909090909091,1),(584,'edu.ncsu.csc.itrust.action.EditPatientAction:editMessageFilter(java.lang.String)','edu.ncsu.csc.itrust.action.EditPatientAction:getPatient()','(M)',0.5,1),(585,'edu.ncsu.csc.itrust.action.EditPatientAction:editMessageFilter(java.lang.String)','edu.ncsu.csc.itrust.beans.PatientBean:setMessageFilter(java.lang.String)','(M)',0.4,1),(586,'edu.ncsu.csc.itrust.action.EditPatientAction:editMessageFilter(java.lang.String)','edu.ncsu.csc.itrust.action.EditPatientAction:updateInformation(edu.ncsu.csc.itrust.beans.PatientBean)','(M)',0.5,1),(587,'edu.ncsu.csc.itrust.action.EditPatientAction:hasHistory()','edu.ncsu.csc.itrust.action.EditPatientAction:getPid()','(M)',0.4,1),(588,'edu.ncsu.csc.itrust.action.EditPatientAction:hasHistory()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:hasHistory(long)','(M)',0.6666666666666666,1),(589,'edu.ncsu.csc.itrust.action.EditPatientAction:getHistory()','edu.ncsu.csc.itrust.action.EditPatientAction:getPid()','(M)',0.4,1),(590,'edu.ncsu.csc.itrust.action.EditPatientAction:getHistory()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatientHistory(long)','(M)',0.6666666666666666,1),(591,'edu.ncsu.csc.itrust.action.EditPatientAction:getEmployeeName(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.1,1),(592,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:<init>()','(O)',0.6666666666666666,1),(593,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getCPTCodesDAO()','(M)',0.2857142857142857,1),(594,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:validate(edu.ncsu.csc.itrust.beans.ProcedureBean)','(M)',0.2,1),(595,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','(M)',0.25,1),(596,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getCPTCode()','(M)',0.14285714285714285,1),(597,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getDescription()','(M)',0.16666666666666666,1),(598,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05405405405405406,1),(599,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.0625,1),(600,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.iTrustException:getMessage()','(M)',0.13333333333333333,1),(601,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:validate(edu.ncsu.csc.itrust.beans.ProcedureBean)','(M)',0.2857142857142857,1),(602,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:updateCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','(O)',0.4,1),(603,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.058823529411764705,1),(604,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.06896551724137931,1),(605,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:updateCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','(M)',1,1),(606,'edu.ncsu.csc.itrust.action.ViewPrescriptionRenewalNeedsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.05128205128205128,1),(607,'edu.ncsu.csc.itrust.action.ViewPrescriptionRenewalNeedsAction:getRenewalNeedsPatients()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRenewalNeedsPatients(long)','(M)',0.6666666666666666,1),(608,'edu.ncsu.csc.itrust.action.ViewPrescriptionRenewalNeedsAction:getRenewalNeedsPatients()','edu.ncsu.csc.itrust.Messages:getString(java.lang.String)','(S)',0.2857142857142857,1),(609,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getReferralDAO()','(M)',0.2,1),(610,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.04878048780487805,1),(611,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.047619047619047616,1),(612,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:getReferrals(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getSenderQuery(long)','(M)',0.6666666666666666,1),(613,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:getReferrals(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:query(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','(M)',0.5,1),(614,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:getReferral(long)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferral(long)','(M)',0.2857142857142857,1),(615,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:getPatientName(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getPatientID()','(M)',0.2222222222222222,1),(616,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:getPatientName(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','(M)',0.13333333333333333,1),(617,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:getReceivingHCPName(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getReceiverID()','(M)',0.2,1),(618,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:getReceivingHCPName(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.09523809523809523,1),(619,'edu.ncsu.csc.itrust.action.AddHCPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.04878048780487805,1),(620,'edu.ncsu.csc.itrust.action.AddHCPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.09090909090909091,1),(621,'edu.ncsu.csc.itrust.action.AddHCPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.validate.AddPersonnelValidator:<init>()','(O)',0.15384615384615385,1),(622,'edu.ncsu.csc.itrust.action.AddHCPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.14285714285714285,1),(623,'edu.ncsu.csc.itrust.action.AddHCPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:addEmptyPersonnel(edu.ncsu.csc.itrust.enums.Role)','(M)',0.15384615384615385,1),(624,'edu.ncsu.csc.itrust.action.AddHCPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:setMID(long)','(M)',0.13333333333333333,1),(625,'edu.ncsu.csc.itrust.action.AddHCPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:editPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.14285714285714285,1),(626,'edu.ncsu.csc.itrust.action.AddHCPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.RandomPassword:getRandomPassword()','(S)',0.13333333333333333,1),(627,'edu.ncsu.csc.itrust.action.AddHCPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:addUser(java.lang.Long,edu.ncsu.csc.itrust.enums.Role,java.lang.String)','(M)',0.14285714285714285,1),(628,'edu.ncsu.csc.itrust.action.AddHCPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:setPassword(java.lang.String)','(M)',0.15384615384615385,1),(629,'edu.ncsu.csc.itrust.action.ViewMyLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getLabProcedureDAO()','(M)',0.18181818181818182,1),(630,'edu.ncsu.csc.itrust.action.ViewMyLabProceduresAction:getLabProcedures()','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatient(long)','(M)',0.6666666666666666,1),(631,'edu.ncsu.csc.itrust.action.ViewMyLabProceduresAction:getUnviewedCount()','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getPatientUnviewedCount(long)','(M)',1,1),(632,'edu.ncsu.csc.itrust.action.EventLoggingAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.dao.DAOFactory:getTransactionDAO()','(M)',0.4,1),(633,'edu.ncsu.csc.itrust.action.EventLoggingAction:logEvent(edu.ncsu.csc.itrust.enums.TransactionType,long,long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:logTransaction(edu.ncsu.csc.itrust.enums.TransactionType,long,long,java.lang.String)','(M)',0.6666666666666666,1),(634,'edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getReferralDAO()','(M)',0.2222222222222222,1),(635,'edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.09090909090909091,1),(636,'edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction:getReferralsForReceivingHCP()','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForReceivingHCP(long)','(M)',1,1),(637,'edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction:getReferralsForReceivingHCPUnread()','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForReceivingHCPUnread(long)','(M)',1,1),(638,'edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction:getReferralByID(int)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferral(long)','(M)',0.2857142857142857,1),(639,'edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction:updateReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:editReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','(M)',0.5,1),(640,'edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction:getOVDate(long)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','(M)',0.16666666666666666,1),(641,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getHospitalsDAO()','(M)',0.4,1),(642,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.validate.HospitalBeanValidator:<init>()','(O)',0.2,1),(643,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.validate.HospitalBeanValidator:validate(edu.ncsu.csc.itrust.beans.HospitalBean)','(M)',0.18181818181818182,1),(644,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','(M)',0.2222222222222222,1),(645,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.beans.HospitalBean:getHospitalID()','(M)',0.16666666666666666,1),(646,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.beans.HospitalBean:getHospitalName()','(M)',0.16666666666666666,1),(647,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05263157894736842,1),(648,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.06060606060606061,1),(649,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.exception.iTrustException:getMessage()','(M)',0.125,1),(650,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:updateInformation(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.validate.HospitalBeanValidator:<init>()','(O)',0.2857142857142857,1),(651,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:updateInformation(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.validate.HospitalBeanValidator:validate(edu.ncsu.csc.itrust.beans.HospitalBean)','(M)',0.25,1),(652,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:updateInformation(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.action.UpdateHospitalListAction:updateHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','(O)',0.3333333333333333,1),(653,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:updateInformation(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05714285714285714,1),(654,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:updateInformation(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.06666666666666667,1),(655,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:updateHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:updateHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','(M)',1,1),(656,'edu.ncsu.csc.itrust.action.AddLTAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.04878048780487805,1),(657,'edu.ncsu.csc.itrust.action.AddLTAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.09090909090909091,1),(658,'edu.ncsu.csc.itrust.action.AddLTAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.validate.AddPersonnelValidator:<init>()','(O)',0.15384615384615385,1),(659,'edu.ncsu.csc.itrust.action.AddLTAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.14285714285714285,1),(660,'edu.ncsu.csc.itrust.action.AddLTAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:addEmptyPersonnel(edu.ncsu.csc.itrust.enums.Role)','(M)',0.15384615384615385,1),(661,'edu.ncsu.csc.itrust.action.AddLTAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:setMID(long)','(M)',0.13333333333333333,1),(662,'edu.ncsu.csc.itrust.action.AddLTAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:editPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.14285714285714285,1),(663,'edu.ncsu.csc.itrust.action.AddLTAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.RandomPassword:getRandomPassword()','(S)',0.13333333333333333,1),(664,'edu.ncsu.csc.itrust.action.AddLTAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:addUser(java.lang.Long,edu.ncsu.csc.itrust.enums.Role,java.lang.String)','(M)',0.14285714285714285,1),(665,'edu.ncsu.csc.itrust.action.AddLTAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:setPassword(java.lang.String)','(M)',0.15384615384615385,1),(666,'edu.ncsu.csc.itrust.action.LabProcLTAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.08695652173913043,1),(667,'edu.ncsu.csc.itrust.action.LabProcLTAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getLabProcedureDAO()','(M)',0.15384615384615385,1),(668,'edu.ncsu.csc.itrust.action.LabProcLTAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.047619047619047616,1),(669,'edu.ncsu.csc.itrust.action.LabProcLTAction:viewInTransitProcedures(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresInTransitForLabTech(long)','(M)',1,1),(670,'edu.ncsu.csc.itrust.action.LabProcLTAction:viewReceivedProcedures(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresReceivedForLabTech(long)','(M)',1,1),(671,'edu.ncsu.csc.itrust.action.LabProcLTAction:viewTestingProcedures(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresTestingForLabTech(long)','(M)',1,1),(672,'edu.ncsu.csc.itrust.action.LabProcLTAction:getLabProcedure(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedure(long)','(M)',0.2857142857142857,1),(673,'edu.ncsu.csc.itrust.action.LabProcLTAction:getHCPName(long)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','(M)',0.14285714285714285,1),(674,'edu.ncsu.csc.itrust.action.LabProcLTAction:getHCPName(long)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getHcpID()','(M)',0.2,1),(675,'edu.ncsu.csc.itrust.action.LabProcLTAction:getHCPName(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.09090909090909091,1),(676,'edu.ncsu.csc.itrust.action.LabProcLTAction:submitResults(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedure(long)','(M)',0.15384615384615385,1),(677,'edu.ncsu.csc.itrust.action.LabProcLTAction:submitResults(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setNumericalResult(java.lang.String)','(M)',0.2222222222222222,1),(678,'edu.ncsu.csc.itrust.action.LabProcLTAction:submitResults(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setNumericalResultUnit(java.lang.String)','(M)',0.2222222222222222,1),(679,'edu.ncsu.csc.itrust.action.LabProcLTAction:submitResults(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setUpperBound(java.lang.String)','(M)',0.2222222222222222,1),(680,'edu.ncsu.csc.itrust.action.LabProcLTAction:submitResults(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setLowerBound(java.lang.String)','(M)',0.2222222222222222,1),(681,'edu.ncsu.csc.itrust.action.LabProcLTAction:submitResults(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:submitTestResults(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','(M)',0.25,1),(682,'edu.ncsu.csc.itrust.action.LabProcLTAction:submitResults(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05405405405405406,1),(683,'edu.ncsu.csc.itrust.action.LabProcLTAction:submitReceived(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:submitReceivedLP(long)','(M)',1,1),(684,'edu.ncsu.csc.itrust.action.LabProcLTAction:setToTesting(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:setLPToTesting(long)','(M)',1,1),(685,'edu.ncsu.csc.itrust.action.EditMonitoringListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getRemoteMonitoringDAO()','(M)',0.4,1),(686,'edu.ncsu.csc.itrust.action.EditMonitoringListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.09090909090909091,1),(687,'edu.ncsu.csc.itrust.action.EditMonitoringListAction:addToList(long,edu.ncsu.csc.itrust.beans.TelemedicineBean)','edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:addPatientToList(long,long,edu.ncsu.csc.itrust.beans.TelemedicineBean)','(M)',1,1),(688,'edu.ncsu.csc.itrust.action.EditMonitoringListAction:removeFromList(long)','edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:removePatientFromList(long,long)','(M)',1,1),(689,'edu.ncsu.csc.itrust.action.EditMonitoringListAction:isPatientInList(long)','edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientsData(long)','(M)',0.4,1),(690,'edu.ncsu.csc.itrust.action.EditMonitoringListAction:isPatientInList(long)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getPatientMID()','(M)',0.5,1),(691,'edu.ncsu.csc.itrust.action.EditMonitoringListAction:getPatientName(long)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','(M)',0.2222222222222222,1),(692,'edu.ncsu.csc.itrust.action.SurveyAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getSurveyDAO()','(M)',0.4,1),(693,'edu.ncsu.csc.itrust.action.SurveyAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.09090909090909091,1),(694,'edu.ncsu.csc.itrust.action.SurveyAction:addSurvey(edu.ncsu.csc.itrust.beans.SurveyBean,long)','edu.ncsu.csc.itrust.beans.SurveyBean:setVisitID(long)','(M)',0.5,1),(695,'edu.ncsu.csc.itrust.action.SurveyAction:addSurvey(edu.ncsu.csc.itrust.beans.SurveyBean,long)','edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:addCompletedSurvey(edu.ncsu.csc.itrust.beans.SurveyBean,java.util.Date)','(M)',0.6666666666666666,1),(696,'edu.ncsu.csc.itrust.action.SurveyAction:getPatientMID(long)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','(M)',0.15384615384615385,1),(697,'edu.ncsu.csc.itrust.action.SurveyAction:getPatientMID(long)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getPatientID()','(M)',0.3333333333333333,1),(698,'edu.ncsu.csc.itrust.action.AddDrugListAction$OverwriteDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getNDCodesDAO()','(M)',0.14285714285714285,1),(699,'edu.ncsu.csc.itrust.action.AddDrugListAction$OverwriteDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.beans.MedicationBean:<init>()','(O)',0.16666666666666666,1),(700,'edu.ncsu.csc.itrust.action.AddDrugListAction$OverwriteDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.beans.MedicationBean:setNDCode(java.lang.String)','(M)',0.18181818181818182,1),(701,'edu.ncsu.csc.itrust.action.AddDrugListAction$OverwriteDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.beans.MedicationBean:setDescription(java.lang.String)','(M)',0.16666666666666666,1),(702,'edu.ncsu.csc.itrust.action.AddDrugListAction$OverwriteDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','(M)',0.16666666666666666,1),(703,'edu.ncsu.csc.itrust.action.AddDrugListAction$OverwriteDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()','(M)',0.09090909090909091,1),(704,'edu.ncsu.csc.itrust.action.AddDrugListAction$OverwriteDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.beans.MedicationBean:getDescription()','(M)',0.10526315789473684,1),(705,'edu.ncsu.csc.itrust.action.AddDrugListAction$OverwriteDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.action.EventLoggingAction:logEvent(edu.ncsu.csc.itrust.enums.TransactionType,long,long,java.lang.String)','(M)',0.16666666666666666,1),(706,'edu.ncsu.csc.itrust.action.AddDrugListAction$OverwriteDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.MedicationBean)','(M)',0.18181818181818182,1),(707,'edu.ncsu.csc.itrust.action.AddDrugListAction$SkipDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getNDCodesDAO()','(M)',0.15384615384615385,1),(708,'edu.ncsu.csc.itrust.action.AddDrugListAction$SkipDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.beans.MedicationBean:<init>()','(O)',0.18181818181818182,1),(709,'edu.ncsu.csc.itrust.action.AddDrugListAction$SkipDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.beans.MedicationBean:setNDCode(java.lang.String)','(M)',0.2,1),(710,'edu.ncsu.csc.itrust.action.AddDrugListAction$SkipDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.beans.MedicationBean:setDescription(java.lang.String)','(M)',0.18181818181818182,1),(711,'edu.ncsu.csc.itrust.action.AddDrugListAction$SkipDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','(M)',0.18181818181818182,1),(712,'edu.ncsu.csc.itrust.action.AddDrugListAction$SkipDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()','(M)',0.09523809523809523,1),(713,'edu.ncsu.csc.itrust.action.AddDrugListAction$SkipDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.beans.MedicationBean:getDescription()','(M)',0.1111111111111111,1),(714,'edu.ncsu.csc.itrust.action.AddDrugListAction$SkipDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','edu.ncsu.csc.itrust.action.EventLoggingAction:logEvent(edu.ncsu.csc.itrust.enums.TransactionType,long,long,java.lang.String)','(M)',0.18181818181818182,1),(715,'edu.ncsu.csc.itrust.action.AddDrugListAction:LoadFile(java.io.InputStream)','edu.ncsu.csc.itrust.action.AddDrugListAction$DrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)','(I)',1,1),(716,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.LOINCBeanValidator:<init>()','(O)',0.6666666666666666,1),(717,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getLOINCDAO()','(M)',0.3333333333333333,1),(718,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:add(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','(M)',0.25,1),(719,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:add(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:getAllLOINC()','(M)',0.2857142857142857,1),(720,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:add(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getLabProcedureCode()','(M)',0.2,1),(721,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:add(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(java.lang.String[])','(O)',0.13333333333333333,1),(722,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:add(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:addLOINC(edu.ncsu.csc.itrust.beans.LOINCbean)','(M)',0.3333333333333333,1),(723,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:updateInformation(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','(M)',0.25,1),(724,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:updateInformation(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:update(edu.ncsu.csc.itrust.beans.LOINCbean)','(M)',0.3333333333333333,1),(725,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:updateInformation(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getLabProcedureCode()','(M)',0.2,1),(726,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:updateInformation(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05714285714285714,1),(727,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:updateInformation(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.06666666666666667,1),(728,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.047619047619047616,1),(729,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.08695652173913043,1),(730,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.04878048780487805,1),(731,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForLHCP(long)','(M)',0.08333333333333333,1),(732,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientVisitBean:<init>()','(O)',0.08695652173913043,1),(733,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getPatientID()','(M)',0.07692307692307693,1),(734,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.041666666666666664,1),(735,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientVisitBean:setPatient(edu.ncsu.csc.itrust.beans.PatientBean)','(M)',0.08695652173913043,1),(736,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientBean:getFullName()','(M)',0.06896551724137931,1),(737,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientVisitBean:setPatientName(java.lang.String)','(M)',0.08695652173913043,1),(738,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getVisitDateStr()','(M)',0.08,1),(739,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientVisitBean:setLastOVDateM(java.lang.String)','(M)',0.08695652173913043,1),(740,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientVisitBean:setLastOVDateD(java.lang.String)','(M)',0.08695652173913043,1),(741,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientVisitBean:setLastOVDateY(java.lang.String)','(M)',0.08695652173913043,1),(742,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientVisitBean:setLastOVDate(java.lang.String)','(M)',0.08333333333333333,1),(743,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientBean:getStreetAddress1()','(M)',0.08,1),(744,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientBean:getStreetAddress2()','(M)',0.08,1),(745,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientVisitBean:setAddress1(java.lang.String)','(M)',0.08695652173913043,1),(746,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientBean:getCity()','(M)',0.07692307692307693,1),(747,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientBean:getState()','(M)',0.07692307692307693,1),(748,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientBean:getZip()','(M)',0.08,1),(749,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.beans.PatientVisitBean:setAddress2(java.lang.String)','(M)',0.08695652173913043,1),(750,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:PatientInList(edu.ncsu.csc.itrust.beans.PatientBean,java.lang.String)','(O)',0.08695652173913043,1),(751,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.0425531914893617,1),(752,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.024390243902439025,1),(753,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:PatientInList(edu.ncsu.csc.itrust.beans.PatientBean,java.lang.String)','edu.ncsu.csc.itrust.beans.PatientVisitBean:getPatientName()','(M)',0.4,1),(754,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:PatientInList(edu.ncsu.csc.itrust.beans.PatientBean,java.lang.String)','edu.ncsu.csc.itrust.beans.PatientBean:getFullName()','(M)',0.18181818181818182,1),(755,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:PatientInList(edu.ncsu.csc.itrust.beans.PatientBean,java.lang.String)','edu.ncsu.csc.itrust.beans.PatientVisitBean:getLastOVDateY()','(M)',0.4,1),(756,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:PatientInList(edu.ncsu.csc.itrust.beans.PatientBean,java.lang.String)','edu.ncsu.csc.itrust.beans.PatientVisitBean:setLastOVDate(java.lang.String)','(M)',0.3333333333333333,1),(757,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:getPatients()','edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()','(O)',1,1),(758,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:getPersonnel()','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.10526315789473684,1),(759,'edu.ncsu.csc.itrust.action.EditReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.16666666666666666,1),(760,'edu.ncsu.csc.itrust.action.EditReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getReferralDAO()','(M)',0.18181818181818182,1),(761,'edu.ncsu.csc.itrust.action.EditReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.047619047619047616,1),(762,'edu.ncsu.csc.itrust.action.EditReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.046511627906976744,1),(763,'edu.ncsu.csc.itrust.action.EditReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.16666666666666666,1),(764,'edu.ncsu.csc.itrust.action.EditReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getReferralDAO()','(M)',0.18181818181818182,1),(765,'edu.ncsu.csc.itrust.action.EditReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.047619047619047616,1),(766,'edu.ncsu.csc.itrust.action.EditReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.046511627906976744,1),(767,'edu.ncsu.csc.itrust.action.EditReferralsAction:getReferrals()','edu.ncsu.csc.itrust.action.EditReferralsAction:isUnsaved()','(M)',0.5,1),(768,'edu.ncsu.csc.itrust.action.EditReferralsAction:getReferrals()','edu.ncsu.csc.itrust.action.EditReferralsAction:getOvID()','(M)',0.5,1),(769,'edu.ncsu.csc.itrust.action.EditReferralsAction:getReferrals()','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsFromOV(long)','(M)',0.5,1),(770,'edu.ncsu.csc.itrust.action.EditReferralsAction:getReferral(long)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferral(long)','(M)',0.2857142857142857,1),(771,'edu.ncsu.csc.itrust.action.EditReferralsAction:getPatientName(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getPatientID()','(M)',0.2222222222222222,1),(772,'edu.ncsu.csc.itrust.action.EditReferralsAction:getPatientName(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','(M)',0.13333333333333333,1),(773,'edu.ncsu.csc.itrust.action.EditReferralsAction:getReceivingHCPName(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getReceiverID()','(M)',0.2,1),(774,'edu.ncsu.csc.itrust.action.EditReferralsAction:getReceivingHCPName(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.09523809523809523,1),(775,'edu.ncsu.csc.itrust.action.ChronicDiseaseRiskAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.PatientBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','(O)',0.14285714285714285,1),(776,'edu.ncsu.csc.itrust.action.ChronicDiseaseRiskAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.08695652173913043,1),(777,'edu.ncsu.csc.itrust.action.ChronicDiseaseRiskAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.risk.ChronicDiseaseMediator:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.4,1),(778,'edu.ncsu.csc.itrust.action.ChronicDiseaseRiskAction:getUserName()','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','(M)',0.2222222222222222,1),(779,'edu.ncsu.csc.itrust.action.ChronicDiseaseRiskAction:getDiseasesAtRisk()','edu.ncsu.csc.itrust.risk.ChronicDiseaseMediator:getDiseaseAtRisk()','(M)',0.6666666666666666,1),(780,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.14285714285714285,1),(781,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPrescriptionsDAO()','(M)',0.18181818181818182,1),(782,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getNDCodesDAO()','(M)',0.18181818181818182,1),(783,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getDrugInteractionDAO()','(M)',0.2222222222222222,1),(784,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getAllergyDAO()','(M)',0.18181818181818182,1),(785,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPrescriptionReportDAO()','(M)',0.2222222222222222,1),(786,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.14285714285714285,1),(787,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPrescriptionsDAO()','(M)',0.18181818181818182,1),(788,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getNDCodesDAO()','(M)',0.18181818181818182,1),(789,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getDrugInteractionDAO()','(M)',0.2222222222222222,1),(790,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getAllergyDAO()','(M)',0.18181818181818182,1),(791,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPrescriptionReportDAO()','(M)',0.2222222222222222,1),(792,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:check(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','(O)',0.3333333333333333,1),(793,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:check(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkAllergy(edu.ncsu.csc.itrust.beans.PrescriptionBean)','(O)',0.3333333333333333,1),(794,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:check(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.exception.PrescriptionWarningException:<init>(java.util.List)','(O)',0.3333333333333333,1),(795,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:check(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getInstructions()','(M)',0.2857142857142857,1),(796,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:check(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.exception.PrescriptionFieldException:<init>(java.lang.String)','(O)',0.3333333333333333,1),(797,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:validOverride(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getReason()','(M)',1,1),(798,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:interactionWarning(edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.DrugInteractionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getStartDate()','(M)',0.25,1),(799,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:interactionWarning(edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.DrugInteractionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getEndDate()','(M)',0.25,1),(800,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:interactionWarning(edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.DrugInteractionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getMedication()','(M)',0.18181818181818182,1),(801,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:interactionWarning(edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.DrugInteractionBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getDescription()','(M)',0.13333333333333333,1),(802,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:interactionWarning(edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.DrugInteractionBean)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:getDescription()','(M)',0.2857142857142857,1),(803,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:allergyWarning(edu.ncsu.csc.itrust.beans.AllergyBean)','edu.ncsu.csc.itrust.beans.AllergyBean:getDescription()','(M)',0.25,1),(804,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:allergyWarning(edu.ncsu.csc.itrust.beans.AllergyBean)','edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getNDCode(java.lang.String)','(M)',0.25,1),(805,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:allergyWarning(edu.ncsu.csc.itrust.beans.AllergyBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getDescription()','(M)',0.13333333333333333,1),(806,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:allergyWarning(edu.ncsu.csc.itrust.beans.AllergyBean)','edu.ncsu.csc.itrust.beans.AllergyBean:getFirstFound()','(M)',0.2857142857142857,1),(807,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:allergyWarning(edu.ncsu.csc.itrust.beans.AllergyBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05714285714285714,1),(808,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getStartDate()','(M)',0.1111111111111111,1),(809,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getEndDate()','(M)',0.1111111111111111,1),(810,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getMedication()','(M)',0.09523809523809523,1),(811,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()','(M)',0.07142857142857142,1),(812,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:getPid()','(M)',0.11764705882352941,1),(813,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byDate(long,java.lang.String,java.lang.String)','(M)',0.125,1),(814,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:getInteractions(java.lang.String)','(M)',0.1111111111111111,1),(815,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionReportBean:getPrescription()','(M)',0.125,1),(816,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:getFirstDrug()','(M)',0.11764705882352941,1),(817,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:getSecondDrug()','(M)',0.1111111111111111,1),(818,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:validOverride(edu.ncsu.csc.itrust.beans.PrescriptionBean)','(O)',0.11764705882352941,1),(819,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:interactionWarning(edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.DrugInteractionBean)','(O)',0.125,1),(820,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.044444444444444446,1),(821,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.05,1),(822,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.02666666666666667,1),(823,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkAllergy(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:getPid()','(M)',0.16666666666666666,1),(824,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkAllergy(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:getAllergies(long)','(M)',0.14285714285714285,1),(825,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkAllergy(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getMedication()','(M)',0.125,1),(826,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkAllergy(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()','(M)',0.08695652173913043,1),(827,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkAllergy(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.AllergyBean:getDescription()','(M)',0.15384615384615385,1),(828,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkAllergy(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:validOverride(edu.ncsu.csc.itrust.beans.PrescriptionBean)','(O)',0.16666666666666666,1),(829,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkAllergy(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:allergyWarning(edu.ncsu.csc.itrust.beans.AllergyBean)','(O)',0.18181818181818182,1),(830,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkAllergy(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05,1),(831,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkAllergy(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.05714285714285714,1),(832,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkAllergy(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.02857142857142857,1),(833,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:editPrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:verifySaved()','(M)',0.3333333333333333,1),(834,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:editPrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:check(edu.ncsu.csc.itrust.beans.PrescriptionBean)','(O)',0.4,1),(835,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:editPrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:edit(edu.ncsu.csc.itrust.beans.PrescriptionBean)','(M)',0.5,1),(836,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:getPrescriptions()','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:isUnsaved()','(M)',0.5,1),(837,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:getPrescriptions()','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:getOvID()','(M)',0.4,1),(838,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:getPrescriptions()','edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:getList(long)','(M)',0.2857142857142857,1),(839,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:addPrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:verifySaved()','(M)',0.3333333333333333,1),(840,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:addPrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:check(edu.ncsu.csc.itrust.beans.PrescriptionBean)','(O)',0.4,1),(841,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:addPrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:add(edu.ncsu.csc.itrust.beans.PrescriptionBean)','(M)',0.5,1),(842,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:deletePrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:verifySaved()','(M)',0.3333333333333333,1),(843,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:deletePrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getId()','(M)',0.4,1),(844,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:deletePrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:remove(long)','(M)',0.5,1),(845,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:getMedications()','edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getAllNDCodes()','(M)',1,1),(846,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:<init>(java.lang.String)','(O)',0.09523809523809523,1),(847,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)','(M)',0.09090909090909091,1),(848,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.PrescriptionBean:<init>()','(O)',0.09090909090909091,1),(849,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:getOvID()','(M)',0.09090909090909091,1),(850,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setVisitID(long)','(M)',0.09090909090909091,1),(851,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getMedID()','(M)',0.09523809523809523,1),(852,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getNDCode(java.lang.String)','(M)',0.08695652173913043,1),(853,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setMedication(edu.ncsu.csc.itrust.beans.MedicationBean)','(M)',0.09090909090909091,1),(854,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getDosage()','(M)',0.09090909090909091,1),(855,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setDosage(int)','(M)',0.09090909090909091,1),(856,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getStartDate()','(M)',0.09090909090909091,1),(857,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setStartDateStr(java.lang.String)','(M)',0.09090909090909091,1),(858,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getEndDate()','(M)',0.09090909090909091,1),(859,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setEndDateStr(java.lang.String)','(M)',0.09090909090909091,1),(860,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getInstructions()','(M)',0.09090909090909091,1),(861,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setInstructions(java.lang.String)','(M)',0.09090909090909091,1),(862,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getOverrideCode()','(M)',0.09523809523809523,1),(863,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setReason(java.lang.String)','(M)',0.09523809523809523,1),(864,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getOverrideComment()','(M)',0.09523809523809523,1),(865,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setOverrideComment(java.lang.String)','(M)',0.09523809523809523,1),(866,'edu.ncsu.csc.itrust.action.LoginFailureAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.09523809523809523,1),(867,'edu.ncsu.csc.itrust.action.LoginFailureAction:recordLoginFailure()','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:recordLoginFailure(java.lang.String)','(M)',0.4,1),(868,'edu.ncsu.csc.itrust.action.LoginFailureAction:recordLoginFailure()','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getLoginFailures(java.lang.String)','(M)',0.25,1),(869,'edu.ncsu.csc.itrust.action.LoginFailureAction:recordLoginFailure()','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.058823529411764705,1),(870,'edu.ncsu.csc.itrust.action.LoginFailureAction:recordLoginFailure()','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.06896551724137931,1),(871,'edu.ncsu.csc.itrust.action.LoginFailureAction:isValidForLogin()','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getLoginFailures(java.lang.String)','(M)',0.4,1),(872,'edu.ncsu.csc.itrust.action.LoginFailureAction:needsCaptcha()','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getLoginFailures(java.lang.String)','(M)',0.4,1),(873,'edu.ncsu.csc.itrust.action.LoginFailureAction:resetFailures()','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:resetLoginFailuresToZero(java.lang.String)','(M)',1,1),(874,'edu.ncsu.csc.itrust.action.LoginFailureAction:getFailureCount()','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getLoginFailures(java.lang.String)','(M)',0.4,1),(875,'edu.ncsu.csc.itrust.action.AddPHAAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.04878048780487805,1),(876,'edu.ncsu.csc.itrust.action.AddPHAAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.09090909090909091,1),(877,'edu.ncsu.csc.itrust.action.AddPHAAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.validate.AddPersonnelValidator:<init>()','(O)',0.15384615384615385,1),(878,'edu.ncsu.csc.itrust.action.AddPHAAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.14285714285714285,1),(879,'edu.ncsu.csc.itrust.action.AddPHAAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:addEmptyPersonnel(edu.ncsu.csc.itrust.enums.Role)','(M)',0.15384615384615385,1),(880,'edu.ncsu.csc.itrust.action.AddPHAAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:setMID(long)','(M)',0.13333333333333333,1),(881,'edu.ncsu.csc.itrust.action.AddPHAAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:editPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.14285714285714285,1),(882,'edu.ncsu.csc.itrust.action.AddPHAAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.RandomPassword:getRandomPassword()','(S)',0.13333333333333333,1),(883,'edu.ncsu.csc.itrust.action.AddPHAAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:addUser(java.lang.Long,edu.ncsu.csc.itrust.enums.Role,java.lang.String)','(M)',0.14285714285714285,1),(884,'edu.ncsu.csc.itrust.action.AddPHAAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:setPassword(java.lang.String)','(M)',0.15384615384615385,1),(885,'edu.ncsu.csc.itrust.action.ActivityFeedAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getTransactionDAO()','(M)',0.2857142857142857,1),(886,'edu.ncsu.csc.itrust.action.ActivityFeedAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.08695652173913043,1),(887,'edu.ncsu.csc.itrust.action.ActivityFeedAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.04878048780487805,1),(888,'edu.ncsu.csc.itrust.action.ActivityFeedAction:getTransactions(java.util.Date,int)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDeclaredHCPs(long)','(M)',0.18181818181818182,1),(889,'edu.ncsu.csc.itrust.action.ActivityFeedAction:getTransactions(java.util.Date,int)','edu.ncsu.csc.itrust.beans.PersonnelBean:getMID()','(M)',0.16666666666666666,1),(890,'edu.ncsu.csc.itrust.action.ActivityFeedAction:getTransactions(java.util.Date,int)','edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getTransactionsAffecting(long,long,java.util.Date,int)','(M)',0.5,1),(891,'edu.ncsu.csc.itrust.action.ActivityFeedAction:getMessageAsSentence(java.lang.String,java.sql.Timestamp,edu.ncsu.csc.itrust.enums.TransactionType)','edu.ncsu.csc.itrust.enums.TransactionType:values()','(S)',0.2,1),(892,'edu.ncsu.csc.itrust.action.ActivityFeedAction:getMessageAsSentence(java.lang.String,java.sql.Timestamp,edu.ncsu.csc.itrust.enums.TransactionType)','edu.ncsu.csc.itrust.enums.TransactionType:getCode()','(M)',0.2222222222222222,1),(893,'edu.ncsu.csc.itrust.action.ActivityFeedAction:getMessageAsSentence(java.lang.String,java.sql.Timestamp,edu.ncsu.csc.itrust.enums.TransactionType)','edu.ncsu.csc.itrust.enums.TransactionType:isPatientViewable()','(M)',0.25,1),(894,'edu.ncsu.csc.itrust.action.ActivityFeedAction:getMessageAsSentence(java.lang.String,java.sql.Timestamp,edu.ncsu.csc.itrust.enums.TransactionType)','edu.ncsu.csc.itrust.enums.TransactionType:getActionPhrase()','(M)',0.2857142857142857,1),(895,'edu.ncsu.csc.itrust.action.ActivityFeedAction:getMessageAsSentence(java.lang.String,java.sql.Timestamp,edu.ncsu.csc.itrust.enums.TransactionType)','edu.ncsu.csc.itrust.action.ActivityFeedAction:recent(java.util.Date)','(S)',0.2857142857142857,1),(896,'edu.ncsu.csc.itrust.action.ActivityFeedAction:getMessageAsSentence(java.lang.String,java.sql.Timestamp,edu.ncsu.csc.itrust.enums.TransactionType)','edu.ncsu.csc.itrust.action.ActivityFeedAction:replaceNameWithYou(java.lang.String)','(O)',0.2857142857142857,1),(897,'edu.ncsu.csc.itrust.action.ActivityFeedAction:replaceNameWithYou(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','(M)',0.2222222222222222,1),(898,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.0392156862745098,1),(899,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.038461538461538464,1),(900,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAllergyDAO()','(M)',0.1111111111111111,1),(901,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getFamilyDAO()','(M)',0.125,1),(902,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getHealthRecordsDAO()','(M)',0.11764705882352941,1),(903,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.06060606060606061,1),(904,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getSurveyDAO()','(M)',0.125,1),(905,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getLabProcedureDAO()','(M)',0.08695652173913043,1),(906,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getFakeEmailDAO()','(M)',0.125,1),(907,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getReportRequestDAO()','(M)',0.13333333333333333,1),(908,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getICDCodesDAO()','(M)',0.10526315789473684,1),(909,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getProceduresDAO()','(M)',0.09523809523809523,1),(910,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getLOINCDAO()','(M)',0.11764705882352941,1),(911,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getProcedureName(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:getProcedures(java.lang.String)','(M)',1,1),(912,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:representPatient(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:represents(long,long)','(M)',0.4,1),(913,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:representPatient(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03225806451612903,1),(914,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getPatient()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.07407407407407407,1),(915,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.07407407407407407,1),(916,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getPersonnel(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.10526315789473684,1),(917,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getEmailHistory()','edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getPatient()','(M)',0.5,1),(918,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getEmailHistory()','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.10526315789473684,1),(919,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getEmailHistory()','edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getEmailsByPerson(java.lang.String)','(M)',0.4,1),(920,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getAllergies()','edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:getAllergies(long)','(M)',0.4,1),(921,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamily()','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getParents(long)','(M)',0.18181818181818182,1),(922,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamily()','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getSiblings(long)','(M)',0.18181818181818182,1),(923,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamily()','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getChildren(long)','(M)',0.2222222222222222,1),(924,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamily()','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.0625,1),(925,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamily()','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.029850746268656716,1),(926,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamily()','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.08,1),(927,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamily()','edu.ncsu.csc.itrust.beans.FamilyMemberBean:setRelation(java.lang.String)','(M)',0.18181818181818182,1),(928,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyHistory()','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getParents(long)','(M)',0.2,1),(929,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyHistory()','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getSiblings(long)','(M)',0.2,1),(930,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyHistory()','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.06451612903225806,1),(931,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyHistory()','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.030303030303030304,1),(932,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyHistory()','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.08333333333333333,1),(933,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyHistory()','edu.ncsu.csc.itrust.beans.FamilyMemberBean:setRelation(java.lang.String)','(M)',0.2,1),(934,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getAllHealthRecords()','edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','(M)',0.16666666666666666,1),(935,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyHealthRecords(long)','edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','(M)',0.16666666666666666,1),(936,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getAllOfficeVisits()','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisits(long)','(M)',0.2857142857142857,1),(937,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getCompleteOfficeVisit(long)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','(M)',0.16666666666666666,1),(938,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getProcedures(long)','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getList(long)','(M)',0.5,1),(939,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getRepresented()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresented(long)','(M)',0.2857142857142857,1),(940,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getRepresenting()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresenting(long)','(M)',0.2857142857142857,1),(941,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:isSurveyCompleted(long)','edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:isSurveyCompleted(long)','(M)',0.6666666666666666,1),(942,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getLabs()','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatient(long)','(M)',0.6666666666666666,1),(943,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getSpecificLabs(long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresLOINC(long,java.lang.String)','(M)',1,1),(944,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:setViewed(java.util.List)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setViewedByPatient(boolean)','(M)',0.4,1),(945,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:setViewed(java.util.List)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:markViewed(edu.ncsu.csc.itrust.beans.LabProcedureBean)','(M)',0.5,1),(946,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getReportRequests()','edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getAllReportRequestsForPatient(long)','(M)',1,1),(947,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHighBP(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.09090909090909091,1),(948,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHighBP(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','(M)',0.13333333333333333,1),(949,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHighBP(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureSystolic()','(M)',0.2857142857142857,1),(950,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHighBP(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureDiastolic()','(M)',0.2857142857142857,1),(951,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHighCholesterol(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.09090909090909091,1),(952,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHighCholesterol(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','(M)',0.13333333333333333,1),(953,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHighCholesterol(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolHDL()','(M)',0.2222222222222222,1),(954,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHighCholesterol(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolLDL()','(M)',0.2222222222222222,1),(955,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveDiabetes(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.09523809523809523,1),(956,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveDiabetes(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)','(M)',0.16666666666666666,1),(957,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveDiabetes(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()','(M)',0.125,1),(958,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveCancer(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.09523809523809523,1),(959,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveCancer(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)','(M)',0.16666666666666666,1),(960,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveCancer(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()','(M)',0.125,1),(961,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHeartDisease(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.09523809523809523,1),(962,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHeartDisease(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)','(M)',0.16666666666666666,1),(963,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHeartDisease(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()','(M)',0.125,1),(964,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:isFamilyMemberSmoker(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.09523809523809523,1),(965,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:isFamilyMemberSmoker(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','(M)',0.14285714285714285,1),(966,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:isFamilyMemberSmoker(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.HealthRecord:isSmoker()','(M)',0.3333333333333333,1),(967,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyMemberCOD(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.08695652173913043,1),(968,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyMemberCOD(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.06451612903225806,1),(969,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyMemberCOD(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.PatientBean:getCauseOfDeath()','(M)',0.2222222222222222,1),(970,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyMemberCOD(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getICDCode(java.lang.String)','(M)',0.2857142857142857,1),(971,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyMemberCOD(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getDescription()','(M)',0.16666666666666666,1),(972,'edu.ncsu.csc.itrust.action.DrugInteractionAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getDrugInteractionDAO()','(M)',0.4,1),(973,'edu.ncsu.csc.itrust.action.DrugInteractionAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.DrugInteractionValidator:<init>()','(O)',0.6666666666666666,1),(974,'edu.ncsu.csc.itrust.action.DrugInteractionAction:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:<init>()','(O)',0.18181818181818182,1),(975,'edu.ncsu.csc.itrust.action.DrugInteractionAction:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:setFirstDrug(java.lang.String)','(M)',0.18181818181818182,1),(976,'edu.ncsu.csc.itrust.action.DrugInteractionAction:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:setSecondDrug(java.lang.String)','(M)',0.18181818181818182,1),(977,'edu.ncsu.csc.itrust.action.DrugInteractionAction:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:setDescription(java.lang.String)','(M)',0.18181818181818182,1),(978,'edu.ncsu.csc.itrust.action.DrugInteractionAction:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(edu.ncsu.csc.itrust.beans.DrugInteractionBean)','(M)',0.18181818181818182,1),(979,'edu.ncsu.csc.itrust.action.DrugInteractionAction:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','(M)',0.2222222222222222,1),(980,'edu.ncsu.csc.itrust.action.DrugInteractionAction:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05263157894736842,1),(981,'edu.ncsu.csc.itrust.action.DrugInteractionAction:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.06060606060606061,1),(982,'edu.ncsu.csc.itrust.action.DrugInteractionAction:deleteInteraction(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:<init>()','(O)',0.16666666666666666,1),(983,'edu.ncsu.csc.itrust.action.DrugInteractionAction:deleteInteraction(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:setFirstDrug(java.lang.String)','(M)',0.16666666666666666,1),(984,'edu.ncsu.csc.itrust.action.DrugInteractionAction:deleteInteraction(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:setSecondDrug(java.lang.String)','(M)',0.16666666666666666,1),(985,'edu.ncsu.csc.itrust.action.DrugInteractionAction:deleteInteraction(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:setDescription(java.lang.String)','(M)',0.16666666666666666,1),(986,'edu.ncsu.csc.itrust.action.DrugInteractionAction:deleteInteraction(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(edu.ncsu.csc.itrust.beans.DrugInteractionBean)','(M)',0.16666666666666666,1),(987,'edu.ncsu.csc.itrust.action.DrugInteractionAction:deleteInteraction(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:deleteInteraction(java.lang.String,java.lang.String)','(M)',0.2,1),(988,'edu.ncsu.csc.itrust.action.DrugInteractionAction:deleteInteraction(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05128205128205128,1),(989,'edu.ncsu.csc.itrust.action.DrugInteractionAction:deleteInteraction(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.058823529411764705,1),(990,'edu.ncsu.csc.itrust.action.DrugInteractionAction:deleteInteraction(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.028985507246376812,1),(991,'edu.ncsu.csc.itrust.action.DrugInteractionAction:getInteractions(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:getInteractions(java.lang.String)','(M)',0.3333333333333333,1),(992,'edu.ncsu.csc.itrust.action.DrugInteractionAction:getInteractions(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.07142857142857142,1),(993,'edu.ncsu.csc.itrust.action.DrugInteractionAction:getInteractions(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.031746031746031744,1),(994,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:<init>(java.lang.String,edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.046511627906976744,1),(995,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:<init>(java.lang.String,edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.045454545454545456,1),(996,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:<init>(java.lang.String,edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.EmailUtil:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.125,1),(997,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:<init>(java.lang.String,edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAdverseEventDAO()','(M)',0.2222222222222222,1),(998,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:<init>(java.lang.String,edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.AdverseEventValidator:<init>()','(O)',0.2857142857142857,1),(999,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.046511627906976744,1),(1000,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.045454545454545456,1),(1001,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.EmailUtil:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.125,1),(1002,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAdverseEventDAO()','(M)',0.2222222222222222,1),(1003,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.AdverseEventValidator:<init>()','(O)',0.2857142857142857,1),(1004,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getMID()','(M)',0.09523809523809523,1),(1005,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getDrug()','(M)',0.09523809523809523,1),(1006,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getCode()','(M)',0.1,1),(1007,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getDescription()','(M)',0.09090909090909091,1),(1008,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.beans.AdverseEventBean:setDescription(java.lang.String)','(M)',0.10526315789473684,1),(1009,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getPrescriber()','(M)',0.1111111111111111,1),(1010,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.beans.Email:<init>()','(O)',0.06666666666666667,1),(1011,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','(M)',0.06666666666666667,1),(1012,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)','(M)',0.06666666666666667,1),(1013,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.046511627906976744,1),(1014,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.05714285714285714,1),(1015,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.beans.PersonnelBean:getEmail()','(M)',0.08,1),(1016,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.06060606060606061,1),(1017,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)','(M)',0.06666666666666667,1),(1018,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.beans.Email:setSubject(java.lang.String)','(M)',0.06896551724137931,1),(1019,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)','(M)',0.06666666666666667,1),(1020,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)','edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)','(M)',0.07142857142857142,1),(1021,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.beans.Email:<init>()','(O)',0.07142857142857142,1),(1022,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)','(M)',0.07142857142857142,1),(1023,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.04878048780487805,1),(1024,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.06060606060606061,1),(1025,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getEmail()','(M)',0.08695652173913043,1),(1026,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.06451612903225806,1),(1027,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)','(M)',0.07142857142857142,1),(1028,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.beans.Email:setSubject(java.lang.String)','(M)',0.07407407407407407,1),(1029,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getMID()','(M)',0.10526315789473684,1),(1030,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','(M)',0.07142857142857142,1),(1031,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getDrug()','(M)',0.10526315789473684,1),(1032,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getCode()','(M)',0.1111111111111111,1),(1033,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getDescription()','(M)',0.1,1),(1034,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)','(M)',0.07142857142857142,1),(1035,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)','(M)',0.07692307692307693,1),(1036,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.validate.AdverseEventValidator:validate(edu.ncsu.csc.itrust.beans.AdverseEventBean)','(M)',0.25,1),(1037,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.exception.FormValidationException:printStackTrace()','(M)',0.2857142857142857,1),(1038,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.exception.FormValidationException:getMessage()','(M)',0.2857142857142857,1),(1039,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean,long)','(M)',0.2857142857142857,1),(1040,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.06451612903225806,1),(1041,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.030303030303030304,1),(1042,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.EmailUtil:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.14285714285714285,1),(1043,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.04878048780487805,1),(1044,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.047619047619047616,1),(1045,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.07407407407407407,1),(1046,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getRepresentees()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresented(long)','(M)',0.2857142857142857,1),(1047,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescribingDoctor(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPrescribingDoctor(edu.ncsu.csc.itrust.beans.PrescriptionBean)','(M)',0.6666666666666666,1),(1048,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.04878048780487805,1),(1049,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getExpiredPrescriptions(long)','(M)',0.125,1),(1050,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.06451612903225806,1),(1051,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresenting(long)','(M)',0.09523809523809523,1),(1052,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.PatientBean:getMID()','(M)',0.08333333333333333,1),(1053,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDeclaredHCPs(long)','(M)',0.08695652173913043,1),(1054,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.PersonnelBean:getMID()','(M)',0.08333333333333333,1),(1055,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getUAPsForHCP(long)','(M)',0.11764705882352941,1),(1056,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPrescriptions(long)','(M)',0.11764705882352941,1),(1057,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.Email:<init>()','(O)',0.07142857142857142,1),(1058,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)','(M)',0.07142857142857142,1),(1059,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)','(M)',0.07142857142857142,1),(1060,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.Email:setSubject(java.lang.String)','(M)',0.07407407407407407,1),(1061,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)','(M)',0.07142857142857142,1),(1062,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)','edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)','(M)',0.07692307692307693,1),(1063,'edu.ncsu.csc.itrust.action.EditProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.18181818181818182,1),(1064,'edu.ncsu.csc.itrust.action.EditProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getProceduresDAO()','(M)',0.18181818181818182,1),(1065,'edu.ncsu.csc.itrust.action.EditProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getCPTCodesDAO()','(M)',0.25,1),(1066,'edu.ncsu.csc.itrust.action.EditProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.18181818181818182,1),(1067,'edu.ncsu.csc.itrust.action.EditProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getProceduresDAO()','(M)',0.18181818181818182,1),(1068,'edu.ncsu.csc.itrust.action.EditProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getCPTCodesDAO()','(M)',0.25,1),(1069,'edu.ncsu.csc.itrust.action.EditProceduresAction:getProcedures()','edu.ncsu.csc.itrust.action.EditProceduresAction:isUnsaved()','(M)',0.5,1),(1070,'edu.ncsu.csc.itrust.action.EditProceduresAction:getProcedures()','edu.ncsu.csc.itrust.action.EditProceduresAction:getOvID()','(M)',0.5,1),(1071,'edu.ncsu.csc.itrust.action.EditProceduresAction:getProcedures()','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getMedProceduresList(long)','(M)',0.4,1),(1072,'edu.ncsu.csc.itrust.action.EditProceduresAction:addProcedure(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.action.EditProceduresAction:verifySaved()','(M)',0.4,1),(1073,'edu.ncsu.csc.itrust.action.EditProceduresAction:addProcedure(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:add(edu.ncsu.csc.itrust.beans.ProcedureBean)','(M)',0.5,1),(1074,'edu.ncsu.csc.itrust.action.EditProceduresAction:editProcedure(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.action.EditProceduresAction:verifySaved()','(M)',0.4,1),(1075,'edu.ncsu.csc.itrust.action.EditProceduresAction:editProcedure(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:edit(edu.ncsu.csc.itrust.beans.ProcedureBean)','(M)',0.5,1),(1076,'edu.ncsu.csc.itrust.action.EditProceduresAction:deleteProcedure(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.action.EditProceduresAction:verifySaved()','(M)',0.3333333333333333,1),(1077,'edu.ncsu.csc.itrust.action.EditProceduresAction:deleteProcedure(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getOvProcedureID()','(M)',0.3333333333333333,1),(1078,'edu.ncsu.csc.itrust.action.EditProceduresAction:deleteProcedure(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:remove(long)','(M)',0.4,1),(1079,'edu.ncsu.csc.itrust.action.EditProceduresAction:getProcedureCodes()','edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getProcedureCPTCodes()','(M)',1,1),(1080,'edu.ncsu.csc.itrust.action.EditRepresentativesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.PatientBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','(O)',0.14285714285714285,1),(1081,'edu.ncsu.csc.itrust.action.EditRepresentativesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.04878048780487805,1),(1082,'edu.ncsu.csc.itrust.action.EditRepresentativesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.08695652173913043,1),(1083,'edu.ncsu.csc.itrust.action.EditRepresentativesAction:getRepresented(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresented(long)','(M)',0.2857142857142857,1),(1084,'edu.ncsu.csc.itrust.action.EditRepresentativesAction:addRepresentative(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserRole(long)','(M)',0.2222222222222222,1),(1085,'edu.ncsu.csc.itrust.action.EditRepresentativesAction:addRepresentative(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.031746031746031744,1),(1086,'edu.ncsu.csc.itrust.action.EditRepresentativesAction:addRepresentative(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addRepresentative(long,long)','(M)',0.5,1),(1087,'edu.ncsu.csc.itrust.action.EditRepresentativesAction:removeRepresentative(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:removeRepresentative(long,long)','(M)',1,1),(1088,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.18181818181818182,1),(1089,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getDiagnosesDAO()','(M)',0.25,1),(1090,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getICDCodesDAO()','(M)',0.2222222222222222,1),(1091,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.18181818181818182,1),(1092,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getDiagnosesDAO()','(M)',0.25,1),(1093,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getICDCodesDAO()','(M)',0.2222222222222222,1),(1094,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:getDiagnoses()','edu.ncsu.csc.itrust.action.EditDiagnosesAction:isUnsaved()','(M)',0.5,1),(1095,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:getDiagnoses()','edu.ncsu.csc.itrust.action.EditDiagnosesAction:getOvID()','(M)',0.5,1),(1096,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:getDiagnoses()','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getList(long)','(M)',0.4,1),(1097,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:addDiagnosis(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.action.EditDiagnosesAction:verifySaved()','(M)',0.4,1),(1098,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:addDiagnosis(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:add(edu.ncsu.csc.itrust.beans.DiagnosisBean)','(M)',0.6666666666666666,1),(1099,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:editDiagnosis(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.action.EditDiagnosesAction:verifySaved()','(M)',0.4,1),(1100,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:editDiagnosis(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:edit(edu.ncsu.csc.itrust.beans.DiagnosisBean)','(M)',0.6666666666666666,1),(1101,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:deleteDiagnosis(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.action.EditDiagnosesAction:verifySaved()','(M)',0.3333333333333333,1),(1102,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:deleteDiagnosis(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getOvDiagnosisID()','(M)',0.4,1),(1103,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:deleteDiagnosis(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:remove(long)','(M)',0.5,1),(1104,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:getDiagnosisCodes()','edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getAllICDCodes()','(M)',0.6666666666666666,1),(1105,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:<init>()','(O)',0.6666666666666666,1),(1106,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getORCodesDAO()','(M)',0.6666666666666666,1),(1107,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:validate(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','(M)',0.2,1),(1108,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','(M)',0.25,1),(1109,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.beans.OverrideReasonBean:getORCode()','(M)',0.18181818181818182,1),(1110,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.beans.OverrideReasonBean:getDescription()','(M)',0.18181818181818182,1),(1111,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.05405405405405406,1),(1112,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.0625,1),(1113,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.exception.iTrustException:getMessage()','(M)',0.13333333333333333,1),(1114,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:validate(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','(M)',0.2857142857142857,1),(1115,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:updateCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','(O)',0.4,1),(1116,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.058823529411764705,1),(1117,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.exception.DBException:getMessage()','(M)',0.06896551724137931,1),(1118,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:updateCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','(M)',1,1),(1119,'edu.ncsu.csc.itrust.action.EditPHRAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.PatientBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','(O)',0.08695652173913043,1),(1120,'edu.ncsu.csc.itrust.action.EditPHRAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.04,1),(1121,'edu.ncsu.csc.itrust.action.EditPHRAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getAllergyDAO()','(M)',0.11764705882352941,1),(1122,'edu.ncsu.csc.itrust.action.EditPHRAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getFamilyDAO()','(M)',0.13333333333333333,1),(1123,'edu.ncsu.csc.itrust.action.EditPHRAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getHealthRecordsDAO()','(M)',0.125,1),(1124,'edu.ncsu.csc.itrust.action.EditPHRAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.0625,1),(1125,'edu.ncsu.csc.itrust.action.EditPHRAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getICDCodesDAO()','(M)',0.1111111111111111,1),(1126,'edu.ncsu.csc.itrust.action.EditPHRAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.0392156862745098,1),(1127,'edu.ncsu.csc.itrust.action.EditPHRAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.06666666666666667,1),(1128,'edu.ncsu.csc.itrust.action.EditPHRAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.05263157894736842,1),(1129,'edu.ncsu.csc.itrust.action.EditPHRAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getProceduresDAO()','(M)',0.1,1),(1130,'edu.ncsu.csc.itrust.action.EditPHRAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.EmailUtil:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.08695652173913043,1),(1131,'edu.ncsu.csc.itrust.action.EditPHRAction:updateAllergies(long,java.lang.String)','edu.ncsu.csc.itrust.beans.AllergyBean:<init>()','(O)',0.2857142857142857,1),(1132,'edu.ncsu.csc.itrust.action.EditPHRAction:updateAllergies(long,java.lang.String)','edu.ncsu.csc.itrust.beans.AllergyBean:setDescription(java.lang.String)','(M)',0.2857142857142857,1),(1133,'edu.ncsu.csc.itrust.action.EditPHRAction:updateAllergies(long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:addAllergy(long,java.lang.String)','(M)',0.3333333333333333,1),(1134,'edu.ncsu.csc.itrust.action.EditPHRAction:updateAllergies(long,java.lang.String)','edu.ncsu.csc.itrust.action.EditPHRAction:makeEmail()','(O)',0.3333333333333333,1),(1135,'edu.ncsu.csc.itrust.action.EditPHRAction:updateAllergies(long,java.lang.String)','edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)','(M)',0.125,1),(1136,'edu.ncsu.csc.itrust.action.EditPHRAction:getPatient()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.07407407407407407,1),(1137,'edu.ncsu.csc.itrust.action.EditPHRAction:getAllergies()','edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:getAllergies(long)','(M)',0.4,1),(1138,'edu.ncsu.csc.itrust.action.EditPHRAction:getFamily()','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getParents(long)','(M)',0.2222222222222222,1),(1139,'edu.ncsu.csc.itrust.action.EditPHRAction:getFamily()','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getSiblings(long)','(M)',0.2222222222222222,1),(1140,'edu.ncsu.csc.itrust.action.EditPHRAction:getFamily()','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getChildren(long)','(M)',0.2857142857142857,1),(1141,'edu.ncsu.csc.itrust.action.EditPHRAction:getFamily()','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.08695652173913043,1),(1142,'edu.ncsu.csc.itrust.action.EditPHRAction:getFamily()','edu.ncsu.csc.itrust.beans.FamilyMemberBean:setRelation(java.lang.String)','(M)',0.2222222222222222,1),(1143,'edu.ncsu.csc.itrust.action.EditPHRAction:getAllHealthRecords()','edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','(M)',0.16666666666666666,1),(1144,'edu.ncsu.csc.itrust.action.EditPHRAction:getAllOfficeVisits()','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisits(long)','(M)',0.2857142857142857,1),(1145,'edu.ncsu.csc.itrust.action.EditPHRAction:getCompleteOfficeVisit(long)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','(M)',0.16666666666666666,1),(1146,'edu.ncsu.csc.itrust.action.EditPHRAction:getProcedures(long)','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getList(long)','(M)',0.5,1),(1147,'edu.ncsu.csc.itrust.action.EditPHRAction:getDiseasesAtRisk()','edu.ncsu.csc.itrust.risk.ChronicDiseaseMediator:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.5,1),(1148,'edu.ncsu.csc.itrust.action.EditPHRAction:getDiseasesAtRisk()','edu.ncsu.csc.itrust.risk.ChronicDiseaseMediator:getDiseaseAtRisk()','(M)',0.5,1),(1149,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHighBP(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.09090909090909091,1),(1150,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHighBP(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','(M)',0.13333333333333333,1),(1151,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHighBP(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureSystolic()','(M)',0.2857142857142857,1),(1152,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHighBP(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureDiastolic()','(M)',0.2857142857142857,1),(1153,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHighCholesterol(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.09090909090909091,1),(1154,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHighCholesterol(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','(M)',0.13333333333333333,1),(1155,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHighCholesterol(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolHDL()','(M)',0.2222222222222222,1),(1156,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHighCholesterol(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolLDL()','(M)',0.2222222222222222,1),(1157,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveDiabetes(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.09523809523809523,1),(1158,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveDiabetes(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)','(M)',0.16666666666666666,1),(1159,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveDiabetes(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()','(M)',0.125,1),(1160,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveCancer(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.09523809523809523,1),(1161,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveCancer(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)','(M)',0.16666666666666666,1),(1162,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveCancer(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()','(M)',0.125,1),(1163,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHeartDisease(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.09523809523809523,1),(1164,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHeartDisease(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)','(M)',0.16666666666666666,1),(1165,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHeartDisease(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()','(M)',0.125,1),(1166,'edu.ncsu.csc.itrust.action.EditPHRAction:isFamilyMemberSmoker(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.09523809523809523,1),(1167,'edu.ncsu.csc.itrust.action.EditPHRAction:isFamilyMemberSmoker(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','(M)',0.14285714285714285,1),(1168,'edu.ncsu.csc.itrust.action.EditPHRAction:isFamilyMemberSmoker(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.HealthRecord:isSmoker()','(M)',0.3333333333333333,1),(1169,'edu.ncsu.csc.itrust.action.EditPHRAction:getFamilyMemberCOD(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.08695652173913043,1),(1170,'edu.ncsu.csc.itrust.action.EditPHRAction:getFamilyMemberCOD(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.06451612903225806,1),(1171,'edu.ncsu.csc.itrust.action.EditPHRAction:getFamilyMemberCOD(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.PatientBean:getCauseOfDeath()','(M)',0.2222222222222222,1),(1172,'edu.ncsu.csc.itrust.action.EditPHRAction:getFamilyMemberCOD(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getICDCode(java.lang.String)','(M)',0.2857142857142857,1),(1173,'edu.ncsu.csc.itrust.action.EditPHRAction:getFamilyMemberCOD(edu.ncsu.csc.itrust.beans.FamilyMemberBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getDescription()','(M)',0.16666666666666666,1),(1174,'edu.ncsu.csc.itrust.action.EditPHRAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:<init>()','(O)',0.09090909090909091,1),(1175,'edu.ncsu.csc.itrust.action.EditPHRAction:makeEmail()','edu.ncsu.csc.itrust.beans.PatientBean:getMID()','(M)',0.1111111111111111,1),(1176,'edu.ncsu.csc.itrust.action.EditPHRAction:makeEmail()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresenting(long)','(M)',0.13333333333333333,1),(1177,'edu.ncsu.csc.itrust.action.EditPHRAction:makeEmail()','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.08,1),(1178,'edu.ncsu.csc.itrust.action.EditPHRAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)','(M)',0.09090909090909091,1),(1179,'edu.ncsu.csc.itrust.action.EditPHRAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)','(M)',0.09090909090909091,1),(1180,'edu.ncsu.csc.itrust.action.EditPHRAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:setSubject(java.lang.String)','(M)',0.09523809523809523,1),(1181,'edu.ncsu.csc.itrust.action.EditPHRAction:makeEmail()','edu.ncsu.csc.itrust.beans.PersonnelBean:getFullName()','(M)',0.13333333333333333,1),(1182,'edu.ncsu.csc.itrust.action.EditPHRAction:makeEmail()','edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)','(M)',0.09090909090909091,1),(1183,'edu.ncsu.csc.itrust.action.ViewSurveyResultAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getSurveyResultDAO()','(M)',0.6666666666666666,1),(1184,'edu.ncsu.csc.itrust.action.ViewSurveyResultAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.SurveySearchValidator:<init>()','(O)',0.6666666666666666,1),(1185,'edu.ncsu.csc.itrust.action.ViewSurveyResultAction:getSurveyResultsForHospital(edu.ncsu.csc.itrust.beans.SurveyResultBean)','edu.ncsu.csc.itrust.beans.SurveyResultBean:getHCPhospital()','(M)',0.5,1),(1186,'edu.ncsu.csc.itrust.action.ViewSurveyResultAction:getSurveyResultsForHospital(edu.ncsu.csc.itrust.beans.SurveyResultBean)','edu.ncsu.csc.itrust.beans.SurveyResultBean:getHCPspecialty()','(M)',0.4,1),(1187,'edu.ncsu.csc.itrust.action.ViewSurveyResultAction:getSurveyResultsForHospital(edu.ncsu.csc.itrust.beans.SurveyResultBean)','edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:getSurveyResultsForHospital(java.lang.String,java.lang.String)','(M)',0.5,1),(1188,'edu.ncsu.csc.itrust.action.ViewSurveyResultAction:getSurveyResultsForZip(edu.ncsu.csc.itrust.beans.SurveyResultBean)','edu.ncsu.csc.itrust.validate.SurveySearchValidator:validate(edu.ncsu.csc.itrust.beans.SurveyResultBean)','(M)',0.3333333333333333,1),(1189,'edu.ncsu.csc.itrust.action.ViewSurveyResultAction:getSurveyResultsForZip(edu.ncsu.csc.itrust.beans.SurveyResultBean)','edu.ncsu.csc.itrust.beans.SurveyResultBean:getHCPzip()','(M)',0.3333333333333333,1),(1190,'edu.ncsu.csc.itrust.action.ViewSurveyResultAction:getSurveyResultsForZip(edu.ncsu.csc.itrust.beans.SurveyResultBean)','edu.ncsu.csc.itrust.beans.SurveyResultBean:getHCPspecialty()','(M)',0.3333333333333333,1),(1191,'edu.ncsu.csc.itrust.action.ViewSurveyResultAction:getSurveyResultsForZip(edu.ncsu.csc.itrust.beans.SurveyResultBean)','edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:getSurveyResultsForZip(java.lang.String,java.lang.String)','(M)',0.4,1),(1192,'edu.ncsu.csc.itrust.action.DeclareHCPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.05,1),(1193,'edu.ncsu.csc.itrust.action.DeclareHCPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.09090909090909091,1),(1194,'edu.ncsu.csc.itrust.action.DeclareHCPAction:getDeclaredHCPS()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDeclaredHCPs(long)','(M)',0.2222222222222222,1),(1195,'edu.ncsu.csc.itrust.action.DeclareHCPAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserRole(long)','(M)',0.2222222222222222,1),(1196,'edu.ncsu.csc.itrust.action.DeclareHCPAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.031746031746031744,1),(1197,'edu.ncsu.csc.itrust.action.DeclareHCPAction:declareHCP(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:declareHCP(long,long)','(M)',0.5,1),(1198,'edu.ncsu.csc.itrust.action.DeclareHCPAction:undeclareHCP(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:undeclareHCP(long,long)','(M)',0.6666666666666666,1),(1199,'edu.ncsu.csc.itrust.action.DeclareHCPAction:undeclareHCP(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03225806451612903,1),(1200,'edu.ncsu.csc.itrust.action.GetUserNameAction:getUserName(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.08695652173913043,1),(1201,'edu.ncsu.csc.itrust.action.GetUserNameAction:getUserName(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','(M)',0.18181818181818182,1),(1202,'edu.ncsu.csc.itrust.action.GetUserNameAction:getUserName(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.031746031746031744,1),(1203,'edu.ncsu.csc.itrust.action.ViewReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.05,1),(1204,'edu.ncsu.csc.itrust.action.ViewReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.04878048780487805,1),(1205,'edu.ncsu.csc.itrust.action.ViewReportAction:getDiagnoses(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)','(M)',0.2,1),(1206,'edu.ncsu.csc.itrust.action.ViewReportAction:getProcedures(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getProcedures(long)','(M)',0.6666666666666666,1),(1207,'edu.ncsu.csc.itrust.action.ViewReportAction:getPrescriptions(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getCurrentPrescriptions(long)','(M)',0.6666666666666666,1),(1208,'edu.ncsu.csc.itrust.action.ViewReportAction:getDeclaredHCPs(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDeclaredHCPs(long)','(M)',0.2222222222222222,1),(1209,'edu.ncsu.csc.itrust.action.ViewReportAction:getPersonnel(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.10526315789473684,1),(1210,'edu.ncsu.csc.itrust.action.ViewReportAction:getPatient(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.07407407407407407,1),(1211,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getReportRequestDAO()','(M)',0.5,1),(1212,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.04878048780487805,1),(1213,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:getAllReportRequestsForRequester()','edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getAllReportRequestsForRequester(long)','(M)',1,1),(1214,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:addReportRequest(long)','edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:addReportRequest(long,long,java.util.Date)','(M)',1,1),(1215,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:getReportRequest(int)','edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getReportRequest(long)','(M)',0.6666666666666666,1),(1216,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:setViewed(int)','edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:setViewed(long,java.util.Date)','(M)',1,1),(1217,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:getLongStatus(long)','edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getReportRequest(long)','(M)',0.2222222222222222,1),(1218,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:getLongStatus(long)','edu.ncsu.csc.itrust.beans.ReportRequestBean:getStatus()','(M)',0.25,1),(1219,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:getLongStatus(long)','edu.ncsu.csc.itrust.beans.ReportRequestBean:getRequesterMID()','(M)',0.25,1),(1220,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:getLongStatus(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.08,1),(1221,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:getLongStatus(long)','edu.ncsu.csc.itrust.beans.ReportRequestBean:getRequestedDateString()','(M)',0.25,1),(1222,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:getLongStatus(long)','edu.ncsu.csc.itrust.beans.PersonnelBean:getFullName()','(M)',0.15384615384615385,1),(1223,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:getLongStatus(long)','edu.ncsu.csc.itrust.beans.ReportRequestBean:getViewedDateString()','(M)',0.25,1),(1224,'edu.ncsu.csc.itrust.action.MyDiagnosisAction$HCPDiagnosisBeanComparator:compare(edu.ncsu.csc.itrust.beans.HCPDiagnosisBean,edu.ncsu.csc.itrust.beans.HCPDiagnosisBean)','edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:getNumPatients()','(M)',1,1),(1225,'edu.ncsu.csc.itrust.action.MyDiagnosisAction$HCPDiagnosisBeanComparator:compare(java.lang.Object,java.lang.Object)','edu.ncsu.csc.itrust.action.MyDiagnosisAction$HCPDiagnosisBeanComparator:compare(edu.ncsu.csc.itrust.beans.HCPDiagnosisBean,edu.ncsu.csc.itrust.beans.HCPDiagnosisBean)','(M)',1,1),(1226,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.045454545454545456,1),(1227,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.07692307692307693,1),(1228,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.044444444444444446,1),(1229,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getSurveyDAO()','(M)',0.2222222222222222,1),(1230,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getLabProcedureDAO()','(M)',0.125,1),(1231,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPrescriptionsDAO()','(M)',0.18181818181818182,1),(1232,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getDiagnoses()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)','(M)',0.2,1),(1233,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForDiagnosis(java.lang.String)','(M)',0.06451612903225806,1),(1234,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.03636363636363636,1),(1235,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.PatientBean:getZip1()','(M)',0.0625,1),(1236,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getHcpID()','(M)',0.05555555555555555,1),(1237,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.0425531914893617,1),(1238,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getZip1()','(M)',0.0625,1),(1239,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getID()','(M)',0.06060606060606061,1),(1240,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:getList(long)','(M)',0.06060606060606061,1),(1241,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:getMedList()','(M)',0.06666666666666667,1),(1242,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getMedication()','(M)',0.05714285714285714,1),(1243,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.MedicationBean:getDescription()','(M)',0.05128205128205128,1),(1244,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:setMedList(java.util.List)','(M)',0.06666666666666667,1),(1245,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:getLabList()','(M)',0.06666666666666667,1),(1246,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getVisitID()','(M)',0.06451612903225806,1),(1247,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresForDocOV(long)','(M)',0.06451612903225806,1),(1248,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:setLabList(java.util.List)','(M)',0.06666666666666667,1),(1249,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:isSurveyCompleted(long)','(M)',0.06451612903225806,1),(1250,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:getSurveyData(long)','(M)',0.06666666666666667,1),(1251,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.SurveyBean:getVisitSatisfaction()','(M)',0.06451612903225806,1),(1252,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:setVisitSat(int)','(M)',0.06666666666666667,1),(1253,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.SurveyBean:getTreatmentSatisfaction()','(M)',0.06451612903225806,1),(1254,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:setTreatmentSat(int)','(M)',0.06666666666666667,1),(1255,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getPatientID()','(M)',0.06060606060606061,1),(1256,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:incNumPatients()','(M)',0.06666666666666667,1),(1257,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:<init>()','(O)',0.06666666666666667,1),(1258,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:setHCP(long)','(M)',0.06666666666666667,1),(1259,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.041666666666666664,1),(1260,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:setHCPName(java.lang.String)','(M)',0.06666666666666667,1),(1261,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.action.MyDiagnosisAction$HCPDiagnosisBeanComparator:<init>()','(O)',0.06666666666666667,1),(1262,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getPrescriptionsByHCPAndICD(long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForDiagnosis(java.lang.String)','(M)',0.3333333333333333,1),(1263,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getPrescriptionsByHCPAndICD(long,java.lang.String)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getHcpID()','(M)',0.18181818181818182,1),(1264,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getPrescriptionsByHCPAndICD(long,java.lang.String)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getID()','(M)',0.25,1),(1265,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getPrescriptionsByHCPAndICD(long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:getList(long)','(M)',0.25,1),(1266,'edu.ncsu.csc.itrust.action.EditApptAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.validate.ApptBeanValidator:<init>()','(O)',0.3333333333333333,1),(1267,'edu.ncsu.csc.itrust.action.EditApptAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getApptDAO()','(M)',0.2857142857142857,1),(1268,'edu.ncsu.csc.itrust.action.EditApptAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.047619047619047616,1),(1269,'edu.ncsu.csc.itrust.action.EditApptAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.046511627906976744,1),(1270,'edu.ncsu.csc.itrust.action.EditApptAction:getAppt(int)','edu.ncsu.csc.itrust.dao.mysql.ApptDAO:getAppt(int)','(M)',1,1),(1271,'edu.ncsu.csc.itrust.action.EditApptAction:editAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.validate.ApptBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptBean)','(M)',0.3333333333333333,1),(1272,'edu.ncsu.csc.itrust.action.EditApptAction:editAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getDate()','(M)',0.2222222222222222,1),(1273,'edu.ncsu.csc.itrust.action.EditApptAction:editAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.dao.mysql.ApptDAO:editAppt(edu.ncsu.csc.itrust.beans.ApptBean)','(M)',0.5,1),(1274,'edu.ncsu.csc.itrust.action.EditApptAction:removeAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.dao.mysql.ApptDAO:removeAppt(edu.ncsu.csc.itrust.beans.ApptBean)','(M)',1,1),(1275,'edu.ncsu.csc.itrust.action.EditApptAction:getName(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','(M)',0.13333333333333333,1),(1276,'edu.ncsu.csc.itrust.action.EditApptAction:getName(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.09523809523809523,1),(1277,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.16666666666666666,1),(1278,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getLabProcedureDAO()','(M)',0.14285714285714285,1),(1279,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.046511627906976744,1),(1280,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getLOINCDAO()','(M)',0.25,1),(1281,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.16666666666666666,1),(1282,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getLabProcedureDAO()','(M)',0.14285714285714285,1),(1283,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.046511627906976744,1),(1284,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getLOINCDAO()','(M)',0.25,1),(1285,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabProcedures()','edu.ncsu.csc.itrust.action.EditLabProceduresAction:isUnsaved()','(M)',0.5,1),(1286,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabProcedures()','edu.ncsu.csc.itrust.action.EditLabProceduresAction:getOvID()','(M)',0.5,1),(1287,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabProcedures()','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresForDocOV(long)','(M)',0.4,1),(1288,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabProcedure(long)','edu.ncsu.csc.itrust.action.EditLabProceduresAction:verifySaved()','(M)',0.2857142857142857,1),(1289,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabProcedure(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedure(long)','(M)',0.25,1),(1290,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.action.EditLabProceduresAction:verifySaved()','(M)',0.2222222222222222,1),(1291,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getStatus()','(M)',0.2,1),(1292,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setStatus(java.lang.String)','(M)',0.3333333333333333,1),(1293,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','(M)',0.4,1),(1294,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:autoAssignLabTech(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.action.EditLabProceduresAction:verifySaved()','(M)',0.2222222222222222,1),(1295,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:autoAssignLabTech(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getLabTechs()','(M)',0.3333333333333333,1),(1296,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:autoAssignLabTech(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getMID()','(M)',0.15384615384615385,1),(1297,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:autoAssignLabTech(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setLTID(long)','(M)',0.3333333333333333,1),(1298,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:editLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.action.EditLabProceduresAction:verifySaved()','(M)',0.2857142857142857,1),(1299,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:editLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','(M)',0.5,1),(1300,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:deleteLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.action.EditLabProceduresAction:verifySaved()','(M)',0.25,1),(1301,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:deleteLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getProcedureID()','(M)',0.25,1),(1302,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:deleteLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:removeLabProcedure(long)','(M)',0.5,1),(1303,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabTechs()','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getLabTechs()','(M)',0.6666666666666666,1),(1304,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabTechName(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.1,1),(1305,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabTechQueueSize(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabTechQueueSize(long)','(M)',1,1),(1306,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabTechQueueSizeByPriority(long)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabTechQueueSizeByPriority(long)','(M)',1,1),(1307,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabProcedureCodes()','edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:getAllLOINC()','(M)',0.6666666666666666,1),(1308,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getReferralDAO()','(M)',0.2222222222222222,1),(1309,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.09090909090909091,1),(1310,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:getReferrals(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getPatientQuery(long)','(M)',0.6666666666666666,1),(1311,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:getReferrals(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:query(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','(M)',0.5,1),(1312,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:getReferralsForPatientUnread()','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForPatientUnread(long)','(M)',1,1),(1313,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:getReferralByID(int)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferral(long)','(M)',0.2857142857142857,1),(1314,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:updateReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:editReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','(M)',0.5,1),(1315,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:setReferralMessage(long,long)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:setReferralMessage(long,long)','(M)',1,1),(1316,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:getOVDate(long)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','(M)',0.16666666666666666,1),(1317,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.PatientBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','(O)',0.13333333333333333,1),(1318,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:<init>()','(O)',0.4,1),(1319,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getHealthRecordsDAO()','(M)',0.25,1),(1320,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.08333333333333333,1),(1321,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:getPatientName()','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','(M)',0.2222222222222222,1),(1322,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:addHealthRecord(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','(M)',0.4,1),(1323,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:addHealthRecord(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','(O)',0.5,1),(1324,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:addHealthRecord(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:add(edu.ncsu.csc.itrust.beans.HealthRecord)','(M)',0.5,1),(1325,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.HealthRecord:<init>()','(O)',0.08695652173913043,1),(1326,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.HealthRecord:setPatientID(long)','(M)',0.08695652173913043,1),(1327,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.HealthRecord:setPersonnelID(long)','(M)',0.08695652173913043,1),(1328,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getBloodPressureD()','(M)',0.08695652173913043,1),(1329,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.HealthRecord:setBloodPressureD(int)','(M)',0.08695652173913043,1),(1330,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getBloodPressureN()','(M)',0.08695652173913043,1),(1331,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.HealthRecord:setBloodPressureN(int)','(M)',0.08695652173913043,1),(1332,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getCholesterolHDL()','(M)',0.08695652173913043,1),(1333,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.HealthRecord:setCholesterolHDL(int)','(M)',0.08695652173913043,1),(1334,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getCholesterolLDL()','(M)',0.08695652173913043,1),(1335,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.HealthRecord:setCholesterolLDL(int)','(M)',0.08695652173913043,1),(1336,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getCholesterolTri()','(M)',0.08695652173913043,1),(1337,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.HealthRecord:setCholesterolTri(int)','(M)',0.08695652173913043,1),(1338,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.HealthRecord:getTotalCholesterol()','(M)',0.09090909090909091,1),(1339,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(java.lang.String[])','(O)',0.06451612903225806,1),(1340,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getHeight()','(M)',0.08695652173913043,1),(1341,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.HealthRecord:setHeight(double)','(M)',0.08695652173913043,1),(1342,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getWeight()','(M)',0.08695652173913043,1),(1343,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.HealthRecord:setWeight(double)','(M)',0.08695652173913043,1),(1344,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getIsSmoker()','(M)',0.08695652173913043,1),(1345,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.HealthRecord:setSmoker(int)','(M)',0.08695652173913043,1),(1346,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:getAllHealthRecords(long)','edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','(M)',0.16666666666666666,1),(1347,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.action.ViewMyApptsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.5,1),(1348,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.action.EditApptTypeAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.5,1),(1349,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.5,1),(1350,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:getConflicts()','edu.ncsu.csc.itrust.beans.ApptBean:getDate()','(M)',0.2222222222222222,1),(1351,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:getConflicts()','edu.ncsu.csc.itrust.beans.ApptBean:getApptType()','(M)',0.2857142857142857,1),(1352,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:getConflicts()','edu.ncsu.csc.itrust.action.EditApptTypeAction:getDurationByType(java.lang.String)','(M)',0.5,1),(1353,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:getApptsTable(int,int)','edu.ncsu.csc.itrust.action.ViewMyApptsAction:getMyAppointments()','(M)',0.6666666666666666,1),(1354,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:getApptsTable(int,int)','edu.ncsu.csc.itrust.beans.ApptBean:getDate()','(M)',0.25,1),(1355,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:getOfficeVisitsTable(int,int)','edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getAllOfficeVisits()','(M)',0.6666666666666666,1),(1356,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:getOfficeVisitsTable(int,int)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getVisitDate()','(M)',0.3333333333333333,1),(1357,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:getLabProceduresTable(int,int)','edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getLabs()','(M)',0.6666666666666666,1),(1358,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:getLabProceduresTable(int,int)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getTimestamp()','(M)',0.4,1),(1359,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String,java.lang.String)','(O)',0.2,1),(1360,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.043478260869565216,1),(1361,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.07407407407407407,1),(1362,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPrescriptionsDAO()','(M)',0.16666666666666666,1),(1363,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getProceduresDAO()','(M)',0.13333333333333333,1),(1364,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getLabProcedureDAO()','(M)',0.11764705882352941,1),(1365,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getDiagnosesDAO()','(M)',0.16666666666666666,1),(1366,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String,java.lang.String)','(O)',0.16666666666666666,1),(1367,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.041666666666666664,1),(1368,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.0425531914893617,1),(1369,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.06896551724137931,1),(1370,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPrescriptionsDAO()','(M)',0.14285714285714285,1),(1371,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getProceduresDAO()','(M)',0.11764705882352941,1),(1372,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getLabProcedureDAO()','(M)',0.10526315789473684,1),(1373,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getDiagnosesDAO()','(M)',0.14285714285714285,1),(1374,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:checkRepresented(long,java.lang.String)','(O)',0.2,1),(1375,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:checkRepresented(long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:represents(long,long)','(M)',0.3333333333333333,1),(1376,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:checkRepresented(long,java.lang.String)','edu.ncsu.csc.itrust.Messages:getString(java.lang.String)','(S)',0.25,1),(1377,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:checkRepresented(long,java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.031746031746031744,1),(1378,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getOfficeVisit()','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','(M)',0.16666666666666666,1),(1379,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getPrescriptions()','edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:getList(long)','(M)',0.4,1),(1380,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getAllProcedures()','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getList(long)','(M)',0.5,1),(1381,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getProcedures()','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getMedProceduresList(long)','(M)',0.6666666666666666,1),(1382,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getImmunizations()','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getImmunizationList(long)','(M)',0.6666666666666666,1),(1383,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getDiagnoses()','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getList(long)','(M)',0.6666666666666666,1),(1384,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getLabProcedures()','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatientOV(long)','(M)',1,1),(1385,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:setViewed(java.util.List)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setViewedByPatient(boolean)','(M)',0.4,1),(1386,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:setViewed(java.util.List)','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:markViewed(edu.ncsu.csc.itrust.beans.LabProcedureBean)','(M)',0.5,1),(1387,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getHCPName(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.09090909090909091,1),(1388,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getHCPName(long)','edu.ncsu.csc.itrust.exception.iTrustException:printStackTrace()','(M)',0.3333333333333333,1),(1389,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getHCPName(long)','edu.ncsu.csc.itrust.exception.iTrustException:getMessage()','(M)',0.18181818181818182,1),(1390,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.09090909090909091,1),(1391,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:<init>()','(O)',0.125,1),(1392,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.058823529411764705,1),(1393,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.03773584905660377,1),(1394,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getHospitalsDAO()','(M)',0.1111111111111111,1),(1395,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.038461538461538464,1),(1396,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.125,1),(1397,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.EditProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.125,1),(1398,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.EditImmunizationsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.125,1),(1399,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.EditDiagnosesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.125,1),(1400,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.EditLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.125,1),(1401,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.125,1),(1402,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.EditReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.125,1),(1403,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.EventLoggingAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.125,1),(1404,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.09090909090909091,1),(1405,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:<init>()','(O)',0.125,1),(1406,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.058823529411764705,1),(1407,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.03773584905660377,1),(1408,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getHospitalsDAO()','(M)',0.1111111111111111,1),(1409,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.038461538461538464,1),(1410,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.13333333333333333,1),(1411,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.EditProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.13333333333333333,1),(1412,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.EditImmunizationsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.13333333333333333,1),(1413,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.EditDiagnosesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.13333333333333333,1),(1414,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.EditLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.13333333333333333,1),(1415,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.13333333333333333,1),(1416,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.EditReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.13333333333333333,1),(1417,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.EventLoggingAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.125,1),(1418,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:isUnsaved()','(M)',0.13333333333333333,1),(1419,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.027777777777777776,1),(1420,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getFactory()','(M)',0.15384615384615385,1),(1421,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getPid()','(M)',0.13333333333333333,1),(1422,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getOvID()','(M)',0.14285714285714285,1),(1423,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()','edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.14285714285714285,1),(1424,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()','edu.ncsu.csc.itrust.action.EditProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.14285714285714285,1),(1425,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()','edu.ncsu.csc.itrust.action.EditImmunizationsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.14285714285714285,1),(1426,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()','edu.ncsu.csc.itrust.action.EditDiagnosesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.14285714285714285,1),(1427,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()','edu.ncsu.csc.itrust.action.EditLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.14285714285714285,1),(1428,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()','edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.14285714285714285,1),(1429,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()','edu.ncsu.csc.itrust.action.EditReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.14285714285714285,1),(1430,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getOfficeVisit()','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getBean()','(O)',0.6666666666666666,1),(1431,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getHospitals()','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getHcpid()','(M)',0.3333333333333333,1),(1432,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getHospitals()','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getHospitals(long)','(M)',0.2857142857142857,1),(1433,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getHospitals()','edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:getAllHospitals()','(M)',0.3333333333333333,1),(1434,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getHospitals()','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:combineLists(java.util.List,java.util.List)','(O)',0.4,1),(1435,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateInformation(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','(O)',0.5,1),(1436,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateInformation(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.exception.iTrustException:printStackTrace()','(M)',0.3333333333333333,1),(1437,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateInformation(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.exception.iTrustException:getMessage()','(M)',0.18181818181818182,1),(1438,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:logOfficeVisitEvent(edu.ncsu.csc.itrust.enums.TransactionType)','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getPid()','(M)',0.3333333333333333,1),(1439,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:logOfficeVisitEvent(edu.ncsu.csc.itrust.enums.TransactionType)','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getOvID()','(M)',0.4,1),(1440,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:logOfficeVisitEvent(edu.ncsu.csc.itrust.enums.TransactionType)','edu.ncsu.csc.itrust.action.EventLoggingAction:logEvent(edu.ncsu.csc.itrust.enums.TransactionType,long,long,java.lang.String)','(M)',0.3333333333333333,1),(1441,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:makeEmailApp(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.058823529411764705,1),(1442,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:makeEmailApp(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.07407407407407407,1),(1443,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:makeEmailApp(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:<init>()','(O)',0.09523809523809523,1),(1444,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:makeEmailApp(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)','(M)',0.09523809523809523,1),(1445,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:makeEmailApp(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.08333333333333333,1),(1446,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:makeEmailApp(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)','(M)',0.09523809523809523,1),(1447,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:makeEmailApp(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:setSubject(java.lang.String)','(M)',0.1,1),(1448,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:makeEmailApp(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)','(M)',0.09523809523809523,1),(1449,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','(M)',0.13333333333333333,1),(1450,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getBean()','(O)',0.13333333333333333,1),(1451,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getNotes()','(M)',0.13333333333333333,1),(1452,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setNotes(java.lang.String)','(M)',0.125,1),(1453,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getVisitDate()','(M)',0.13333333333333333,1),(1454,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setVisitDateStr(java.lang.String)','(M)',0.125,1),(1455,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getHcpID()','(M)',0.13333333333333333,1),(1456,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setHcpID(long)','(M)',0.1111111111111111,1),(1457,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getPatientID()','(M)',0.13333333333333333,1),(1458,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setPatientID(long)','(M)',0.1111111111111111,1),(1459,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getHospitalID()','(M)',0.13333333333333333,1),(1460,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setHospitalID(java.lang.String)','(M)',0.125,1),(1461,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateBean(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','(O)',0.14285714285714285,1),(1462,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getBean()','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:isUnsaved()','(M)',0.2,1),(1463,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getBean()','edu.ncsu.csc.itrust.beans.OfficeVisitBean:<init>()','(O)',0.2222222222222222,1),(1464,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getBean()','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getHcpid()','(M)',0.2222222222222222,1),(1465,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getBean()','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setHcpID(long)','(M)',0.16666666666666666,1),(1466,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getBean()','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getPid()','(M)',0.2,1),(1467,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getBean()','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setPatientID(long)','(M)',0.16666666666666666,1),(1468,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getBean()','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','(M)',0.1111111111111111,1),(1469,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateBean(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:isUnsaved()','(M)',0.2857142857142857,1),(1470,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateBean(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:add(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','(M)',0.3333333333333333,1),(1471,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateBean(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()','(O)',0.4,1),(1472,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateBean(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:update(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','(M)',0.4,1),(1473,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.PatientBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','(O)',0.13333333333333333,1),(1474,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.08333333333333333,1),(1475,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.047619047619047616,1),(1476,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPrescriptionReportDAO()','(M)',0.2857142857142857,1),(1477,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:representPatient(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:represents(long,long)','(M)',0.4,1),(1478,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:representPatient(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03225806451612903,1),(1479,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:getAllOfficeVisits()','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisits(long)','(M)',0.2857142857142857,1),(1480,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:getPrescriptionReports(java.util.Map,java.util.List)','edu.ncsu.csc.itrust.ParameterUtil:convertMap(java.util.Map)','(S)',0.4,1),(1481,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:getPrescriptionReports(java.util.Map,java.util.List)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getVisitID()','(M)',0.4,1),(1482,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:getPrescriptionReports(java.util.Map,java.util.List)','edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byOfficeVisitAndPatient(java.util.List,long)','(M)',0.5,1),(1483,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:getPatient()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.07407407407407407,1),(1484,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:getQueryString(java.util.Map,java.util.List)','edu.ncsu.csc.itrust.ParameterUtil:convertMap(java.util.Map)','(S)',0.4,1),(1485,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:getQueryString(java.util.Map,java.util.List)','edu.ncsu.csc.itrust.action.PrescriptionReportAction:checkOfficeVisits(java.util.HashMap,java.util.List)','(O)',0.5,1),(1486,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:getQueryString(java.util.Map,java.util.List)','edu.ncsu.csc.itrust.action.PrescriptionReportAction:buildQueryString(java.util.List)','(O)',0.5,1),(1487,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','edu.ncsu.csc.itrust.action.base.PatientBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','(O)',0.13333333333333333,1),(1488,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.3333333333333333,1),(1489,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.2857142857142857,1),(1490,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.3333333333333333,1),(1491,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:getOfficeVisitsWithInstructions()','edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:getPid()','(M)',0.5,1),(1492,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:getOfficeVisitsWithInstructions()','edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getOfficeVisitsWithInstructions(long)','(M)',0.6666666666666666,1),(1493,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:getInstructionsForOfficeVisit(long)','edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getList(long)','(M)',0.6666666666666666,1),(1494,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:getHCPNameLookup()','edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:getPid()','(M)',0.3333333333333333,1),(1495,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:getHCPNameLookup()','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisits(long)','(M)',0.2,1),(1496,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:getHCPNameLookup()','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getHcpID()','(M)',0.18181818181818182,1),(1497,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:getHCPNameLookup()','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.08695652173913043,1),(1498,'edu.ncsu.csc.itrust.action.EditPersonnelAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.PersonnelBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','(O)',0.2857142857142857,1),(1499,'edu.ncsu.csc.itrust.action.EditPersonnelAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.validate.PersonnelValidator:<init>()','(O)',0.2857142857142857,1),(1500,'edu.ncsu.csc.itrust.action.EditPersonnelAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.07692307692307693,1),(1501,'edu.ncsu.csc.itrust.action.EditPersonnelAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserRole(long)','(M)',0.16666666666666666,1),(1502,'edu.ncsu.csc.itrust.action.EditPersonnelAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.030303030303030304,1),(1503,'edu.ncsu.csc.itrust.action.EditPersonnelAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.044444444444444446,1),(1504,'edu.ncsu.csc.itrust.action.EditPersonnelAction:updateInformation(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:setMID(long)','(M)',0.2,1),(1505,'edu.ncsu.csc.itrust.action.EditPersonnelAction:updateInformation(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.4,1),(1506,'edu.ncsu.csc.itrust.action.EditPersonnelAction:updateInformation(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:editPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.2222222222222222,1),(1507,'edu.ncsu.csc.itrust.action.EditPersonnelAction:editMessageFilter(java.lang.String)','edu.ncsu.csc.itrust.action.EditPersonnelAction:getPid()','(M)',0.4,1),(1508,'edu.ncsu.csc.itrust.action.EditPersonnelAction:editMessageFilter(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.09090909090909091,1),(1509,'edu.ncsu.csc.itrust.action.EditPersonnelAction:editMessageFilter(java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:setMessageFilter(java.lang.String)','(M)',0.3333333333333333,1),(1510,'edu.ncsu.csc.itrust.action.EditPersonnelAction:editMessageFilter(java.lang.String)','edu.ncsu.csc.itrust.action.EditPersonnelAction:updateInformation(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.4,1),(1511,'edu.ncsu.csc.itrust.action.SearchUsersAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.05,1),(1512,'edu.ncsu.csc.itrust.action.SearchUsersAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.04878048780487805,1),(1513,'edu.ncsu.csc.itrust.action.SearchUsersAction:searchForPersonnelWithName(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:searchForPersonnelWithName(java.lang.String,java.lang.String)','(M)',0.6666666666666666,1),(1514,'edu.ncsu.csc.itrust.action.SearchUsersAction:searchForPersonnelWithName(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.0625,1),(1515,'edu.ncsu.csc.itrust.action.SearchUsersAction:searchForPatientsWithName(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:searchForPatientsWithName(java.lang.String,java.lang.String)','(M)',0.6666666666666666,1),(1516,'edu.ncsu.csc.itrust.action.SearchUsersAction:searchForPatientsWithName(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.0625,1),(1517,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','(O)',0.2,1),(1518,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientInstructionsDAO()','(M)',0.5,1),(1519,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','(O)',0.2,1),(1520,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientInstructionsDAO()','(M)',0.5,1),(1521,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:getPatientInstructions()','edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:isUnsaved()','(M)',0.5,1),(1522,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:getPatientInstructions()','edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:getOvID()','(M)',0.5,1),(1523,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:getPatientInstructions()','edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getList(long)','(M)',0.4,1),(1524,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:addPatientInstructions(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:verifySaved()','(M)',0.3333333333333333,1),(1525,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:addPatientInstructions(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:add(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','(M)',0.6666666666666666,1),(1526,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:editPatientInstructions(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:verifySaved()','(M)',0.3333333333333333,1),(1527,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:editPatientInstructions(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:edit(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','(M)',0.6666666666666666,1),(1528,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:deletePatientInstructions(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:verifySaved()','(M)',0.2857142857142857,1),(1529,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:deletePatientInstructions(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getId()','(M)',0.4,1),(1530,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:deletePatientInstructions(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:remove(long)','(M)',0.5,1),(1531,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:verifySaved()','(M)',0.2857142857142857,1),(1532,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:<init>()','(O)',0.5,1),(1533,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','(M)',0.4,1),(1534,'edu.ncsu.csc.itrust.action.ResetPasswordAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.09090909090909091,1),(1535,'edu.ncsu.csc.itrust.action.ResetPasswordAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.05,1),(1536,'edu.ncsu.csc.itrust.action.ResetPasswordAction:checkMID(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:checkUserExists(long)','(M)',0.6666666666666666,1),(1537,'edu.ncsu.csc.itrust.action.ResetPasswordAction:isMaxedOut(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getResetPasswordFailures(java.lang.String)','(M)',0.6666666666666666,1),(1538,'edu.ncsu.csc.itrust.action.ResetPasswordAction:checkRole(long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRole(long,java.lang.String)','(M)',0.5,1),(1539,'edu.ncsu.csc.itrust.action.ResetPasswordAction:checkRole(long,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.06060606060606061,1),(1540,'edu.ncsu.csc.itrust.action.ResetPasswordAction:checkRole(long,java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:printStackTrace()','(M)',0.3333333333333333,1),(1541,'edu.ncsu.csc.itrust.action.ResetPasswordAction:getSecurityQuestion(long)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityQuestion(long)','(M)',0.4,1),(1542,'edu.ncsu.csc.itrust.action.ResetPasswordAction:getSecurityQuestion(long)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.031746031746031744,1),(1543,'edu.ncsu.csc.itrust.action.ResetPasswordAction:getSecurityQuestion(long)','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.06060606060606061,1),(1544,'edu.ncsu.csc.itrust.action.ResetPasswordAction:resetPassword(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserRole(long)','(M)',0.11764705882352941,1),(1545,'edu.ncsu.csc.itrust.action.ResetPasswordAction:resetPassword(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.enums.Role:parse(java.lang.String)','(S)',0.13333333333333333,1),(1546,'edu.ncsu.csc.itrust.action.ResetPasswordAction:resetPassword(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.enums.Role:equals(java.lang.Object)','(M)',0.16666666666666666,1),(1547,'edu.ncsu.csc.itrust.action.ResetPasswordAction:resetPassword(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getResetPasswordFailures(java.lang.String)','(M)',0.15384615384615385,1),(1548,'edu.ncsu.csc.itrust.action.ResetPasswordAction:resetPassword(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.ResetPasswordAction:validatePassword(java.lang.String,java.lang.String)','(O)',0.16666666666666666,1),(1549,'edu.ncsu.csc.itrust.action.ResetPasswordAction:resetPassword(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityAnswer(long)','(M)',0.15384615384615385,1),(1550,'edu.ncsu.csc.itrust.action.ResetPasswordAction:resetPassword(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:resetPassword(long,java.lang.String)','(M)',0.16666666666666666,1),(1551,'edu.ncsu.csc.itrust.action.ResetPasswordAction:resetPassword(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.EmailUtil:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.09090909090909091,1),(1552,'edu.ncsu.csc.itrust.action.ResetPasswordAction:resetPassword(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','(O)',0.16666666666666666,1),(1553,'edu.ncsu.csc.itrust.action.ResetPasswordAction:resetPassword(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)','(M)',0.09090909090909091,1),(1554,'edu.ncsu.csc.itrust.action.ResetPasswordAction:resetPassword(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:recordResetPasswordFailure(java.lang.String)','(M)',0.16666666666666666,1),(1555,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.enums.Role:parse(java.lang.String)','(S)',0.1111111111111111,1),(1556,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.11764705882352941,1),(1557,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.05,1),(1558,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:<init>()','(O)',0.07407407407407407,1),(1559,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)','(M)',0.07407407407407407,1),(1560,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.06666666666666667,1),(1561,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)','(M)',0.07407407407407407,1),(1562,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:setSubject(java.lang.String)','(M)',0.07692307692307693,1),(1563,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.beans.PatientBean:getFullName()','(M)',0.09523809523809523,1),(1564,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)','(M)',0.07407407407407407,1),(1565,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.11764705882352941,1),(1566,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','(M)',0.0625,1),(1567,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getEmail()','(M)',0.09090909090909091,1),(1568,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)','edu.ncsu.csc.itrust.beans.PersonnelBean:getFullName()','(M)',0.1,1),(1569,'edu.ncsu.csc.itrust.action.ResetPasswordAction:validatePassword(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.06060606060606061,1),(1570,'edu.ncsu.csc.itrust.action.ResetPasswordAction:validatePassword(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.06060606060606061,1),(1571,'edu.ncsu.csc.itrust.action.ResetPasswordAction:validatePassword(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.validate.ValidationFormat:getRegex()','(M)',0.25,1),(1572,'edu.ncsu.csc.itrust.action.ResetPasswordAction:validatePassword(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.validate.ValidationFormat:getDescription()','(M)',0.2222222222222222,1),(1573,'edu.ncsu.csc.itrust.action.ResetPasswordAction:validatePassword(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.06060606060606061,1),(1574,'edu.ncsu.csc.itrust.action.ResetPasswordAction:validatePassword(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.06060606060606061,1),(1575,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','(M)',0.09090909090909091,1),(1576,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:checkMID(long)','(O)',0.6666666666666666,1),(1577,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:updateInformation(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.validate.SecurityQAValidator:<init>()','(O)',0.3333333333333333,1),(1578,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:updateInformation(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(edu.ncsu.csc.itrust.beans.SecurityQA)','(M)',0.2857142857142857,1),(1579,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:updateInformation(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.beans.SecurityQA:getQuestion()','(M)',0.2857142857142857,1),(1580,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:updateInformation(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.beans.SecurityQA:getAnswer()','(M)',0.2857142857142857,1),(1581,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:updateInformation(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:setSecurityQuestionAnswer(java.lang.String,java.lang.String,long)','(M)',0.3333333333333333,1),(1582,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:retrieveInformation()','edu.ncsu.csc.itrust.beans.SecurityQA:<init>()','(O)',0.3333333333333333,1),(1583,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:retrieveInformation()','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityAnswer(long)','(M)',0.2857142857142857,1),(1584,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:retrieveInformation()','edu.ncsu.csc.itrust.beans.SecurityQA:setAnswer(java.lang.String)','(M)',0.3333333333333333,1),(1585,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:retrieveInformation()','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityQuestion(long)','(M)',0.2857142857142857,1),(1586,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:retrieveInformation()','edu.ncsu.csc.itrust.beans.SecurityQA:setQuestion(java.lang.String)','(M)',0.3333333333333333,1),(1587,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:checkMID(long)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:checkUserExists(long)','(M)',0.5,1),(1588,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:checkMID(long)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03225806451612903,1),(1589,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.047619047619047616,1),(1590,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.EmailUtil:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.13333333333333333,1),(1591,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getAdverseEventDAO()','(M)',0.25,1),(1592,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.action.SendMessageAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.3333333333333333,1),(1593,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:getReports(boolean,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getPerscriptions(java.lang.String,java.lang.String)','(M)',0.6666666666666666,1),(1594,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:getReports(boolean,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getImmunizations(java.lang.String,java.lang.String)','(M)',0.6666666666666666,1),(1595,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:getName(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','(M)',0.14285714285714285,1),(1596,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:sendEmail(long,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.05714285714285714,1),(1597,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:sendEmail(long,java.lang.String)','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.08,1),(1598,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:sendEmail(long,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:<init>()','(O)',0.09090909090909091,1),(1599,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:sendEmail(long,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)','(M)',0.09090909090909091,1),(1600,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:sendEmail(long,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)','(M)',0.09090909090909091,1),(1601,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:sendEmail(long,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)','(M)',0.09090909090909091,1),(1602,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:sendEmail(long,java.lang.String)','edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)','(M)',0.1,1),(1603,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:sendEmail(long,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:getFrom()','(M)',0.18181818181818182,1),(1604,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:sendEmail(long,java.lang.String)','edu.ncsu.csc.itrust.beans.Email:getBody()','(M)',0.18181818181818182,1),(1605,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getReport(int)','(M)',0.125,1),(1606,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:removeReport(int)','(M)',0.13333333333333333,1),(1607,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getHCPMID(int)','(M)',0.13333333333333333,1),(1608,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.beans.MessageBean:<init>()','(O)',0.1111111111111111,1),(1609,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getDrug()','(M)',0.1111111111111111,1),(1610,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getMID()','(M)',0.1111111111111111,1),(1611,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','(M)',0.07407407407407407,1),(1612,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getDescription()','(M)',0.10526315789473684,1),(1613,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.beans.MessageBean:setTo(long)','(M)',0.1111111111111111,1),(1614,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.beans.MessageBean:setSubject(java.lang.String)','(M)',0.1111111111111111,1),(1615,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.beans.MessageBean:setBody(java.lang.String)','(M)',0.1111111111111111,1),(1616,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.beans.MessageBean:setFrom(long)','(M)',0.1111111111111111,1),(1617,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)','(M)',0.11764705882352941,1),(1618,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008658008658008658,1),(1619,'edu.ncsu.csc.itrust.action.base.PatientBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','edu.ncsu.csc.itrust.action.base.PatientBaseAction:checkPatientID(java.lang.String)','(O)',1,1),(1620,'edu.ncsu.csc.itrust.action.base.PatientBaseAction:checkPatientID(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.047619047619047616,1),(1621,'edu.ncsu.csc.itrust.action.base.PatientBaseAction:checkPatientID(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:checkPatientExists(long)','(M)',0.4,1),(1622,'edu.ncsu.csc.itrust.action.base.PatientBaseAction:checkPatientID(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03125,1),(1623,'edu.ncsu.csc.itrust.action.base.PatientBaseAction:checkPatientID(java.lang.String)','edu.ncsu.csc.itrust.HtmlEncoder:encode(java.lang.String)','(S)',0.4,1),(1624,'edu.ncsu.csc.itrust.action.base.PersonnelBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','edu.ncsu.csc.itrust.action.base.PersonnelBaseAction:checkPersonnelID(java.lang.String)','(O)',1,1),(1625,'edu.ncsu.csc.itrust.action.base.PersonnelBaseAction:checkPersonnelID(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.047619047619047616,1),(1626,'edu.ncsu.csc.itrust.action.base.PersonnelBaseAction:checkPersonnelID(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:checkPersonnelExists(long)','(M)',0.4,1),(1627,'edu.ncsu.csc.itrust.action.base.PersonnelBaseAction:checkPersonnelID(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.031746031746031744,1),(1628,'edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String,java.lang.String)','(O)',0.5,1),(1629,'edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)','edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','(O)',1,1),(1630,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.base.PatientBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','(O)',0.14285714285714285,1),(1631,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.08695652173913043,1),(1632,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:checkOfficeVisitID(java.lang.String)','(O)',0.5,1),(1633,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','edu.ncsu.csc.itrust.action.base.PatientBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','(O)',0.15384615384615385,1),(1634,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','(M)',0.09090909090909091,1),(1635,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:checkOfficeVisitID(java.lang.String)','edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:encode(java.lang.String)','(M)',0.5,1),(1636,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:checkOfficeVisitID(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:checkOfficeVisitExists(long,long)','(M)',0.5,1),(1637,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:checkOfficeVisitID(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.031746031746031744,1),(1638,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:verifySaved()','edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:isUnsaved()','(M)',0.6666666666666666,1),(1639,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:verifySaved()','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03225806451612903,1),(1640,'edu.ncsu.csc.itrust.beans.FamilyMemberBean:getFullName()','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getFirstName()','(M)',0.6666666666666666,1),(1641,'edu.ncsu.csc.itrust.beans.FamilyMemberBean:getFullName()','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getLastName()','(M)',0.6666666666666666,1),(1642,'edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressure()','edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureN()','(M)',0.5,1),(1643,'edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressure()','edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureD()','(M)',0.5,1),(1644,'edu.ncsu.csc.itrust.beans.HealthRecord:getTotalCholesterol()','edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolHDL()','(M)',0.25,1),(1645,'edu.ncsu.csc.itrust.beans.HealthRecord:getTotalCholesterol()','edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolLDL()','(M)',0.25,1),(1646,'edu.ncsu.csc.itrust.beans.HealthRecord:getTotalCholesterol()','edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolTri()','(M)',0.3333333333333333,1),(1647,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:toReferralBean()','edu.ncsu.csc.itrust.beans.ReferralBean:<init>()','(O)',0.15384615384615385,1),(1648,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:toReferralBean()','edu.ncsu.csc.itrust.beans.ReferralBean:setId(long)','(M)',0.15384615384615385,1),(1649,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:toReferralBean()','edu.ncsu.csc.itrust.beans.ReferralBean:setPatientID(long)','(M)',0.15384615384615385,1),(1650,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:toReferralBean()','edu.ncsu.csc.itrust.beans.ReferralBean:setSenderID(long)','(M)',0.15384615384615385,1),(1651,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:toReferralBean()','edu.ncsu.csc.itrust.beans.ReferralBean:setReceiverID(long)','(M)',0.15384615384615385,1),(1652,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:toReferralBean()','edu.ncsu.csc.itrust.beans.ReferralBean:setReferralDetails(java.lang.String)','(M)',0.15384615384615385,1),(1653,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:toReferralBean()','edu.ncsu.csc.itrust.beans.ReferralBean:setOvid(long)','(M)',0.15384615384615385,1),(1654,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:toReferralBean()','edu.ncsu.csc.itrust.beans.ReferralBean:setViewedByPatient(boolean)','(M)',0.15384615384615385,1),(1655,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:toReferralBean()','edu.ncsu.csc.itrust.beans.ReferralBean:setViewedByHCP(boolean)','(M)',0.15384615384615385,1),(1656,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:toReferralBean()','edu.ncsu.csc.itrust.beans.ReferralBean:setTimeStamp(java.lang.String)','(M)',0.15384615384615385,1),(1657,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:toReferralBean()','edu.ncsu.csc.itrust.beans.ReferralBean:setPriority(int)','(M)',0.15384615384615385,1),(1658,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:equals(java.lang.Object)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:equals(edu.ncsu.csc.itrust.beans.VerboseReferralBean)','(O)',1,1),(1659,'edu.ncsu.csc.itrust.beans.PatientBean:setBloodTypeStr(java.lang.String)','edu.ncsu.csc.itrust.enums.BloodType:parse(java.lang.String)','(S)',0.6666666666666666,1),(1660,'edu.ncsu.csc.itrust.beans.PatientBean:setEthnicityStr(java.lang.String)','edu.ncsu.csc.itrust.enums.Ethnicity:parse(java.lang.String)','(S)',0.6666666666666666,1),(1661,'edu.ncsu.csc.itrust.beans.PatientBean:getFullName()','edu.ncsu.csc.itrust.beans.PatientBean:getFirstName()','(M)',0.2857142857142857,1),(1662,'edu.ncsu.csc.itrust.beans.PatientBean:getFullName()','edu.ncsu.csc.itrust.beans.PatientBean:getLastName()','(M)',0.2857142857142857,1),(1663,'edu.ncsu.csc.itrust.beans.PatientBean:setGenderStr(java.lang.String)','edu.ncsu.csc.itrust.enums.Gender:parse(java.lang.String)','(S)',0.6666666666666666,1),(1664,'edu.ncsu.csc.itrust.beans.PatientBean:getIcAddress3()','edu.ncsu.csc.itrust.beans.PatientBean:getIcCity()','(M)',0.3333333333333333,1),(1665,'edu.ncsu.csc.itrust.beans.PatientBean:getIcAddress3()','edu.ncsu.csc.itrust.beans.PatientBean:getIcState()','(M)',0.3333333333333333,1),(1666,'edu.ncsu.csc.itrust.beans.PatientBean:getIcAddress3()','edu.ncsu.csc.itrust.beans.PatientBean:getIcZip()','(M)',0.4,1),(1667,'edu.ncsu.csc.itrust.beans.PatientBean:getIcZip()','edu.ncsu.csc.itrust.beans.PatientBean:getIcZip2()','(M)',0.5,1),(1668,'edu.ncsu.csc.itrust.beans.PatientBean:getIcZip()','edu.ncsu.csc.itrust.beans.PatientBean:getIcZip1()','(M)',0.5,1),(1669,'edu.ncsu.csc.itrust.beans.PatientBean:getPhone()','edu.ncsu.csc.itrust.beans.PatientBean:getPhone1()','(M)',0.4,1),(1670,'edu.ncsu.csc.itrust.beans.PatientBean:getPhone()','edu.ncsu.csc.itrust.beans.PatientBean:getPhone2()','(M)',0.4,1),(1671,'edu.ncsu.csc.itrust.beans.PatientBean:getPhone()','edu.ncsu.csc.itrust.beans.PatientBean:getPhone3()','(M)',0.4,1),(1672,'edu.ncsu.csc.itrust.beans.PatientBean:getStreetAddress3()','edu.ncsu.csc.itrust.beans.PatientBean:getCity()','(M)',0.2857142857142857,1),(1673,'edu.ncsu.csc.itrust.beans.PatientBean:getStreetAddress3()','edu.ncsu.csc.itrust.beans.PatientBean:getState()','(M)',0.2857142857142857,1),(1674,'edu.ncsu.csc.itrust.beans.PatientBean:getStreetAddress3()','edu.ncsu.csc.itrust.beans.PatientBean:getZip()','(M)',0.3333333333333333,1),(1675,'edu.ncsu.csc.itrust.beans.PatientBean:getZip()','edu.ncsu.csc.itrust.beans.PatientBean:getZip2()','(M)',0.5,1),(1676,'edu.ncsu.csc.itrust.beans.PatientBean:getZip()','edu.ncsu.csc.itrust.beans.PatientBean:getZip1()','(M)',0.4,1),(1677,'edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone()','edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone1()','(M)',0.4,1),(1678,'edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone()','edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone2()','(M)',0.4,1),(1679,'edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone()','edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone3()','(M)',0.4,1),(1680,'edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone()','edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone1()','(M)',0.4,1),(1681,'edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone()','edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone2()','(M)',0.4,1),(1682,'edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone()','edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone3()','(M)',0.4,1),(1683,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setBloodTypeStr(java.lang.String)','edu.ncsu.csc.itrust.enums.BloodType:parse(java.lang.String)','(S)',0.6666666666666666,1),(1684,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setEthnicityStr(java.lang.String)','edu.ncsu.csc.itrust.enums.Ethnicity:parse(java.lang.String)','(S)',0.6666666666666666,1),(1685,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getFullName()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getFirstName()','(M)',0.6666666666666666,1),(1686,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getFullName()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getLastName()','(M)',0.6666666666666666,1),(1687,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setGenderStr(java.lang.String)','edu.ncsu.csc.itrust.enums.Gender:parse(java.lang.String)','(S)',0.6666666666666666,1),(1688,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcAddress3()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcCity()','(M)',0.5,1),(1689,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcAddress3()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcState()','(M)',0.5,1),(1690,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcAddress3()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcZip()','(M)',0.5,1),(1691,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcZip()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcZip2()','(M)',0.6666666666666666,1),(1692,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcZip()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcZip1()','(M)',0.6666666666666666,1),(1693,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getPhone()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getPhone1()','(M)',0.5,1),(1694,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getPhone()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getPhone2()','(M)',0.5,1),(1695,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getPhone()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getPhone3()','(M)',0.5,1),(1696,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getStreetAddress3()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getCity()','(M)',0.5,1),(1697,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getStreetAddress3()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getState()','(M)',0.5,1),(1698,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getStreetAddress3()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getZip()','(M)',0.5,1),(1699,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getZip()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getZip2()','(M)',0.6666666666666666,1),(1700,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getZip()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getZip1()','(M)',0.6666666666666666,1),(1701,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getEmergencyPhone()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getEmergencyPhone1()','(M)',0.5,1),(1702,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getEmergencyPhone()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getEmergencyPhone2()','(M)',0.5,1),(1703,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getEmergencyPhone()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getEmergencyPhone3()','(M)',0.5,1),(1704,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcPhone()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcPhone1()','(M)',0.5,1),(1705,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcPhone()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcPhone2()','(M)',0.5,1),(1706,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcPhone()','edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcPhone3()','(M)',0.5,1),(1707,'edu.ncsu.csc.itrust.beans.AllergyBean:getFirstFoundStr()','edu.ncsu.csc.itrust.beans.AllergyBean:getFirstFound()','(M)',0.6666666666666666,1),(1708,'edu.ncsu.csc.itrust.beans.HospitalBean:equals(java.lang.Object)','edu.ncsu.csc.itrust.beans.HospitalBean:equals(edu.ncsu.csc.itrust.beans.HospitalBean)','(O)',1,1),(1709,'edu.ncsu.csc.itrust.beans.Email:equals(java.lang.Object)','edu.ncsu.csc.itrust.beans.Email:equals(edu.ncsu.csc.itrust.beans.Email)','(O)',1,1),(1710,'edu.ncsu.csc.itrust.beans.Email:equals(edu.ncsu.csc.itrust.beans.Email)','edu.ncsu.csc.itrust.beans.Email:listEquals(java.util.List,java.util.List)','(O)',1,1),(1711,'edu.ncsu.csc.itrust.beans.OperationalProfile:<init>()','edu.ncsu.csc.itrust.beans.OperationalProfile:createEmptyMap()','(O)',1,1),(1712,'edu.ncsu.csc.itrust.beans.OperationalProfile:createEmptyMap()','edu.ncsu.csc.itrust.enums.TransactionType:values()','(S)',0.4,1),(1713,'edu.ncsu.csc.itrust.beans.PrescriptionBean:<init>()','edu.ncsu.csc.itrust.beans.MedicationBean:<init>()','(O)',0.5,1),(1714,'edu.ncsu.csc.itrust.beans.PrescriptionBean:equals(java.lang.Object)','edu.ncsu.csc.itrust.beans.PrescriptionBean:equals(edu.ncsu.csc.itrust.beans.PrescriptionBean)','(O)',1,1),(1715,'edu.ncsu.csc.itrust.beans.PrescriptionBean:equals(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.MedicationBean:equals(java.lang.Object)','(M)',1,1),(1716,'edu.ncsu.csc.itrust.beans.PersonnelBean:getFullName()','edu.ncsu.csc.itrust.beans.PersonnelBean:getFirstName()','(M)',0.3333333333333333,1),(1717,'edu.ncsu.csc.itrust.beans.PersonnelBean:getFullName()','edu.ncsu.csc.itrust.beans.PersonnelBean:getLastName()','(M)',0.2857142857142857,1),(1718,'edu.ncsu.csc.itrust.beans.PersonnelBean:getZip()','edu.ncsu.csc.itrust.beans.PersonnelBean:getZip2()','(M)',0.5,1),(1719,'edu.ncsu.csc.itrust.beans.PersonnelBean:getZip()','edu.ncsu.csc.itrust.beans.PersonnelBean:getZip1()','(M)',0.4,1),(1720,'edu.ncsu.csc.itrust.beans.PersonnelBean:getRole()','edu.ncsu.csc.itrust.enums.Role:parse(java.lang.String)','(S)',0.4,1),(1721,'edu.ncsu.csc.itrust.beans.ReferralBean:equals(java.lang.Object)','edu.ncsu.csc.itrust.beans.ReferralBean:equals(edu.ncsu.csc.itrust.beans.ReferralBean)','(O)',1,1),(1722,'edu.ncsu.csc.itrust.beans.SurveyBean:setSurveyDateString(java.lang.String)','edu.ncsu.csc.itrust.beans.SurveyBean:setSurveyDate(java.util.Date)','(M)',0.6666666666666666,1),(1723,'edu.ncsu.csc.itrust.beans.SurveyBean:getSurveyDateString()','edu.ncsu.csc.itrust.beans.SurveyBean:getSurveyDate()','(M)',1,1),(1724,'edu.ncsu.csc.itrust.beans.MedicationBean:getNDCodeFormatted()','edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()','(M)',0.14285714285714285,1),(1725,'edu.ncsu.csc.itrust.beans.MedicationBean:equals(java.lang.Object)','edu.ncsu.csc.itrust.beans.MedicationBean:equals(edu.ncsu.csc.itrust.beans.MedicationBean)','(O)',1,1),(1726,'edu.ncsu.csc.itrust.beans.ReportRequestBean:<clinit>()','edu.ncsu.csc.itrust.Messages:getString(java.lang.String)','(S)',0.3333333333333333,1),(1727,'edu.ncsu.csc.itrust.beans.ReportRequestBean:setRequestedDateString(java.lang.String)','edu.ncsu.csc.itrust.beans.ReportRequestBean:setRequestedDate(java.util.Date)','(M)',0.6666666666666666,1),(1728,'edu.ncsu.csc.itrust.beans.ReportRequestBean:setViewedDateString(java.lang.String)','edu.ncsu.csc.itrust.beans.ReportRequestBean:setViewedDate(java.util.Date)','(M)',0.6666666666666666,1),(1729,'edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm$1:compare(edu.ncsu.csc.itrust.beans.VisitFlag,edu.ncsu.csc.itrust.beans.VisitFlag)','edu.ncsu.csc.itrust.beans.VisitFlag:getType()','(M)',1,1),(1730,'edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm$1:compare(java.lang.Object,java.lang.Object)','edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm$1:compare(edu.ncsu.csc.itrust.beans.VisitFlag,edu.ncsu.csc.itrust.beans.VisitFlag)','(M)',1,1),(1731,'edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm:<init>(long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm:setPhoneNumber(java.lang.String,java.lang.String,java.lang.String)','(M)',1,1),(1732,'edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm:getVisitFlags()','edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm$1:<init>(edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm)','(O)',1,1),(1733,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(1734,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LOINCbean:<init>()','(O)',0.2,1),(1735,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LOINCbean:setLabProcedureCode(java.lang.String)','(M)',0.2,1),(1736,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LOINCbean:setComponent(java.lang.String)','(M)',0.2,1),(1737,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LOINCbean:setKindOfProperty(java.lang.String)','(M)',0.2,1),(1738,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LOINCbean:setTimeAspect(java.lang.String)','(M)',0.2,1),(1739,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LOINCbean:setSystem(java.lang.String)','(M)',0.2,1),(1740,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LOINCbean:setScaleType(java.lang.String)','(M)',0.2,1),(1741,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LOINCbean:setMethodType(java.lang.String)','(M)',0.2,1),(1742,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.LOINCbean)','(M)',1,1),(1743,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.18181818181818182,1),(1744,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(1745,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.Email)','edu.ncsu.csc.itrust.beans.Email:getToListStr()','(M)',0.4,1),(1746,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.Email)','edu.ncsu.csc.itrust.beans.Email:getFrom()','(M)',0.3333333333333333,1),(1747,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.Email)','edu.ncsu.csc.itrust.beans.Email:getSubject()','(M)',0.4,1),(1748,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.Email)','edu.ncsu.csc.itrust.beans.Email:getBody()','(M)',0.3333333333333333,1),(1749,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.Email:<init>()','(O)',0.1,1),(1750,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)','(M)',0.1,1),(1751,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)','(M)',0.1,1),(1752,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)','(M)',0.1,1),(1753,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.Email:setSubject(java.lang.String)','(M)',0.10526315789473684,1),(1754,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.Email:setTimeAdded(java.sql.Timestamp)','(M)',0.25,1),(1755,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.Email)','(M)',0.6666666666666666,1),(1756,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2222222222222222,1),(1757,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(1758,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.AdverseEventBean:<init>()','(O)',0.2,1),(1759,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.AdverseEventBean:setMID(java.lang.String)','(M)',0.2,1),(1760,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.AdverseEventBean:setDrug(java.lang.String)','(M)',0.2,1),(1761,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.AdverseEventBean:setDescription(java.lang.String)','(M)',0.18181818181818182,1),(1762,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.AdverseEventBean:setCode(java.lang.String)','(M)',0.2,1),(1763,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.AdverseEventBean:setDate(java.lang.String)','(M)',0.2,1),(1764,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.AdverseEventBean:setId(int)','(M)',0.2,1),(1765,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.AdverseEventBean:setStatus(java.lang.String)','(M)',0.2,1),(1766,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.AdverseEventBean)','(M)',1,1),(1767,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.18181818181818182,1),(1768,'edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(1769,'edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.AllergyBean:<init>()','(O)',0.25,1),(1770,'edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.AllergyBean:setId(long)','(M)',0.2857142857142857,1),(1771,'edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.AllergyBean:setPatientID(long)','(M)',0.2857142857142857,1),(1772,'edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.AllergyBean:setDescription(java.lang.String)','(M)',0.25,1),(1773,'edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.AllergyBean:setFirstFound(java.util.Date)','(M)',0.2857142857142857,1),(1774,'edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.AllergyBean)','(M)',1,1),(1775,'edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.25,1),(1776,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(1777,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TelemedicineBean:<init>()','(O)',0.2222222222222222,1),(1778,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TelemedicineBean:setSystolicBloodPressureAllowed(boolean)','(M)',0.2222222222222222,1),(1779,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TelemedicineBean:setDiastolicBloodPressureAllowed(boolean)','(M)',0.2222222222222222,1),(1780,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TelemedicineBean:setGlucoseLevelAllowed(boolean)','(M)',0.2222222222222222,1),(1781,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TelemedicineBean:setHeightAllowed(boolean)','(M)',0.2222222222222222,1),(1782,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TelemedicineBean:setWeightAllowed(boolean)','(M)',0.2222222222222222,1),(1783,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TelemedicineBean:setPedometerReadingAllowed(boolean)','(M)',0.2222222222222222,1),(1784,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.TelemedicineBean)','(M)',1,1),(1785,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2,1),(1786,'edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(1787,'edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:<init>()','(O)',0.2857142857142857,1),(1788,'edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:setRelation(java.lang.String)','(M)',0.2,1),(1789,'edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:setFirstName(java.lang.String)','(M)',0.2857142857142857,1),(1790,'edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:setLastName(java.lang.String)','(M)',0.2857142857142857,1),(1791,'edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:setMid(long)','(M)',0.2857142857142857,1),(1792,'edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.FamilyMemberBean)','(M)',1,1),(1793,'edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.25,1),(1794,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.5,1),(1795,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:<init>()','(O)',0.10526315789473684,1),(1796,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setProcedureID(long)','(M)',0.10526315789473684,1),(1797,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setPid(long)','(M)',0.10526315789473684,1),(1798,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setLoinc(java.lang.String)','(M)',0.10526315789473684,1),(1799,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setStatus(java.lang.String)','(M)',0.1,1),(1800,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setCommentary(java.lang.String)','(M)',0.10526315789473684,1),(1801,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setResults(java.lang.String)','(M)',0.10526315789473684,1),(1802,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setOvID(long)','(M)',0.10526315789473684,1),(1803,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setTimestamp(java.sql.Timestamp)','(M)',0.10526315789473684,1),(1804,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setRights(java.lang.String)','(M)',0.10526315789473684,1),(1805,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setLTID(long)','(M)',0.1,1),(1806,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setPriorityCode(int)','(M)',0.10526315789473684,1),(1807,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setViewedByPatient(boolean)','(M)',0.09523809523809523,1),(1808,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setNumericalResult(java.lang.String)','(M)',0.1,1),(1809,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setNumericalResultUnit(java.lang.String)','(M)',0.1,1),(1810,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setUpperBound(java.lang.String)','(M)',0.1,1),(1811,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.LabProcedureBean:setLowerBound(java.lang.String)','(M)',0.1,1),(1812,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.LabProcedureBean)','(M)',1,1),(1813,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.09523809523809523,1),(1814,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(1815,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:<init>()','(O)',0.15384615384615385,1),(1816,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setLoggedInMID(long)','(M)',0.15384615384615385,1),(1817,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setSystolicBloodPressure(int)','(M)',0.15384615384615385,1),(1818,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setDiastolicBloodPressure(int)','(M)',0.15384615384615385,1),(1819,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setGlucoseLevel(int)','(M)',0.15384615384615385,1),(1820,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setHeight(float)','(M)',0.15384615384615385,1),(1821,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setWeight(float)','(M)',0.15384615384615385,1),(1822,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setPedometerReading(int)','(M)',0.15384615384615385,1),(1823,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setTime(java.sql.Timestamp)','(M)',0.15384615384615385,1),(1824,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setReporterRole(java.lang.String)','(M)',0.15384615384615385,1),(1825,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setReporterMID(long)','(M)',0.15384615384615385,1),(1826,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','(M)',1,1),(1827,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.14285714285714285,1),(1828,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadSingle(java.sql.ResultSet)','(M)',0.5,1),(1829,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:<init>(long)','(O)',0.2222222222222222,1),(1830,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setHcpID(long)','(M)',0.16666666666666666,1),(1831,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setNotes(java.lang.String)','(M)',0.2,1),(1832,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setPatientID(long)','(M)',0.16666666666666666,1),(1833,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setHospitalID(java.lang.String)','(M)',0.2,1),(1834,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setVisitDateStr(java.lang.String)','(M)',0.2,1),(1835,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OfficeVisitBean)','(M)',1,1),(1836,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadSingle(java.sql.ResultSet)','(M)',0.2,1),(1837,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','(M)',0.5,1),(1838,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:<init>()','(O)',0.1,1),(1839,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setMID(long)','(M)',0.07692307692307693,1),(1840,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setAMID(long)','(M)',0.1,1),(1841,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setRoleString(java.lang.String)','(M)',0.1,1),(1842,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setLastName(java.lang.String)','(M)',0.1,1),(1843,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setFirstName(java.lang.String)','(M)',0.1,1),(1844,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setPhone1(java.lang.String)','(M)',0.1,1),(1845,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setPhone2(java.lang.String)','(M)',0.1,1),(1846,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setPhone3(java.lang.String)','(M)',0.1,1),(1847,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setStreetAddress1(java.lang.String)','(M)',0.1,1),(1848,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setStreetAddress2(java.lang.String)','(M)',0.1,1),(1849,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setCity(java.lang.String)','(M)',0.1,1),(1850,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setState(java.lang.String)','(M)',0.1,1),(1851,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setZip1(java.lang.String)','(M)',0.1,1),(1852,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setZip2(java.lang.String)','(M)',0.1,1),(1853,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setEmail(java.lang.String)','(M)',0.1,1),(1854,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setSpecialty(java.lang.String)','(M)',0.1,1),(1855,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PersonnelBean:setMessageFilter(java.lang.String)','(M)',0.09523809523809523,1),(1856,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getAMID()','(M)',0.11764705882352941,1),(1857,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getFirstName()','(M)',0.1,1),(1858,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getLastName()','(M)',0.09523809523809523,1),(1859,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getPhone1()','(M)',0.11764705882352941,1),(1860,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getPhone2()','(M)',0.11764705882352941,1),(1861,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getPhone3()','(M)',0.11764705882352941,1),(1862,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getStreetAddress1()','(M)',0.1,1),(1863,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getStreetAddress2()','(M)',0.1,1),(1864,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getCity()','(M)',0.1,1),(1865,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getState()','(M)',0.1,1),(1866,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getZip()','(M)',0.09523809523809523,1),(1867,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getZip1()','(M)',0.10526315789473684,1),(1868,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getZip2()','(M)',0.1111111111111111,1),(1869,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getSpecialty()','(M)',0.08695652173913043,1),(1870,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getEmail()','(M)',0.08333333333333333,1),(1871,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getMessageFilter()','(M)',0.11764705882352941,1),(1872,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.6666666666666666,1),(1873,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','(M)',0.09090909090909091,1),(1874,'edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(1875,'edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:<init>()','(O)',0.25,1),(1876,'edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:setDescription(java.lang.String)','(M)',0.25,1),(1877,'edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:setFirstDrug(java.lang.String)','(M)',0.25,1),(1878,'edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:setSecondDrug(java.lang.String)','(M)',0.25,1),(1879,'edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.DrugInteractionBean)','(M)',1,1),(1880,'edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2857142857142857,1),(1881,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:<init>()','edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:<init>()','(O)',0.6666666666666666,1),(1882,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.5,1),(1883,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PrescriptionBean:<init>()','(O)',0.16666666666666666,1),(1884,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setId(long)','(M)',0.18181818181818182,1),(1885,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setVisitID(long)','(M)',0.16666666666666666,1),(1886,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setStartDateStr(java.lang.String)','(M)',0.16666666666666666,1),(1887,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setEndDateStr(java.lang.String)','(M)',0.16666666666666666,1),(1888,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setDosage(int)','(M)',0.16666666666666666,1),(1889,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setInstructions(java.lang.String)','(M)',0.16666666666666666,1),(1890,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.14285714285714285,1),(1891,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PrescriptionBean:setMedication(edu.ncsu.csc.itrust.beans.MedicationBean)','(M)',0.16666666666666666,1),(1892,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getVisitID()','(M)',0.2222222222222222,1),(1893,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getMedication()','(M)',0.15384615384615385,1),(1894,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()','(M)',0.1,1),(1895,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getStartDate()','(M)',0.2,1),(1896,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getEndDate()','(M)',0.2,1),(1897,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getDosage()','(M)',0.25,1),(1898,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getInstructions()','(M)',0.2222222222222222,1),(1899,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PrescriptionBean)','(M)',0.5,1),(1900,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.15384615384615385,1),(1901,'edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.5,1),(1902,'edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OverrideReasonBean:<init>(java.lang.String)','(O)',0.5,1),(1903,'edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OverrideReasonBean:setDescription(java.lang.String)','(M)',0.5,1),(1904,'edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OverrideReasonBean)','(M)',1,1),(1905,'edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.3333333333333333,1),(1906,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(1907,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:<init>()','(O)',0.11764705882352941,1),(1908,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setId(long)','(M)',0.11764705882352941,1),(1909,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setSenderID(long)','(M)',0.11764705882352941,1),(1910,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setReceiverID(long)','(M)',0.11764705882352941,1),(1911,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setPatientID(long)','(M)',0.11764705882352941,1),(1912,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setReferralDetails(java.lang.String)','(M)',0.11764705882352941,1),(1913,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setOvid(long)','(M)',0.11764705882352941,1),(1914,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setTimeStamp(java.lang.String)','(M)',0.11764705882352941,1),(1915,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setViewedByHCP(boolean)','(M)',0.11764705882352941,1),(1916,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setViewedByPatient(boolean)','(M)',0.11764705882352941,1),(1917,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setPriority(int)','(M)',0.11764705882352941,1),(1918,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setOvDate(java.lang.String)','(M)',0.11764705882352941,1),(1919,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setPatientName(java.lang.String)','(M)',0.11764705882352941,1),(1920,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setReceiverName(java.lang.String)','(M)',0.11764705882352941,1),(1921,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.VerboseReferralBean:setSenderName(java.lang.String)','(M)',0.11764705882352941,1),(1922,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.VerboseReferralBean)','(M)',1,1),(1923,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.1111111111111111,1),(1924,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(1925,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getApptType()','(M)',0.2222222222222222,1),(1926,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getPatient()','(M)',0.3333333333333333,1),(1927,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getHcp()','(M)',0.3333333333333333,1),(1928,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getDate()','(M)',0.18181818181818182,1),(1929,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getComment()','(M)',0.25,1),(1930,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ApptBean:<init>()','(O)',0.2222222222222222,1),(1931,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ApptBean:setApptID(int)','(M)',0.2222222222222222,1),(1932,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ApptBean:setApptType(java.lang.String)','(M)',0.2222222222222222,1),(1933,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ApptBean:setPatient(long)','(M)',0.2222222222222222,1),(1934,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ApptBean:setHcp(long)','(M)',0.2222222222222222,1),(1935,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ApptBean:setDate(java.sql.Timestamp)','(M)',0.2222222222222222,1),(1936,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ApptBean:setComment(java.lang.String)','(M)',0.2222222222222222,1),(1937,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ApptBean)','(M)',0.6666666666666666,1),(1938,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2,1),(1939,'edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.4,1),(1940,'edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.MedicationBean:<init>(java.lang.String)','(O)',0.5,1),(1941,'edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.MedicationBean:setDescription(java.lang.String)','(M)',0.3333333333333333,1),(1942,'edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.MedicationBean)','(M)',1,1),(1943,'edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2857142857142857,1),(1944,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.5,1),(1945,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ProcedureBean:<init>(java.lang.String)','(O)',0.2857142857142857,1),(1946,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ProcedureBean:setDescription(java.lang.String)','(M)',0.2857142857142857,1),(1947,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ProcedureBean:setAttribute(java.lang.String)','(M)',0.2857142857142857,1),(1948,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ProcedureBean:setOvProcedureID(long)','(M)',0.2857142857142857,1),(1949,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ProcedureBean:setDate(java.sql.Date)','(M)',0.2857142857142857,1),(1950,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getDescription()','(M)',0.3333333333333333,1),(1951,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ProcedureBean)','(M)',1,1),(1952,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2222222222222222,1),(1953,'edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyBean:<init>()','(O)',0.2222222222222222,1),(1954,'edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyBean:setVisitID(long)','(M)',0.2,1),(1955,'edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyBean:setSurveyDate(java.util.Date)','(M)',0.2,1),(1956,'edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyBean:setExamRoomMinutes(int)','(M)',0.2222222222222222,1),(1957,'edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyBean:setWaitingRoomMinutes(int)','(M)',0.2222222222222222,1),(1958,'edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyBean:setTreatmentSatisfaction(int)','(M)',0.2222222222222222,1),(1959,'edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyBean:setVisitSatisfaction(int)','(M)',0.2222222222222222,1),(1960,'edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.SurveyBean)','(M)',1,1),(1961,'edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadSingle(java.sql.ResultSet)','(M)',0.2,1),(1962,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.5,1),(1963,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReportRequestBean:<init>()','(O)',0.2222222222222222,1),(1964,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReportRequestBean:setID(long)','(M)',0.2222222222222222,1),(1965,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReportRequestBean:setRequesterMID(long)','(M)',0.2222222222222222,1),(1966,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReportRequestBean:setPatientMID(long)','(M)',0.2222222222222222,1),(1967,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReportRequestBean:setRequestedDate(java.util.Date)','(M)',0.2,1),(1968,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReportRequestBean:setViewedDate(java.util.Date)','(M)',0.2,1),(1969,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReportRequestBean:setStatus(java.lang.String)','(M)',0.2222222222222222,1),(1970,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReportRequestBean)','(M)',1,1),(1971,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.18181818181818182,1),(1972,'edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.5,1),(1973,'edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.HospitalBean:<init>(java.lang.String,java.lang.String)','(O)',0.6666666666666666,1),(1974,'edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HospitalBean)','(M)',1,1),(1975,'edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.4,1),(1976,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.5,1),(1977,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReferralBean:<init>()','(O)',0.14285714285714285,1),(1978,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReferralBean:setId(long)','(M)',0.14285714285714285,1),(1979,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReferralBean:setSenderID(long)','(M)',0.14285714285714285,1),(1980,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReferralBean:setReceiverID(long)','(M)',0.14285714285714285,1),(1981,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReferralBean:setPatientID(long)','(M)',0.14285714285714285,1),(1982,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReferralBean:setReferralDetails(java.lang.String)','(M)',0.14285714285714285,1),(1983,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReferralBean:setOvid(long)','(M)',0.14285714285714285,1),(1984,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReferralBean:setTimeStamp(java.lang.String)','(M)',0.14285714285714285,1),(1985,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReferralBean:setViewedByHCP(boolean)','(M)',0.14285714285714285,1),(1986,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReferralBean:setViewedByPatient(boolean)','(M)',0.14285714285714285,1),(1987,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ReferralBean:setPriority(int)','(M)',0.14285714285714285,1),(1988,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getPatientID()','(M)',0.13333333333333333,1),(1989,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getSenderID()','(M)',0.14285714285714285,1),(1990,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getReceiverID()','(M)',0.125,1),(1991,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getReferralDetails()','(M)',0.16666666666666666,1),(1992,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getOvid()','(M)',0.2,1),(1993,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:isViewedByPatient()','(M)',0.2222222222222222,1),(1994,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:isViewedByHCP()','(M)',0.2222222222222222,1),(1995,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getPriority()','(M)',0.2,1),(1996,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReferralBean)','(M)',0.5,1),(1997,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.13333333333333333,1),(1998,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(1999,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:<init>()','(O)',0.1111111111111111,1),(2000,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPMID(long)','(M)',0.1111111111111111,1),(2001,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setAvgExamRoomMinutes(float)','(M)',0.1111111111111111,1),(2002,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setAvgTreatmentSatisfaction(float)','(M)',0.1111111111111111,1),(2003,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setAvgVisitSatisfaction(float)','(M)',0.1111111111111111,1),(2004,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setAvgWaitingRoomMinutes(float)','(M)',0.1111111111111111,1),(2005,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPaddress1(java.lang.String)','(M)',0.1111111111111111,1),(2006,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPaddress2(java.lang.String)','(M)',0.1111111111111111,1),(2007,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPcity(java.lang.String)','(M)',0.1111111111111111,1),(2008,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPstate(java.lang.String)','(M)',0.1111111111111111,1),(2009,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPzip(java.lang.String)','(M)',0.1111111111111111,1),(2010,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPhospital(java.lang.String)','(M)',0.1111111111111111,1),(2011,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPFirstName(java.lang.String)','(M)',0.1111111111111111,1),(2012,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPLastName(java.lang.String)','(M)',0.1111111111111111,1),(2013,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPspecialty(java.lang.String)','(M)',0.1111111111111111,1),(2014,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.SurveyResultBean:setPercentSatisfactionResults(float)','(M)',0.1111111111111111,1),(2015,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.SurveyResultBean)','(M)',1,1),(2016,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2017,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(2018,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TransactionBean:<init>()','(O)',0.2,1),(2019,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TransactionBean:setAddedInfo(java.lang.String)','(M)',0.2,1),(2020,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TransactionBean:setLoggedInMID(long)','(M)',0.2,1),(2021,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TransactionBean:setSecondaryMID(long)','(M)',0.2,1),(2022,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TransactionBean:setTimeLogged(java.sql.Timestamp)','(M)',0.2,1),(2023,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.enums.TransactionType:parse(int)','(S)',0.18181818181818182,1),(2024,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TransactionBean:setTransactionType(edu.ncsu.csc.itrust.enums.TransactionType)','(M)',0.2,1),(2025,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.TransactionBean:setTransactionID(long)','(M)',0.2,1),(2026,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.TransactionBean)','(M)',1,1),(2027,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.18181818181818182,1),(2028,'edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.5,1),(2029,'edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.DiagnosisBean:<init>(java.lang.String,java.lang.String,java.lang.String)','(O)',0.4,1),(2030,'edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.DiagnosisBean:setOvDiagnosisID(long)','(M)',0.4,1),(2031,'edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.DiagnosisBean:setVisitID(long)','(M)',0.4,1),(2032,'edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.DiagnosisBean)','(M)',1,1),(2033,'edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2857142857142857,1),(2034,'edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadSingle(java.sql.ResultSet)','(M)',0.3333333333333333,1),(2035,'edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm:<init>(long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','(O)',0.6666666666666666,1),(2036,'edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm)','(M)',1,1),(2037,'edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadSingle(java.sql.ResultSet)','(M)',0.2857142857142857,1),(2038,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(2039,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:<init>()','(O)',0.2222222222222222,1),(2040,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:setName(java.lang.String)','(M)',0.2222222222222222,1),(2041,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:setComment(java.lang.String)','(M)',0.2222222222222222,1),(2042,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:setUrl(java.lang.String)','(M)',0.2222222222222222,1),(2043,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:setModified(java.util.Date)','(M)',0.2222222222222222,1),(2044,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:setId(long)','(M)',0.2222222222222222,1),(2045,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:setVisitID(long)','(M)',0.2222222222222222,1),(2046,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getVisitID()','(M)',0.3333333333333333,1),(2047,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getModified()','(M)',0.3333333333333333,1),(2048,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getName()','(M)',0.2857142857142857,1),(2049,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getUrl()','(M)',0.2857142857142857,1),(2050,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getComment()','(M)',0.2857142857142857,1),(2051,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','(M)',0.5,1),(2052,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2,1),(2053,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(2054,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.beans.HealthRecord:getPatientID()','(M)',0.16666666666666666,1),(2055,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.beans.HealthRecord:getHeight()','(M)',0.15384615384615385,1),(2056,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.beans.HealthRecord:getWeight()','(M)',0.15384615384615385,1),(2057,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.beans.HealthRecord:isSmoker()','(M)',0.14285714285714285,1),(2058,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.beans.HealthRecord:getSmokingStatus()','(M)',0.16666666666666666,1),(2059,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureN()','(M)',0.15384615384615385,1),(2060,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureD()','(M)',0.15384615384615385,1),(2061,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolHDL()','(M)',0.125,1),(2062,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolLDL()','(M)',0.125,1),(2063,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolTri()','(M)',0.14285714285714285,1),(2064,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.beans.HealthRecord:getPersonnelID()','(M)',0.16666666666666666,1),(2065,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.HealthRecord:<init>()','(O)',0.13333333333333333,1),(2066,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.HealthRecord:setBloodPressureN(int)','(M)',0.13333333333333333,1),(2067,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.HealthRecord:setBloodPressureD(int)','(M)',0.13333333333333333,1),(2068,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.HealthRecord:setCholesterolHDL(int)','(M)',0.13333333333333333,1),(2069,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.HealthRecord:setCholesterolLDL(int)','(M)',0.13333333333333333,1),(2070,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.HealthRecord:setCholesterolTri(int)','(M)',0.13333333333333333,1),(2071,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.HealthRecord:setDateRecorded(java.sql.Timestamp)','(M)',0.14285714285714285,1),(2072,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.HealthRecord:setSmoker(int)','(M)',0.13333333333333333,1),(2073,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.HealthRecord:setHeight(double)','(M)',0.13333333333333333,1),(2074,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.HealthRecord:setWeight(double)','(M)',0.13333333333333333,1),(2075,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.HealthRecord:setPersonnelID(long)','(M)',0.13333333333333333,1),(2076,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.HealthRecord:setPatientID(long)','(M)',0.13333333333333333,1),(2077,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)','(M)',0.6666666666666666,1),(2078,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.13333333333333333,1),(2079,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:<init>()','edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:<init>()','(O)',0.4,1),(2080,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:<init>()','edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:<init>()','(O)',0.4,1),(2081,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(2082,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PrescriptionReportBean:<init>()','(O)',0.2857142857142857,1),(2083,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadSingle(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2084,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PrescriptionReportBean:setOfficeVisit(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','(M)',0.2857142857142857,1),(2085,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2086,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PrescriptionReportBean:setPrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)','(M)',0.2857142857142857,1),(2087,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PrescriptionReportBean)','(M)',1,1),(2088,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.25,1),(2089,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OperationalProfile:<init>()','(O)',0.2,1),(2090,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.enums.TransactionType:parse(int)','(S)',0.18181818181818182,1),(2091,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OperationalProfile:getTotalCount()','(M)',0.2,1),(2092,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OperationalProfile:getPatientCount()','(M)',0.2,1),(2093,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OperationalProfile:getPersonnelCount()','(M)',0.2,1),(2094,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OperationalProfile:setNumTotalTransactions(int)','(M)',0.2,1),(2095,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OperationalProfile:setNumPatientTransactions(int)','(M)',0.2,1),(2096,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.OperationalProfile:setNumPersonnelTransactions(int)','(M)',0.2,1),(2097,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OperationalProfile)','(M)',1,1),(2098,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadSingle(java.sql.ResultSet)','(M)',0.18181818181818182,1),(2099,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(2100,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.MessageBean:getFrom()','(M)',0.2222222222222222,1),(2101,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.MessageBean:getTo()','(M)',0.25,1),(2102,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.MessageBean:getBody()','(M)',0.2,1),(2103,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.MessageBean:getSubject()','(M)',0.2222222222222222,1),(2104,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.MessageBean:getRead()','(M)',0.25,1),(2105,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.MessageBean:getParentMessageId()','(M)',0.25,1),(2106,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.MessageBean:<init>()','(O)',0.14285714285714285,1),(2107,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.MessageBean:setMessageId(long)','(M)',0.18181818181818182,1),(2108,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.MessageBean:setFrom(long)','(M)',0.14285714285714285,1),(2109,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.MessageBean:setTo(long)','(M)',0.14285714285714285,1),(2110,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.MessageBean:setSubject(java.lang.String)','(M)',0.14285714285714285,1),(2111,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.MessageBean:setBody(java.lang.String)','(M)',0.14285714285714285,1),(2112,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.MessageBean:setSentDate(java.sql.Timestamp)','(M)',0.18181818181818182,1),(2113,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.MessageBean:setRead(int)','(M)',0.15384615384615385,1),(2114,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.MessageBean:setParentMessageId(long)','(M)',0.18181818181818182,1),(2115,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.MessageBean)','(M)',0.6666666666666666,1),(2116,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.16666666666666666,1),(2117,'edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.6666666666666666,1),(2118,'edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.beans.ApptTypeBean:getName()','(M)',0.25,1),(2119,'edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.beans.ApptTypeBean:getDuration()','(M)',0.25,1),(2120,'edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ApptTypeBean:<init>()','(O)',0.4,1),(2121,'edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ApptTypeBean:setName(java.lang.String)','(M)',0.4,1),(2122,'edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.ApptTypeBean:setDuration(int)','(M)',0.4,1),(2123,'edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ApptTypeBean)','(M)',0.6666666666666666,1),(2124,'edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.3333333333333333,1),(2125,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadList(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','(M)',0.5,1),(2126,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:<init>()','(O)',0.041666666666666664,1),(2127,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setMID(long)','(M)',0.04,1),(2128,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setFirstName(java.lang.String)','(M)',0.041666666666666664,1),(2129,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setLastName(java.lang.String)','(M)',0.041666666666666664,1),(2130,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setDateOfBirthStr(java.lang.String)','(M)',0.041666666666666664,1),(2131,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setDateOfDeathStr(java.lang.String)','(M)',0.041666666666666664,1),(2132,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setCauseOfDeath(java.lang.String)','(M)',0.041666666666666664,1),(2133,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setEmail(java.lang.String)','(M)',0.041666666666666664,1),(2134,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setStreetAddress1(java.lang.String)','(M)',0.041666666666666664,1),(2135,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setStreetAddress2(java.lang.String)','(M)',0.041666666666666664,1),(2136,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setCity(java.lang.String)','(M)',0.041666666666666664,1),(2137,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setState(java.lang.String)','(M)',0.041666666666666664,1),(2138,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setZip1(java.lang.String)','(M)',0.041666666666666664,1),(2139,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setZip2(java.lang.String)','(M)',0.041666666666666664,1),(2140,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setPhone1(java.lang.String)','(M)',0.041666666666666664,1),(2141,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setPhone2(java.lang.String)','(M)',0.041666666666666664,1),(2142,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setPhone3(java.lang.String)','(M)',0.041666666666666664,1),(2143,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setEmergencyName(java.lang.String)','(M)',0.041666666666666664,1),(2144,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setEmergencyPhone1(java.lang.String)','(M)',0.041666666666666664,1),(2145,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setEmergencyPhone2(java.lang.String)','(M)',0.041666666666666664,1),(2146,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setEmergencyPhone3(java.lang.String)','(M)',0.041666666666666664,1),(2147,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setIcName(java.lang.String)','(M)',0.041666666666666664,1),(2148,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setIcAddress1(java.lang.String)','(M)',0.041666666666666664,1),(2149,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setIcAddress2(java.lang.String)','(M)',0.041666666666666664,1),(2150,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setIcCity(java.lang.String)','(M)',0.041666666666666664,1),(2151,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setIcState(java.lang.String)','(M)',0.041666666666666664,1),(2152,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setIcZip1(java.lang.String)','(M)',0.041666666666666664,1),(2153,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setIcZip2(java.lang.String)','(M)',0.041666666666666664,1),(2154,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setIcPhone1(java.lang.String)','(M)',0.041666666666666664,1),(2155,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setIcPhone2(java.lang.String)','(M)',0.041666666666666664,1),(2156,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setIcPhone3(java.lang.String)','(M)',0.041666666666666664,1),(2157,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setIcID(java.lang.String)','(M)',0.041666666666666664,1),(2158,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setMotherMID(java.lang.String)','(M)',0.041666666666666664,1),(2159,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setFatherMID(java.lang.String)','(M)',0.041666666666666664,1),(2160,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setBloodTypeStr(java.lang.String)','(M)',0.041666666666666664,1),(2161,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setEthnicityStr(java.lang.String)','(M)',0.041666666666666664,1),(2162,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setGenderStr(java.lang.String)','(M)',0.041666666666666664,1),(2163,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setTopicalNotes(java.lang.String)','(M)',0.041666666666666664,1),(2164,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setCreditCardType(java.lang.String)','(M)',0.041666666666666664,1),(2165,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setCreditCardNumber(java.lang.String)','(M)',0.041666666666666664,1),(2166,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setMessageFilter(java.lang.String)','(M)',0.04081632653061224,1),(2167,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setDirectionsToHome(java.lang.String)','(M)',0.041666666666666664,1),(2168,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setReligion(java.lang.String)','(M)',0.041666666666666664,1),(2169,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setLanguage(java.lang.String)','(M)',0.041666666666666664,1),(2170,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setSpiritualPractices(java.lang.String)','(M)',0.041666666666666664,1),(2171,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientBean:setAlternateName(java.lang.String)','(M)',0.041666666666666664,1),(2172,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:<init>()','(O)',0.04081632653061224,1),(2173,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setChangeMID(long)','(M)',0.04081632653061224,1),(2174,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setChangeDateStr(java.lang.String)','(M)',0.04081632653061224,1),(2175,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setMID(long)','(M)',0.04081632653061224,1),(2176,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setFirstName(java.lang.String)','(M)',0.04081632653061224,1),(2177,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setLastName(java.lang.String)','(M)',0.04081632653061224,1),(2178,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setDateOfBirthStr(java.lang.String)','(M)',0.04081632653061224,1),(2179,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setDateOfDeathStr(java.lang.String)','(M)',0.04081632653061224,1),(2180,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setCauseOfDeath(java.lang.String)','(M)',0.04081632653061224,1),(2181,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setEmail(java.lang.String)','(M)',0.04081632653061224,1),(2182,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setStreetAddress1(java.lang.String)','(M)',0.04081632653061224,1),(2183,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setStreetAddress2(java.lang.String)','(M)',0.04081632653061224,1),(2184,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setCity(java.lang.String)','(M)',0.04081632653061224,1),(2185,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setState(java.lang.String)','(M)',0.04081632653061224,1),(2186,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setZip1(java.lang.String)','(M)',0.04081632653061224,1),(2187,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setZip2(java.lang.String)','(M)',0.04081632653061224,1),(2188,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setPhone1(java.lang.String)','(M)',0.04081632653061224,1),(2189,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setPhone2(java.lang.String)','(M)',0.04081632653061224,1),(2190,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setPhone3(java.lang.String)','(M)',0.04081632653061224,1),(2191,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setEmergencyName(java.lang.String)','(M)',0.04081632653061224,1),(2192,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setEmergencyPhone1(java.lang.String)','(M)',0.04081632653061224,1),(2193,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setEmergencyPhone2(java.lang.String)','(M)',0.04081632653061224,1),(2194,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setEmergencyPhone3(java.lang.String)','(M)',0.04081632653061224,1),(2195,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcName(java.lang.String)','(M)',0.04081632653061224,1),(2196,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcAddress1(java.lang.String)','(M)',0.04081632653061224,1),(2197,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcAddress2(java.lang.String)','(M)',0.04081632653061224,1),(2198,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcCity(java.lang.String)','(M)',0.04081632653061224,1),(2199,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcState(java.lang.String)','(M)',0.04081632653061224,1),(2200,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcZip1(java.lang.String)','(M)',0.04081632653061224,1),(2201,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcZip2(java.lang.String)','(M)',0.04081632653061224,1),(2202,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcPhone1(java.lang.String)','(M)',0.04081632653061224,1),(2203,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcPhone2(java.lang.String)','(M)',0.04081632653061224,1),(2204,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcPhone3(java.lang.String)','(M)',0.04081632653061224,1),(2205,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcID(java.lang.String)','(M)',0.04081632653061224,1),(2206,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setMotherMID(java.lang.String)','(M)',0.04081632653061224,1),(2207,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setFatherMID(java.lang.String)','(M)',0.04081632653061224,1),(2208,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setBloodTypeStr(java.lang.String)','(M)',0.04081632653061224,1),(2209,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setEthnicityStr(java.lang.String)','(M)',0.04081632653061224,1),(2210,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setGenderStr(java.lang.String)','(M)',0.04081632653061224,1),(2211,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setTopicalNotes(java.lang.String)','(M)',0.04081632653061224,1),(2212,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setCreditCardType(java.lang.String)','(M)',0.04081632653061224,1),(2213,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setCreditCardNumber(java.lang.String)','(M)',0.04081632653061224,1),(2214,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setMessageFilter(java.lang.String)','(M)',0.04081632653061224,1),(2215,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setDirectionsToHome(java.lang.String)','(M)',0.04081632653061224,1),(2216,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setReligion(java.lang.String)','(M)',0.04081632653061224,1),(2217,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setLanguage(java.lang.String)','(M)',0.04081632653061224,1),(2218,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setSpiritualPractices(java.lang.String)','(M)',0.04081632653061224,1),(2219,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.PatientHistoryBean:setAlternateName(java.lang.String)','(M)',0.04081632653061224,1),(2220,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getFirstName()','(M)',0.038461538461538464,1),(2221,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getLastName()','(M)',0.038461538461538464,1),(2222,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.031746031746031744,1),(2223,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getStreetAddress1()','(M)',0.04,1),(2224,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getStreetAddress2()','(M)',0.04,1),(2225,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getCity()','(M)',0.0392156862745098,1),(2226,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getState()','(M)',0.0392156862745098,1),(2227,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getZip1()','(M)',0.04,1),(2228,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getZip2()','(M)',0.04081632653061224,1),(2229,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getPhone1()','(M)',0.04081632653061224,1),(2230,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getPhone2()','(M)',0.04081632653061224,1),(2231,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getPhone3()','(M)',0.04081632653061224,1),(2232,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyName()','(M)',0.04,1),(2233,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone1()','(M)',0.04081632653061224,1),(2234,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone2()','(M)',0.04081632653061224,1),(2235,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone3()','(M)',0.04081632653061224,1),(2236,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcName()','(M)',0.04081632653061224,1),(2237,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcAddress1()','(M)',0.04081632653061224,1),(2238,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcAddress2()','(M)',0.04081632653061224,1),(2239,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcCity()','(M)',0.04,1),(2240,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcState()','(M)',0.04,1),(2241,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcZip1()','(M)',0.04081632653061224,1),(2242,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcZip2()','(M)',0.04081632653061224,1),(2243,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone1()','(M)',0.04081632653061224,1),(2244,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone2()','(M)',0.04081632653061224,1),(2245,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone3()','(M)',0.04081632653061224,1),(2246,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcID()','(M)',0.04081632653061224,1),(2247,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getDateOfBirthStr()','(M)',0.04081632653061224,1),(2248,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getDateOfDeathStr()','(M)',0.04081632653061224,1),(2249,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getCauseOfDeath()','(M)',0.0392156862745098,1),(2250,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getMotherMID()','(M)',0.04081632653061224,1),(2251,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getFatherMID()','(M)',0.04081632653061224,1),(2252,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getBloodType()','(M)',0.04081632653061224,1),(2253,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.enums.BloodType:getName()','(M)',0.04,1),(2254,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getEthnicity()','(M)',0.04,1),(2255,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.enums.Ethnicity:getName()','(M)',0.04081632653061224,1),(2256,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getGender()','(M)',0.038461538461538464,1),(2257,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.enums.Gender:getName()','(M)',0.04,1),(2258,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getTopicalNotes()','(M)',0.04081632653061224,1),(2259,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getCreditCardType()','(M)',0.04081632653061224,1),(2260,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getCreditCardNumber()','(M)',0.04081632653061224,1),(2261,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getMessageFilter()','(M)',0.041666666666666664,1),(2262,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getDirectionsToHome()','(M)',0.04081632653061224,1),(2263,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getReligion()','(M)',0.04081632653061224,1),(2264,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getLanguage()','(M)',0.04081632653061224,1),(2265,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getSpiritualPractices()','(M)',0.04081632653061224,1),(2266,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getAlternateName()','(M)',0.04081632653061224,1),(2267,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)','edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','(M)',0.6666666666666666,1),(2268,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','(M)',0.04,1),(2269,'edu.ncsu.csc.itrust.charts.AdverseEventsData:produceDataset(java.util.Map)','edu.ncsu.csc.itrust.charts.AdverseEventsData$1:<init>(edu.ncsu.csc.itrust.charts.AdverseEventsData)','(O)',0.6666666666666666,1),(2270,'edu.ncsu.csc.itrust.charts.AdverseEventsData:produceDataset(java.util.Map)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getDate()','(M)',0.6666666666666666,1),(2271,'edu.ncsu.csc.itrust.charts.DiagnosisTrendData:<init>()','edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:<init>()','(O)',1,1),(2272,'edu.ncsu.csc.itrust.charts.DiagnosisTrendData:initializeDiagnosisStatistics(edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean,java.lang.String)','edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:getZipStats()','(M)',0.4,1),(2273,'edu.ncsu.csc.itrust.charts.DiagnosisTrendData:initializeDiagnosisStatistics(edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean,java.lang.String)','edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:getRegionStats()','(M)',0.2857142857142857,1),(2274,'edu.ncsu.csc.itrust.charts.DiagnosisTrendData:initializeAvgDiagnosisStatistics(edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean,edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean,java.lang.String)','edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:getZipStats()','(M)',0.4,1),(2275,'edu.ncsu.csc.itrust.charts.DiagnosisTrendData:initializeAvgDiagnosisStatistics(edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean,edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean,java.lang.String)','edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:getRegionStats()','(M)',0.2857142857142857,1),(2276,'edu.ncsu.csc.itrust.charts.DiagnosisTrendData:produceDataset(java.util.Map)','edu.ncsu.csc.itrust.charts.DiagnosisTrendData$1:<init>(edu.ncsu.csc.itrust.charts.DiagnosisTrendData)','(O)',1,1),(2277,'edu.ncsu.csc.itrust.charts.PatientLabResults:hasData()','edu.ncsu.csc.itrust.beans.LabProcedureBean:getTimestamp()','(M)',0.5,1),(2278,'edu.ncsu.csc.itrust.charts.PatientLabResults:produceDataset(java.util.Map)','edu.ncsu.csc.itrust.charts.PatientLabResults$1:<init>(edu.ncsu.csc.itrust.charts.PatientLabResults)','(O)',0.5,1),(2279,'edu.ncsu.csc.itrust.charts.PatientLabResults:produceDataset(java.util.Map)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getTimestamp()','(M)',0.3333333333333333,1),(2280,'edu.ncsu.csc.itrust.charts.PatientLabResults:produceDataset(java.util.Map)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getNumericalResultAsDouble()','(M)',0.5,1),(2281,'edu.ncsu.csc.itrust.charts.HealthData:hasData()','edu.ncsu.csc.itrust.beans.HealthRecord:getDateRecorded()','(M)',0.6666666666666666,1),(2282,'edu.ncsu.csc.itrust.charts.HealthData:produceDataset(java.util.Map)','edu.ncsu.csc.itrust.charts.HealthData$1:<init>(edu.ncsu.csc.itrust.charts.HealthData)','(O)',0.4,1),(2283,'edu.ncsu.csc.itrust.charts.HealthData:produceDataset(java.util.Map)','edu.ncsu.csc.itrust.beans.HealthRecord:getDateRecorded()','(M)',0.3333333333333333,1),(2284,'edu.ncsu.csc.itrust.charts.HealthData:produceDataset(java.util.Map)','edu.ncsu.csc.itrust.beans.HealthRecord:getHeight()','(M)',0.3333333333333333,1),(2285,'edu.ncsu.csc.itrust.charts.HealthData:produceDataset(java.util.Map)','edu.ncsu.csc.itrust.beans.HealthRecord:getWeight()','(M)',0.3333333333333333,1),(2286,'edu.ncsu.csc.itrust.dao.DAOFactory:getProductionInstance()','edu.ncsu.csc.itrust.dao.DAOFactory:<init>()','(O)',1,1),(2287,'edu.ncsu.csc.itrust.dao.DAOFactory:<init>()','edu.ncsu.csc.itrust.dao.ProductionConnectionDriver:<init>()','(O)',1,1),(2288,'edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','edu.ncsu.csc.itrust.dao.IConnectionDriver:getConnection()','(I)',1,1),(2289,'edu.ncsu.csc.itrust.dao.DAOFactory:getAccessDAO()','edu.ncsu.csc.itrust.dao.mysql.AccessDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2290,'edu.ncsu.csc.itrust.dao.DAOFactory:getAllergyDAO()','edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2291,'edu.ncsu.csc.itrust.dao.DAOFactory:getApptDAO()','edu.ncsu.csc.itrust.dao.mysql.ApptDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2292,'edu.ncsu.csc.itrust.dao.DAOFactory:getApptTypeDAO()','edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2293,'edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2294,'edu.ncsu.csc.itrust.dao.DAOFactory:getCPTCodesDAO()','edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2295,'edu.ncsu.csc.itrust.dao.DAOFactory:getDrugInteractionDAO()','edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2296,'edu.ncsu.csc.itrust.dao.DAOFactory:getFamilyDAO()','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2297,'edu.ncsu.csc.itrust.dao.DAOFactory:getHealthRecordsDAO()','edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2298,'edu.ncsu.csc.itrust.dao.DAOFactory:getHospitalsDAO()','edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2299,'edu.ncsu.csc.itrust.dao.DAOFactory:getICDCodesDAO()','edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2300,'edu.ncsu.csc.itrust.dao.DAOFactory:getNDCodesDAO()','edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2301,'edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.6666666666666666,1),(2302,'edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.5,1),(2303,'edu.ncsu.csc.itrust.dao.DAOFactory:getProfilePhotoDAO()','edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2304,'edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.5,1),(2305,'edu.ncsu.csc.itrust.dao.DAOFactory:getReferralDAO()','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2306,'edu.ncsu.csc.itrust.dao.DAOFactory:getRiskDAO()','edu.ncsu.csc.itrust.dao.mysql.RiskDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2307,'edu.ncsu.csc.itrust.dao.DAOFactory:getTransactionDAO()','edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2308,'edu.ncsu.csc.itrust.dao.DAOFactory:getVisitRemindersDAO()','edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2309,'edu.ncsu.csc.itrust.dao.DAOFactory:getFakeEmailDAO()','edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2310,'edu.ncsu.csc.itrust.dao.DAOFactory:getReportRequestDAO()','edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2311,'edu.ncsu.csc.itrust.dao.DAOFactory:getSurveyDAO()','edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2312,'edu.ncsu.csc.itrust.dao.DAOFactory:getLabProcedureDAO()','edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2313,'edu.ncsu.csc.itrust.dao.DAOFactory:getLOINCDAO()','edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2314,'edu.ncsu.csc.itrust.dao.DAOFactory:getSurveyResultDAO()','edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2315,'edu.ncsu.csc.itrust.dao.DAOFactory:getMessageDAO()','edu.ncsu.csc.itrust.dao.mysql.MessageDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2316,'edu.ncsu.csc.itrust.dao.DAOFactory:getAdverseEventDAO()','edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2317,'edu.ncsu.csc.itrust.dao.DAOFactory:getRemoteMonitoringDAO()','edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2318,'edu.ncsu.csc.itrust.dao.DAOFactory:getPrescriptionsDAO()','edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2319,'edu.ncsu.csc.itrust.dao.DAOFactory:getDiagnosesDAO()','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2320,'edu.ncsu.csc.itrust.dao.DAOFactory:getProceduresDAO()','edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2321,'edu.ncsu.csc.itrust.dao.DAOFactory:getPrescriptionReportDAO()','edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2322,'edu.ncsu.csc.itrust.dao.DAOFactory:getORCodesDAO()','edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',1,1),(2323,'edu.ncsu.csc.itrust.dao.DAOFactory:getPatientInstructionsDAO()','edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','(O)',0.6666666666666666,1),(2324,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:<init>()','(O)',0.4,1),(2325,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:<init>(boolean)','(O)',0.4,1),(2326,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:add(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2327,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:add(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:setValues(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OfficeVisitBean)','(O)',0.2857142857142857,1),(2328,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:add(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.10526315789473684,1),(2329,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:add(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2330,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:add(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2331,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:setValues(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getVisitDate()','(M)',0.2222222222222222,1),(2332,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:setValues(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getNotes()','(M)',0.3333333333333333,1),(2333,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:setValues(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getHcpID()','(M)',0.16666666666666666,1),(2334,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:setValues(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getPatientID()','(M)',0.2222222222222222,1),(2335,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:setValues(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getHospitalID()','(M)',0.3333333333333333,1),(2336,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:update(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2337,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:update(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:setValues(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OfficeVisitBean)','(O)',0.2857142857142857,1),(2338,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:update(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:getID()','(M)',0.2222222222222222,1),(2339,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:update(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2340,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:update(edu.ncsu.csc.itrust.beans.OfficeVisitBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2341,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2342,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:loadFullOfficeVist(java.sql.ResultSet,long)','(O)',0.3333333333333333,1),(2343,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2344,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2345,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:loadFullOfficeVist(java.sql.ResultSet,long)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:<init>(long)','(O)',0.25,1),(2346,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:loadFullOfficeVist(java.sql.ResultSet,long)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setVisitDateStr(java.lang.String)','(M)',0.2222222222222222,1),(2347,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:loadFullOfficeVist(java.sql.ResultSet,long)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setHcpID(long)','(M)',0.18181818181818182,1),(2348,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:loadFullOfficeVist(java.sql.ResultSet,long)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setNotes(java.lang.String)','(M)',0.2222222222222222,1),(2349,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:loadFullOfficeVist(java.sql.ResultSet,long)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setPatientID(long)','(M)',0.18181818181818182,1),(2350,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:loadFullOfficeVist(java.sql.ResultSet,long)','edu.ncsu.csc.itrust.beans.OfficeVisitBean:setHospitalID(java.lang.String)','(M)',0.2222222222222222,1),(2351,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:checkOfficeVisitExists(long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2352,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:checkOfficeVisitExists(long,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2353,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:checkOfficeVisitExists(long,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2354,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisits(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2355,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisits(long)','edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2356,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisits(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2357,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisits(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2358,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForLHCP(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2359,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForLHCP(long)','edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2360,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForLHCP(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2361,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForLHCP(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2362,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisitsWithNoSurvey(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2363,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisitsWithNoSurvey(long)','edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2364,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisitsWithNoSurvey(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2365,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisitsWithNoSurvey(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2366,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisitsFromHospital(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2367,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisitsFromHospital(java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2368,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisitsFromHospital(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2369,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisitsFromHospital(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2370,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(2371,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2,1),(2372,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getVisitID()','(M)',0.2,1),(2373,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:loadFullOfficeVist(java.sql.ResultSet,long)','(O)',0.25,1),(2374,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(2375,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForDiagnosis(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(2376,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:<init>()','(O)',1,1),(2377,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:getAppt(int)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2378,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:getAppt(int)','edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadList(java.sql.ResultSet)','(M)',0.4,1),(2379,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:getAppt(int)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2380,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:getApptsFor(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2381,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:getApptsFor(long)','edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadList(java.sql.ResultSet)','(M)',0.4,1),(2382,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:getApptsFor(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2383,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:scheduleAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2384,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:scheduleAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ApptBean)','(M)',0.4,1),(2385,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:scheduleAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2386,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:editAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(2387,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:editAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getApptType()','(M)',0.2,1),(2388,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:editAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getDate()','(M)',0.16666666666666666,1),(2389,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:editAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getComment()','(M)',0.2222222222222222,1),(2390,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:editAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getApptID()','(M)',0.25,1),(2391,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:editAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(2392,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:removeAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2393,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:removeAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getApptID()','(M)',0.4,1),(2394,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:removeAppt(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2395,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:<init>(boolean)','(O)',0.6666666666666666,1),(2396,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getList(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2397,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getList(long)','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.16666666666666666,1),(2398,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getList(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2399,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getList(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2400,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getImmunizationList(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2401,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getImmunizationList(long)','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.16666666666666666,1),(2402,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getImmunizationList(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2403,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getImmunizationList(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2404,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getMedProceduresList(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2405,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getMedProceduresList(long)','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.16666666666666666,1),(2406,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getMedProceduresList(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2407,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getMedProceduresList(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2408,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:add(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(2409,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:add(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getVisitID()','(M)',0.25,1),(2410,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:add(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getCPTCode()','(M)',0.15384615384615385,1),(2411,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:add(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.1,1),(2412,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:add(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(2413,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:add(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(2414,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:edit(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008298755186721992,1),(2415,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:edit(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getVisitID()','(M)',0.2222222222222222,1),(2416,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:edit(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getCPTCode()','(M)',0.14285714285714285,1),(2417,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:edit(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getOvProcedureID()','(M)',0.2,1),(2418,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:edit(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.09523809523809523,1),(2419,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:edit(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008333333333333333,1),(2420,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:edit(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008928571428571428,1),(2421,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:remove(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2422,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:remove(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2423,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:remove(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2424,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:<init>()','(O)',0.6666666666666666,1),(2425,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:getAllHospitals()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2426,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:getAllHospitals()','edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadList(java.sql.ResultSet)','(M)',0.3333333333333333,1),(2427,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:getAllHospitals()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2428,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:getAllHospitals()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2429,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:getHospital(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2430,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:getHospital(java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2857142857142857,1),(2431,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:getHospital(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2432,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:getHospital(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2433,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(2434,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.beans.HospitalBean:getHospitalID()','(M)',0.2,1),(2435,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.beans.HospitalBean:getHospitalName()','(M)',0.2,1),(2436,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(2437,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.030303030303030304,1),(2438,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(2439,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:updateHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2440,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:updateHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.beans.HospitalBean:getHospitalName()','(M)',0.2222222222222222,1),(2441,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:updateHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.beans.HospitalBean:getHospitalID()','(M)',0.2222222222222222,1),(2442,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:updateHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2443,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:updateHospital(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2444,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:assignHospital(long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2445,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:assignHospital(long,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2446,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:assignHospital(long,java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03125,1),(2447,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:assignHospital(long,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2448,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:removeHospitalAssignment(long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2449,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:removeHospitalAssignment(long,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2450,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:removeHospitalAssignment(long,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2451,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:removeAllHospitalAssignmentsFrom(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2452,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:removeAllHospitalAssignmentsFrom(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2453,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:removeAllHospitalAssignmentsFrom(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2454,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:checkLTHasHospital(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2455,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:checkLTHasHospital(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2456,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:checkLTHasHospital(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2457,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:<init>()','(O)',1,1),(2458,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFor(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2459,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFor(long)','edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(2460,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFor(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2461,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesTimeAscending(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2462,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesTimeAscending(long)','edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(2463,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesTimeAscending(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2464,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesNameAscending(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2465,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesNameAscending(long)','edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(2466,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesNameAscending(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2467,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesNameDescending(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2468,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesNameDescending(long)','edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(2469,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesNameDescending(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2470,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFrom(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2471,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFrom(long)','edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(2472,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFrom(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2473,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromTimeAscending(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2474,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromTimeAscending(long)','edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(2475,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromTimeAscending(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2476,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromNameAscending(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2477,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromNameAscending(long)','edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(2478,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromNameAscending(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2479,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromNameDescending(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2480,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromNameDescending(long)','edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(2481,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromNameDescending(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2482,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:addMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2483,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:addMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.MessageBean:getParentMessageId()','(M)',0.3333333333333333,1),(2484,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:addMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.MessageBean)','(M)',0.3333333333333333,1),(2485,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:addMessage(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2486,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:updateRead(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2487,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:updateRead(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.MessageBean:getMessageId()','(M)',0.4,1),(2488,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:updateRead(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2489,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:updateRead(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2490,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:<init>()','(O)',1,1),(2491,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getReportRequest(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2492,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getReportRequest(long)','edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2857142857142857,1),(2493,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getReportRequest(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2494,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getReportRequest(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2495,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getAllReportRequestsForRequester(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2496,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getAllReportRequestsForRequester(long)','edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadList(java.sql.ResultSet)','(M)',0.3333333333333333,1),(2497,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getAllReportRequestsForRequester(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2498,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getAllReportRequestsForRequester(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2499,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getAllReportRequestsForPatient(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2500,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getAllReportRequestsForPatient(long)','edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadList(java.sql.ResultSet)','(M)',0.3333333333333333,1),(2501,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getAllReportRequestsForPatient(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2502,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getAllReportRequestsForPatient(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2503,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:addReportRequest(long,long,java.util.Date)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2504,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:addReportRequest(long,long,java.util.Date)','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.1111111111111111,1),(2505,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:addReportRequest(long,long,java.util.Date)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2506,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:addReportRequest(long,long,java.util.Date)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2507,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:setViewed(long,java.util.Date)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2508,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:setViewed(long,java.util.Date)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2509,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:setViewed(long,java.util.Date)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2510,'edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:<init>()','(O)',1,1),(2511,'edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:getSurveyResultsForZip(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2512,'edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:getSurveyResultsForZip(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadList(java.sql.ResultSet)','(M)',0.3333333333333333,1),(2513,'edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:getSurveyResultsForZip(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2514,'edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:getSurveyResultsForZip(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2515,'edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:getSurveyResultsForHospital(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2516,'edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:getSurveyResultsForHospital(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadList(java.sql.ResultSet)','(M)',0.3333333333333333,1),(2517,'edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:getSurveyResultsForHospital(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2518,'edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:getSurveyResultsForHospital(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2519,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:<init>()','(O)',1,1),(2520,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getReportsFor(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2521,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getReportsFor(long)','edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2522,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getReportsFor(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2523,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getReportsFor(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2524,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008298755186721992,1),(2525,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean,long)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getMID()','(M)',0.18181818181818182,1),(2526,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean,long)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getDrug()','(M)',0.18181818181818182,1),(2527,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean,long)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getCode()','(M)',0.2,1),(2528,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean,long)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getDescription()','(M)',0.16666666666666666,1),(2529,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008928571428571428,1),(2530,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008333333333333333,1),(2531,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getHCPMID(int)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2532,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getHCPMID(int)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2533,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getHCPMID(int)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2534,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getReport(int)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2535,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getReport(int)','edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2536,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getReport(int)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2537,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getReport(int)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2538,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:removeReport(int)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2539,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:removeReport(int)','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.1111111111111111,1),(2540,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:removeReport(int)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2541,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:removeReport(int)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2542,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getUnremovedAdverseEventsByCode(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2543,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getUnremovedAdverseEventsByCode(java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2544,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getUnremovedAdverseEventsByCode(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2545,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getUnremovedAdverseEventsByCode(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2546,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getNameForCode(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2547,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getNameForCode(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2548,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getNameForCode(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2549,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getPerscriptions(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2550,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getPerscriptions(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2551,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getPerscriptions(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2552,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getPerscriptions(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2553,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getImmunizations(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2554,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getImmunizations(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2555,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getImmunizations(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2556,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getImmunizations(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2557,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:<init>()','(O)',1,1),(2558,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:getInteractions(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2559,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:getInteractions(java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadList(java.sql.ResultSet)','(M)',0.4,1),(2560,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:getInteractions(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2561,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:getInteractions(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2562,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.030303030303030304,1),(2563,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:getInteractions(java.lang.String)','(M)',0.2222222222222222,1),(2564,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:getSecondDrug()','(M)',0.2222222222222222,1),(2565,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(2566,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(2567,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:reportInteraction(java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(2568,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:deleteInteraction(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2569,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:deleteInteraction(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2570,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:deleteInteraction(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2571,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:<init>()','(O)',1,1),(2572,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getList(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2573,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getList(long)','edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadList(java.sql.ResultSet)','(M)',0.4,1),(2574,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getList(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2575,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getList(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2576,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:add(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2577,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:add(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','(M)',0.25,1),(2578,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:add(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.10526315789473684,1),(2579,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:add(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2580,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:add(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2581,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:edit(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(2582,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:edit(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','(M)',0.2222222222222222,1),(2583,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:edit(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getId()','(M)',0.25,1),(2584,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:edit(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.1,1),(2585,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:edit(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(2586,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:edit(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(2587,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:remove(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2588,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:remove(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2589,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:remove(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2590,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getOfficeVisitsWithInstructions(long)','edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:<init>()','(O)',0.25,1),(2591,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getOfficeVisitsWithInstructions(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2592,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getOfficeVisitsWithInstructions(long)','edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadList(java.sql.ResultSet)','(M)',0.2,1),(2593,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getOfficeVisitsWithInstructions(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2594,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getOfficeVisitsWithInstructions(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2595,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:<init>()','(O)',1,1),(2596,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:getApptTypes()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2597,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:getApptTypes()','edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadList(java.sql.ResultSet)','(M)',0.5,1),(2598,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:getApptTypes()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2599,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:addApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2600,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:addApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ApptTypeBean)','(M)',0.4,1),(2601,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:addApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2602,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2603,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.beans.ApptTypeBean:getDuration()','(M)',0.2,1),(2604,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.beans.ApptTypeBean:getName()','(M)',0.2,1),(2605,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2606,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:<init>()','(O)',0.6666666666666666,1),(2607,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:<init>()','(O)',0.6666666666666666,1),(2608,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getAllTransactions()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2609,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getAllTransactions()','edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadList(java.sql.ResultSet)','(M)',0.25,1),(2610,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getAllTransactions()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2611,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getAllTransactions()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2612,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:logTransaction(edu.ncsu.csc.itrust.enums.TransactionType,long)','edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:logTransaction(edu.ncsu.csc.itrust.enums.TransactionType,long,long,java.lang.String)','(M)',0.6666666666666666,1),(2613,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:logTransaction(edu.ncsu.csc.itrust.enums.TransactionType,long,long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2614,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:logTransaction(edu.ncsu.csc.itrust.enums.TransactionType,long,long,java.lang.String)','edu.ncsu.csc.itrust.enums.TransactionType:getCode()','(M)',0.2857142857142857,1),(2615,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:logTransaction(edu.ncsu.csc.itrust.enums.TransactionType,long,long,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2616,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:logTransaction(edu.ncsu.csc.itrust.enums.TransactionType,long,long,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2617,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getAllRecordAccesses(long,long,boolean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2618,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getAllRecordAccesses(long,long,boolean)','edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2619,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getAllRecordAccesses(long,long,boolean)','edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:addAndSortRoles(java.util.List,long,boolean)','(O)',0.2857142857142857,1),(2620,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getAllRecordAccesses(long,long,boolean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2621,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getAllRecordAccesses(long,long,boolean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2622,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getTransactionsAffecting(long,long,java.util.Date,int)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2623,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getTransactionsAffecting(long,long,java.util.Date,int)','edu.ncsu.csc.itrust.enums.TransactionType:getCode()','(M)',0.25,1),(2624,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getTransactionsAffecting(long,long,java.util.Date,int)','edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2625,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getTransactionsAffecting(long,long,java.util.Date,int)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2626,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getTransactionsAffecting(long,long,java.util.Date,int)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2627,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getRecordAccesses(long,long,java.util.Date,java.util.Date,boolean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2628,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getRecordAccesses(long,long,java.util.Date,java.util.Date,boolean)','edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(2629,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getRecordAccesses(long,long,java.util.Date,java.util.Date,boolean)','edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:addAndSortRoles(java.util.List,long,boolean)','(O)',0.2857142857142857,1),(2630,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getRecordAccesses(long,long,java.util.Date,java.util.Date,boolean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2631,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getRecordAccesses(long,long,java.util.Date,java.util.Date,boolean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2632,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getOperationalProfile()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2633,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getOperationalProfile()','edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadSingle(java.sql.ResultSet)','(M)',0.3333333333333333,1),(2634,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getOperationalProfile()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2635,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getOperationalProfile()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2636,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:addAndSortRoles(java.util.List,long,boolean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(2637,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:addAndSortRoles(java.util.List,long,boolean)','edu.ncsu.csc.itrust.beans.TransactionBean:getLoggedInMID()','(M)',0.2857142857142857,1),(2638,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:addAndSortRoles(java.util.List,long,boolean)','edu.ncsu.csc.itrust.beans.TransactionBean:setRole(java.lang.String)','(M)',0.2857142857142857,1),(2639,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:addAndSortRoles(java.util.List,long,boolean)','edu.ncsu.csc.itrust.beans.TransactionBean:getRole()','(M)',0.2857142857142857,1),(2640,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:addAndSortRoles(java.util.List,long,boolean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(2641,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:addAndSortRoles(java.util.List,long,boolean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(2642,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getPatients(long)','edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:<init>()','(O)',0.25,1),(2643,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getPatients(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2644,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getPatients(long)','edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadSingle(java.sql.ResultSet)','(M)',0.2,1),(2645,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getPatients(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2646,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getPatients(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2647,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getDiagnosedVisitNeeders(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008298755186721992,1),(2648,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getDiagnosedVisitNeeders(long)','edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:<init>()','(O)',0.2,1),(2649,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getDiagnosedVisitNeeders(long)','edu.ncsu.csc.itrust.beans.VisitFlag:<init>(java.lang.String,java.lang.String)','(O)',0.2,1),(2650,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getDiagnosedVisitNeeders(long)','edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm:addVisitFlag(edu.ncsu.csc.itrust.beans.VisitFlag)','(M)',0.2,1),(2651,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getDiagnosedVisitNeeders(long)','edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadSingle(java.sql.ResultSet)','(M)',0.16666666666666666,1),(2652,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getDiagnosedVisitNeeders(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008333333333333333,1),(2653,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getDiagnosedVisitNeeders(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008928571428571428,1),(2654,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getFluShotDelinquents(long)','edu.ncsu.csc.itrust.DateUtil:currentlyInMonthRange(int,int)','(S)',0.2,1),(2655,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getFluShotDelinquents(long)','edu.ncsu.csc.itrust.DateUtil:setSQLMonthRange(java.sql.Date,int,int,java.sql.Date,int,int)','(S)',0.2,1),(2656,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getFluShotDelinquents(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.00823045267489712,1),(2657,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getFluShotDelinquents(long)','edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:<init>()','(O)',0.16666666666666666,1),(2658,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getFluShotDelinquents(long)','edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadSingle(java.sql.ResultSet)','(M)',0.14285714285714285,1),(2659,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getFluShotDelinquents(long)','edu.ncsu.csc.itrust.beans.VisitFlag:<init>(java.lang.String,java.lang.String)','(O)',0.16666666666666666,1),(2660,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getFluShotDelinquents(long)','edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm:addVisitFlag(edu.ncsu.csc.itrust.beans.VisitFlag)','(M)',0.16666666666666666,1),(2661,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getFluShotDelinquents(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008264462809917356,1),(2662,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getFluShotDelinquents(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008849557522123894,1),(2663,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:<init>()','(O)',0.5,1),(2664,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:getList(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2665,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:getList(long)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadList(java.sql.ResultSet)','(M)',0.25,1),(2666,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:getList(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2667,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:getList(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2668,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:add(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2669,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:add(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PrescriptionBean)','(M)',0.25,1),(2670,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:add(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.10526315789473684,1),(2671,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:add(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2672,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:add(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2673,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:edit(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(2674,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:edit(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PrescriptionBean)','(M)',0.2222222222222222,1),(2675,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:edit(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getId()','(M)',0.25,1),(2676,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:edit(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.1,1),(2677,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:edit(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(2678,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:edit(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(2679,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:remove(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2680,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:remove(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2681,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:remove(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2682,'edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:<init>()','(O)',1,1),(2683,'edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:getAllergies(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2684,'edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:getAllergies(long)','edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadList(java.sql.ResultSet)','(M)',0.4,1),(2685,'edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:getAllergies(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2686,'edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:getAllergies(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2687,'edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:addAllergy(long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2688,'edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:addAllergy(long,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2689,'edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:addAllergy(long,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2690,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:<init>()','(O)',1,1),(2691,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getAllEmails()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2692,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getAllEmails()','edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2857142857142857,1),(2693,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getAllEmails()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2694,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getAllEmails()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2695,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getEmailsByPerson(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2696,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getEmailsByPerson(java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2857142857142857,1),(2697,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getEmailsByPerson(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2698,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getEmailsByPerson(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2699,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:sendEmailRecord(edu.ncsu.csc.itrust.beans.Email)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2700,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:sendEmailRecord(edu.ncsu.csc.itrust.beans.Email)','edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.Email)','(M)',0.3333333333333333,1),(2701,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:sendEmailRecord(edu.ncsu.csc.itrust.beans.Email)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2702,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:sendEmailRecord(edu.ncsu.csc.itrust.beans.Email)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2703,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getEmailWithBody(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2704,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getEmailWithBody(java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2857142857142857,1),(2705,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getEmailWithBody(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2706,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getEmailWithBody(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2707,'edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getParents(long)','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getFamilyMembers(long,java.lang.String,java.lang.String,boolean)','(O)',0.5,1),(2708,'edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getSiblings(long)','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getFamilyMembers(long,java.lang.String,java.lang.String,boolean)','(O)',0.5,1),(2709,'edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getChildren(long)','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getFamilyMembers(long,java.lang.String,java.lang.String,boolean)','(O)',0.5,1),(2710,'edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getFamilyMembers(long,java.lang.String,java.lang.String,boolean)','edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:<init>(java.lang.String)','(O)',0.3333333333333333,1),(2711,'edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getFamilyMembers(long,java.lang.String,java.lang.String,boolean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2712,'edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getFamilyMembers(long,java.lang.String,java.lang.String,boolean)','edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadList(java.sql.ResultSet)','(M)',0.3333333333333333,1),(2713,'edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getFamilyMembers(long,java.lang.String,java.lang.String,boolean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2714,'edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getFamilyMembers(long,java.lang.String,java.lang.String,boolean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2715,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:<clinit>()','edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:loadDefaultProfilePhoto()','(S)',1,1),(2716,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:store(long,java.awt.image.BufferedImage)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2717,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:store(long,java.awt.image.BufferedImage)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2718,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:store(long,java.awt.image.BufferedImage)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2719,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:get(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2720,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:get(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2721,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:get(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2722,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:removePhoto(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2723,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:removePhoto(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2724,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:removePhoto(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2725,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:<init>(boolean)','(O)',0.5,1),(2726,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getList(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2727,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getList(long)','edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadList(java.sql.ResultSet)','(M)',0.25,1),(2728,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getList(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2729,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getList(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2730,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getDiagnosisCounts(java.lang.String,java.lang.String,java.util.Date,java.util.Date)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2731,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getDiagnosisCounts(java.lang.String,java.lang.String,java.util.Date,java.util.Date)','edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:<init>(java.lang.String,long,long,java.util.Date,java.util.Date)','(O)',0.3333333333333333,1),(2732,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getDiagnosisCounts(java.lang.String,java.lang.String,java.util.Date,java.util.Date)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2733,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getDiagnosisCounts(java.lang.String,java.lang.String,java.util.Date,java.util.Date)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2734,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getWeeklyCounts(java.lang.String,java.lang.String,java.util.Date,java.util.Date)','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getDiagnosisCounts(java.lang.String,java.lang.String,java.util.Date,java.util.Date)','(M)',0.5,1),(2735,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getCountForWeekOf(java.lang.String,java.lang.String,java.util.Date)','edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getDiagnosisCounts(java.lang.String,java.lang.String,java.util.Date,java.util.Date)','(M)',0.5,1),(2736,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:findEarliestIncident(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2737,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:findEarliestIncident(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2738,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:findEarliestIncident(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2739,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:add(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(2740,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:add(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getVisitID()','(M)',0.2,1),(2741,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:add(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()','(M)',0.10526315789473684,1),(2742,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:add(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.1,1),(2743,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:add(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(2744,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:add(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(2745,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:edit(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008298755186721992,1),(2746,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:edit(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getVisitID()','(M)',0.18181818181818182,1),(2747,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:edit(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()','(M)',0.1,1),(2748,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:edit(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getOvDiagnosisID()','(M)',0.2222222222222222,1),(2749,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:edit(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.09523809523809523,1),(2750,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:edit(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008333333333333333,1),(2751,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:edit(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008928571428571428,1),(2752,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:remove(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2753,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:remove(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2754,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:remove(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2755,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:<init>()','(O)',1,1),(2756,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:getAllORCodes()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2757,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:getAllORCodes()','edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadList(java.sql.ResultSet)','(M)',0.4,1),(2758,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:getAllORCodes()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2759,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:getAllORCodes()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2760,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:getORCode(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2761,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:getORCode(java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2857142857142857,1),(2762,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:getORCode(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2763,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:getORCode(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2764,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(2765,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.beans.OverrideReasonBean:getORCode()','(M)',0.2,1),(2766,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.beans.OverrideReasonBean:getDescription()','(M)',0.2,1),(2767,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(2768,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.030303030303030304,1),(2769,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(2770,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2771,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.beans.OverrideReasonBean:getDescription()','(M)',0.2222222222222222,1),(2772,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.beans.OverrideReasonBean:getORCode()','(M)',0.2222222222222222,1),(2773,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2774,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2775,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:<init>()','(O)',1,1),(2776,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatient(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2777,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatient(long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2778,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatient(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2779,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatient(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2780,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatientOV(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2781,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatientOV(long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2782,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatientOV(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2783,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatientOV(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2784,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatientForNextMonth(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2785,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatientForNextMonth(long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2786,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatientForNextMonth(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2787,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatientForNextMonth(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2788,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedure(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2789,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedure(long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2857142857142857,1),(2790,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedure(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2791,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedure(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2792,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresDate(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2793,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresDate(long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2794,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresDate(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2795,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresDate(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2796,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresForDocOV(long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2797,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresForDocOV(long,long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2798,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresForDocOV(long,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2799,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresForDocOV(long,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2800,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresForDocOV(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2801,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresForDocOV(long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2802,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresForDocOV(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2803,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresForDocOV(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2804,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProcedures()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2805,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProcedures()','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2806,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProcedures()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2807,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProcedures()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2808,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getHCPLabProcedures(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2809,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getHCPLabProcedures(long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2810,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getHCPLabProcedures(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2811,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getHCPLabProcedures(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2812,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedures(long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2813,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedures(long,long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2814,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedures(long,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2815,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedures(long,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2816,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getHCPPendingCount(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2817,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getHCPPendingCount(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2818,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getHCPPendingCount(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2819,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForLHCPForNextMonth(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2820,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForLHCPForNextMonth(long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2821,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForLHCPForNextMonth(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2822,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForLHCPForNextMonth(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2823,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getPid()','(M)',0.09523809523809523,1),(2824,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008,1),(2825,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getLoinc()','(M)',0.10526315789473684,1),(2826,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getStatus()','(M)',0.09090909090909091,1),(2827,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getCommentary()','(M)',0.10526315789473684,1),(2828,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getResults()','(M)',0.10526315789473684,1),(2829,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getOvID()','(M)',0.1111111111111111,1),(2830,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getRights()','(M)',0.1,1),(2831,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getLTID()','(M)',0.1111111111111111,1),(2832,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getPriorityCode()','(M)',0.1111111111111111,1),(2833,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getNumericalResult()','(M)',0.10526315789473684,1),(2834,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getLowerBound()','(M)',0.10526315789473684,1),(2835,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getUpperBound()','(M)',0.10526315789473684,1),(2836,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.06666666666666667,1),(2837,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008032128514056224,1),(2838,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008583690987124463,1),(2839,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getPid()','(M)',0.1111111111111111,1),(2840,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008097165991902834,1),(2841,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getStatus()','(M)',0.10526315789473684,1),(2842,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getCommentary()','(M)',0.125,1),(2843,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getResults()','(M)',0.125,1),(2844,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getLTID()','(M)',0.13333333333333333,1),(2845,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getPriorityCode()','(M)',0.13333333333333333,1),(2846,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getNumericalResult()','(M)',0.125,1),(2847,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getLowerBound()','(M)',0.125,1),(2848,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getUpperBound()','(M)',0.125,1),(2849,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getProcedureID()','(M)',0.1111111111111111,1),(2850,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008695652173913044,1),(2851,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008130081300813009,1),(2852,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:markViewed(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getPid()','(M)',0.18181818181818182,1),(2853,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:markViewed(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(2854,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:markViewed(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:isViewedByPatient()','(M)',0.2857142857142857,1),(2855,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:markViewed(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getProcedureID()','(M)',0.18181818181818182,1),(2856,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:markViewed(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(2857,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:markViewed(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(2858,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getPatientUnviewedCount(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2859,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getPatientUnviewedCount(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2860,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getPatientUnviewedCount(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2861,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresLOINC(long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2862,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresLOINC(long,java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2863,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresLOINC(long,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2864,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresLOINC(long,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2865,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateRights(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getPid()','(M)',0.18181818181818182,1),(2866,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateRights(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(2867,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateRights(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getRights()','(M)',0.2,1),(2868,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateRights(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getProcedureID()','(M)',0.18181818181818182,1),(2869,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateRights(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(2870,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateRights(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(2871,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:removeLabProcedure(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2872,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:removeLabProcedure(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2873,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:removeLabProcedure(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2874,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresInTransitForLabTech(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2875,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresInTransitForLabTech(long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2876,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresInTransitForLabTech(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2877,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresInTransitForLabTech(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2878,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresReceivedForLabTech(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2879,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresReceivedForLabTech(long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2880,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresReceivedForLabTech(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2881,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresReceivedForLabTech(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2882,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresTestingForLabTech(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2883,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresTestingForLabTech(long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2884,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresTestingForLabTech(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2885,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresTestingForLabTech(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2886,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabTechQueueSize(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2887,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabTechQueueSize(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2888,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabTechQueueSize(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2889,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabTechQueueSizeByPriority(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2890,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabTechQueueSizeByPriority(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2891,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabTechQueueSizeByPriority(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2892,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:submitTestResults(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2893,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:submitTestResults(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2894,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:submitTestResults(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2895,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:submitReceivedLP(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2896,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:submitReceivedLP(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2897,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:submitReceivedLP(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2898,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:setLPToTesting(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2899,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:setLPToTesting(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2900,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:setLPToTesting(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2901,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresLOINC(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2902,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresLOINC(long)','edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.10526315789473684,1),(2903,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresLOINC(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2904,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresLOINC(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2905,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:<init>()','(O)',1,1),(2906,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:addLOINC(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.00816326530612245,1),(2907,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:addLOINC(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getLabProcedureCode()','(M)',0.125,1),(2908,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:addLOINC(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getComponent()','(M)',0.14285714285714285,1),(2909,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:addLOINC(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getKindOfProperty()','(M)',0.14285714285714285,1),(2910,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:addLOINC(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getTimeAspect()','(M)',0.14285714285714285,1),(2911,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:addLOINC(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getSystem()','(M)',0.14285714285714285,1),(2912,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:addLOINC(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getScaleType()','(M)',0.14285714285714285,1),(2913,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:addLOINC(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getMethodType()','(M)',0.14285714285714285,1),(2914,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:addLOINC(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.028169014084507043,1),(2915,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:addLOINC(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008771929824561403,1),(2916,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:addLOINC(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00819672131147541,1),(2917,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:getProcedures(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2918,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:getProcedures(java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadList(java.sql.ResultSet)','(M)',0.3333333333333333,1),(2919,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:getProcedures(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2920,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:getProcedures(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2921,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:update(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.00819672131147541,1),(2922,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:update(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getComponent()','(M)',0.15384615384615385,1),(2923,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:update(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getKindOfProperty()','(M)',0.15384615384615385,1),(2924,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:update(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getTimeAspect()','(M)',0.15384615384615385,1),(2925,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:update(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getSystem()','(M)',0.15384615384615385,1),(2926,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:update(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getScaleType()','(M)',0.15384615384615385,1),(2927,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:update(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getMethodType()','(M)',0.15384615384615385,1),(2928,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:update(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getLabProcedureCode()','(M)',0.13333333333333333,1),(2929,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:update(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00823045267489712,1),(2930,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:update(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00881057268722467,1),(2931,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:getAllLOINC()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2932,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:getAllLOINC()','edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadList(java.sql.ResultSet)','(M)',0.3333333333333333,1),(2933,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:getAllLOINC()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2934,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:getAllLOINC()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2935,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:addUser(java.lang.Long,edu.ncsu.csc.itrust.enums.Role,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2936,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:addUser(java.lang.Long,edu.ncsu.csc.itrust.enums.Role,java.lang.String)','edu.ncsu.csc.itrust.enums.Role:toString()','(M)',0.2857142857142857,1),(2937,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:addUser(java.lang.Long,edu.ncsu.csc.itrust.enums.Role,java.lang.String)','edu.ncsu.csc.itrust.RandomPassword:getRandomPassword()','(S)',0.16666666666666666,1),(2938,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:addUser(java.lang.Long,edu.ncsu.csc.itrust.enums.Role,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2939,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:addUser(java.lang.Long,edu.ncsu.csc.itrust.enums.Role,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2940,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:setSecurityQuestionAnswer(java.lang.String,java.lang.String,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2941,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:setSecurityQuestionAnswer(java.lang.String,java.lang.String,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2942,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:setSecurityQuestionAnswer(java.lang.String,java.lang.String,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2943,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserRole(long)','(M)',0.14285714285714285,1),(2944,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:$SWITCH_TABLE$edu$ncsu$csc$itrust$enums$Role()','(S)',0.2222222222222222,1),(2945,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','edu.ncsu.csc.itrust.enums.Role:ordinal()','(M)',0.2,1),(2946,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()','(M)',0.0425531914893617,1),(2947,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','(M)',0.07407407407407407,1),(2948,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.043478260869565216,1),(2949,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','(M)',0.09523809523809523,1),(2950,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.029411764705882353,1),(2951,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserRole(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2952,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserRole(long)','edu.ncsu.csc.itrust.enums.Role:parse(java.lang.String)','(S)',0.2222222222222222,1),(2953,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserRole(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2954,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserRole(long)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03076923076923077,1),(2955,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserRole(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2956,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:resetPassword(long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2957,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:resetPassword(long,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2958,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:resetPassword(long,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2959,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityQuestion(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2960,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityQuestion(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2961,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityQuestion(long)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03125,1),(2962,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityQuestion(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2963,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityAnswer(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2964,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityAnswer(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2965,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityAnswer(long)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03125,1),(2966,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityAnswer(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2967,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:recordLoginFailure(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2968,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:recordLoginFailure(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:insertLoginFailureRow(java.lang.String,int,java.sql.Connection)','(O)',0.3333333333333333,1),(2969,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:recordLoginFailure(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2970,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:recordLoginFailure(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2971,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:recordResetPasswordFailure(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2972,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:recordResetPasswordFailure(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:insertResetPasswordRow(java.lang.String,int,java.sql.Connection)','(O)',0.3333333333333333,1),(2973,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:recordResetPasswordFailure(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2974,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:recordResetPasswordFailure(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2975,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getResetPasswordFailures(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2976,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getResetPasswordFailures(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:updateResetFailuresToZero(java.lang.String,java.sql.Connection)','(O)',0.3333333333333333,1),(2977,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getResetPasswordFailures(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2978,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getResetPasswordFailures(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:insertResetPasswordRow(java.lang.String,int,java.sql.Connection)','(O)',0.2857142857142857,1),(2979,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getResetPasswordFailures(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2980,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getLoginFailures(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(2981,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getLoginFailures(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:updateFailuresToZero(java.lang.String,java.sql.Connection)','(O)',0.3333333333333333,1),(2982,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getLoginFailures(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(2983,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getLoginFailures(java.lang.String)','edu.ncsu.csc.itrust.dao.mysql.AuthDAO:insertLoginFailureRow(java.lang.String,int,java.sql.Connection)','(O)',0.2857142857142857,1),(2984,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getLoginFailures(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(2985,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:resetLoginFailuresToZero(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2986,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:resetLoginFailuresToZero(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2987,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:resetLoginFailuresToZero(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2988,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:checkUserExists(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(2989,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:checkUserExists(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(2990,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:checkUserExists(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(2991,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:$SWITCH_TABLE$edu$ncsu$csc$itrust$enums$Role()','edu.ncsu.csc.itrust.enums.Role:values()','(S)',0.5,1),(2992,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:$SWITCH_TABLE$edu$ncsu$csc$itrust$enums$Role()','edu.ncsu.csc.itrust.enums.Role:ordinal()','(M)',0.5,1),(2993,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:<init>()','(O)',0.6666666666666666,1),(2994,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getAllNDCodes()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2995,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getAllNDCodes()','edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadList(java.sql.ResultSet)','(M)',0.4,1),(2996,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getAllNDCodes()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(2997,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getAllNDCodes()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(2998,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getNDCode(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(2999,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getNDCode(java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.25,1),(3000,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getNDCode(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3001,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getNDCode(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3002,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(3003,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()','(M)',0.10526315789473684,1),(3004,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getDescription()','(M)',0.125,1),(3005,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(3006,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.030303030303030304,1),(3007,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(3008,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(3009,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getDescription()','(M)',0.13333333333333333,1),(3010,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()','(M)',0.1111111111111111,1),(3011,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(3012,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(3013,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3014,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()','(M)',0.11764705882352941,1),(3015,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3016,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3017,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$PatientReferralListQuery:<init>(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO,edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:<init>(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO,edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.5,1),(3018,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReceiverReferralListQuery:<init>(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO,edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:<init>(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO,edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.5,1),(3019,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:doquery(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:getUserField()','(M)',0.2222222222222222,1),(3020,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:doquery(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:buildSort(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','(M)',0.2222222222222222,1),(3021,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:doquery(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008264462809917356,1),(3022,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:doquery(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:getUserId()','(M)',0.2222222222222222,1),(3023,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:doquery(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:access$0(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO)','(S)',0.2222222222222222,1),(3024,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:doquery(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(3025,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:doquery(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008298755186721992,1),(3026,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:doquery(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008888888888888889,1),(3027,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:query(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:doquery(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)','(M)',1,1),(3028,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$SenderReferralListQuery:<init>(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO,edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:<init>(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO,edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.5,1),(3029,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:<init>()','(O)',0.6666666666666666,1),(3030,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:<init>()','(O)',0.6666666666666666,1),(3031,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsFromOV(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3032,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsFromOV(long)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(3033,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsFromOV(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3034,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsFromOV(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3035,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsSentFrom(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3036,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsSentFrom(long)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(3037,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsSentFrom(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3038,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsSentFrom(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3039,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferral(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3040,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferral(long)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2857142857142857,1),(3041,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferral(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3042,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferral(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3043,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:setReferralMessage(long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3044,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:setReferralMessage(long,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3045,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:setReferralMessage(long,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3046,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:isReferralMessage(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3047,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:isReferralMessage(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3048,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:isReferralMessage(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3049,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsSentTo(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3050,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsSentTo(long)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(3051,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsSentTo(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3052,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsSentTo(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3053,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForReceivingHCP(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3054,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForReceivingHCP(long)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(3055,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForReceivingHCP(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3056,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForReceivingHCP(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3057,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForPatient(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3058,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForPatient(long)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(3059,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForPatient(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3060,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForPatient(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3061,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForReceivingHCPUnread(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3062,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForReceivingHCPUnread(long)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(3063,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForReceivingHCPUnread(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3064,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForReceivingHCPUnread(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3065,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForPatientUnread(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3066,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForPatientUnread(long)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(3067,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForPatientUnread(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3068,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForPatientUnread(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3069,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:editReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(3070,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:editReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReferralBean)','(M)',0.25,1),(3071,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:editReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getId()','(M)',0.2857142857142857,1),(3072,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:editReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(3073,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:editReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(3074,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:addReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(3075,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:addReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReferralBean)','(M)',0.25,1),(3076,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:addReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.10526315789473684,1),(3077,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:addReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(3078,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:addReferral(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(3079,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:removeReferral(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3080,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:removeReferral(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3081,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:removeReferral(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3082,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getSenderQuery(long)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$SenderReferralListQuery:<init>(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO,edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',1,1),(3083,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReceiverQuery(long)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReceiverReferralListQuery:<init>(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO,edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',1,1),(3084,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getPatientQuery(long)','edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$PatientReferralListQuery:<init>(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO,edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',1,1),(3085,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:<init>()','(O)',1,1),(3086,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:addCompletedSurvey(edu.ncsu.csc.itrust.beans.SurveyBean,java.util.Date)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008264462809917356,1),(3087,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:addCompletedSurvey(edu.ncsu.csc.itrust.beans.SurveyBean,java.util.Date)','edu.ncsu.csc.itrust.beans.SurveyBean:getVisitID()','(M)',0.2222222222222222,1),(3088,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:addCompletedSurvey(edu.ncsu.csc.itrust.beans.SurveyBean,java.util.Date)','edu.ncsu.csc.itrust.beans.SurveyBean:getWaitingRoomMinutes()','(M)',0.2222222222222222,1),(3089,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:addCompletedSurvey(edu.ncsu.csc.itrust.beans.SurveyBean,java.util.Date)','edu.ncsu.csc.itrust.beans.SurveyBean:getExamRoomMinutes()','(M)',0.2222222222222222,1),(3090,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:addCompletedSurvey(edu.ncsu.csc.itrust.beans.SurveyBean,java.util.Date)','edu.ncsu.csc.itrust.beans.SurveyBean:getVisitSatisfaction()','(M)',0.2,1),(3091,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:addCompletedSurvey(edu.ncsu.csc.itrust.beans.SurveyBean,java.util.Date)','edu.ncsu.csc.itrust.beans.SurveyBean:getTreatmentSatisfaction()','(M)',0.2,1),(3092,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:addCompletedSurvey(edu.ncsu.csc.itrust.beans.SurveyBean,java.util.Date)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008888888888888889,1),(3093,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:addCompletedSurvey(edu.ncsu.csc.itrust.beans.SurveyBean,java.util.Date)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008298755186721992,1),(3094,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:getSurveyData(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3095,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:getSurveyData(long)','edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadSingle(java.sql.ResultSet)','(M)',0.3333333333333333,1),(3096,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:getSurveyData(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3097,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:getSurveyData(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3098,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:isSurveyCompleted(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3099,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:isSurveyCompleted(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3100,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:isSurveyCompleted(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3101,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:<init>()','(O)',1,1),(3102,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byDate(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3103,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byDate(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadList(java.sql.ResultSet)','(M)',0.3333333333333333,1),(3104,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byDate(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3105,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byDate(long,java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3106,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byOfficeVisitAndPatient(java.util.List,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(3107,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byOfficeVisitAndPatient(java.util.List,long)','edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:buildPreps(int)','(O)',0.2857142857142857,1),(3108,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byOfficeVisitAndPatient(java.util.List,long)','edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:prepareOVIDs(java.sql.PreparedStatement,java.util.List)','(O)',0.2857142857142857,1),(3109,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byOfficeVisitAndPatient(java.util.List,long)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadList(java.sql.ResultSet)','(M)',0.25,1),(3110,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byOfficeVisitAndPatient(java.util.List,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(3111,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byOfficeVisitAndPatient(java.util.List,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(3112,'edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:<init>()','(O)',1,1),(3113,'edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3114,'edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadList(java.sql.ResultSet)','(M)',0.4,1),(3115,'edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3116,'edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3117,'edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:add(edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3118,'edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:add(edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)','(M)',0.3333333333333333,1),(3119,'edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:add(edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3120,'edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:add(edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3121,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:<init>()','(O)',1,1),(3122,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getAllCPTCodes()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3123,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getAllCPTCodes()','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.16666666666666666,1),(3124,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getAllCPTCodes()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3125,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getAllCPTCodes()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3126,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getImmunizationCPTCodes()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3127,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getImmunizationCPTCodes()','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.16666666666666666,1),(3128,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getImmunizationCPTCodes()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3129,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getImmunizationCPTCodes()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3130,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getProcedureCPTCodes()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3131,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getProcedureCPTCodes()','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.16666666666666666,1),(3132,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getProcedureCPTCodes()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3133,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getProcedureCPTCodes()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3134,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getCPTCode(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3135,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getCPTCode(java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2857142857142857,1),(3136,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getCPTCode(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3137,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getCPTCode(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3138,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008298755186721992,1),(3139,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getCPTCode()','(M)',0.14285714285714285,1),(3140,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getDescription()','(M)',0.16666666666666666,1),(3141,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getAttribute()','(M)',0.2222222222222222,1),(3142,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008333333333333333,1),(3143,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.029850746268656716,1),(3144,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008928571428571428,1),(3145,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(3146,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getDescription()','(M)',0.18181818181818182,1),(3147,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getAttribute()','(M)',0.25,1),(3148,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getCPTCode()','(M)',0.15384615384615385,1),(3149,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(3150,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(3151,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:<init>()','(O)',1,1),(3152,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getAllICDCodes()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3153,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getAllICDCodes()','edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadList(java.sql.ResultSet)','(M)',0.25,1),(3154,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getAllICDCodes()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3155,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getAllICDCodes()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3156,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getICDCode(java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3157,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getICDCode(java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadSingle(java.sql.ResultSet)','(M)',0.2857142857142857,1),(3158,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getICDCode(java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3159,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getICDCode(java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3160,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008298755186721992,1),(3161,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()','(M)',0.1,1),(3162,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getDescription()','(M)',0.14285714285714285,1),(3163,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getClassification()','(M)',0.2,1),(3164,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008333333333333333,1),(3165,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.029850746268656716,1),(3166,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008928571428571428,1),(3167,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(3168,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getDescription()','(M)',0.15384615384615385,1),(3169,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getClassification()','(M)',0.2222222222222222,1),(3170,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()','(M)',0.10526315789473684,1),(3171,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(3172,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(3173,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:<init>()','(O)',0.4,1),(3174,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:<init>()','(O)',0.5,1),(3175,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3176,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3177,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03125,1),(3178,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3179,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getNextID(edu.ncsu.csc.itrust.enums.Role)','edu.ncsu.csc.itrust.enums.Role:getMidFirstDigit()','(M)',0.4,1),(3180,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getNextID(edu.ncsu.csc.itrust.enums.Role)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3181,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getNextID(edu.ncsu.csc.itrust.enums.Role)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3182,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getNextID(edu.ncsu.csc.itrust.enums.Role)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3183,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:addEmptyPersonnel(edu.ncsu.csc.itrust.enums.Role)','edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getNextID(edu.ncsu.csc.itrust.enums.Role)','(M)',0.3333333333333333,1),(3184,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:addEmptyPersonnel(edu.ncsu.csc.itrust.enums.Role)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(3185,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:addEmptyPersonnel(edu.ncsu.csc.itrust.enums.Role)','edu.ncsu.csc.itrust.enums.Role:name()','(M)',0.3333333333333333,1),(3186,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:addEmptyPersonnel(edu.ncsu.csc.itrust.enums.Role)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(3187,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:addEmptyPersonnel(edu.ncsu.csc.itrust.enums.Role)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(3188,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3189,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)','(M)',0.2857142857142857,1),(3190,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3191,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3192,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:editPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(3193,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:editPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.2857142857142857,1),(3194,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:editPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getMID()','(M)',0.14285714285714285,1),(3195,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:editPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(3196,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:editPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(3197,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:checkPersonnelExists(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3198,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:checkPersonnelExists(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3199,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:checkPersonnelExists(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3200,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getHospitals(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3201,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getHospitals(long)','edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadList(java.sql.ResultSet)','(M)',0.3333333333333333,1),(3202,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getHospitals(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3203,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getHospitals(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3204,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getAllPersonnel()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3205,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getAllPersonnel()','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(3206,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getAllPersonnel()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3207,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getAllPersonnel()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3208,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getUAPsForHCP(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3209,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getUAPsForHCP(long)','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(3210,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getUAPsForHCP(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3211,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getUAPsForHCP(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3212,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPrescribingDoctor(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(3213,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPrescribingDoctor(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.PrescriptionBean:getVisitID()','(M)',0.2857142857142857,1),(3214,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPrescribingDoctor(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadList(java.sql.ResultSet)','(M)',0.16666666666666666,1),(3215,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPrescribingDoctor(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(3216,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPrescribingDoctor(edu.ncsu.csc.itrust.beans.PrescriptionBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(3217,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:searchForPersonnelWithName(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3218,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:searchForPersonnelWithName(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(3219,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:searchForPersonnelWithName(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3220,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:searchForPersonnelWithName(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3221,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getLabTechs()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3222,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getLabTechs()','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(3223,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getLabTechs()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3224,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getLabTechs()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3225,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:<init>()','(O)',0.5,1),(3226,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:<init>()','(O)',0.5,1),(3227,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:<init>()','(O)',0.3333333333333333,1),(3228,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getTelemedicineBean(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3229,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getTelemedicineBean(long)','edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadList(java.sql.ResultSet)','(M)',0.4,1),(3230,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getTelemedicineBean(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3231,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getTelemedicineBean(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3232,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientsData(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(3233,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientsData(long)','edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2,1),(3234,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientsData(long)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getPatientMID()','(M)',0.25,1),(3235,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientsData(long)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:<init>(long)','(O)',0.2857142857142857,1),(3236,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientsData(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(3237,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientsData(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(3238,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientDataByDate(long,java.util.Date,java.util.Date)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3239,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientDataByDate(long,java.util.Date,java.util.Date)','edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadList(java.sql.ResultSet)','(M)',0.25,1),(3240,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientDataByDate(long,java.util.Date,java.util.Date)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3241,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientDataByDate(long,java.util.Date,java.util.Date)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3242,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientDataByType(long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3243,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientDataByType(long,java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadList(java.sql.ResultSet)','(M)',0.25,1),(3244,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientDataByType(long,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3245,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientDataByType(long,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3246,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getHeight()','(M)',0.14285714285714285,1),(3247,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getWeight()','(M)',0.14285714285714285,1),(3248,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getPedometerReading()','(M)',0.14285714285714285,1),(3249,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getSystolicBloodPressure()','(M)',0.14285714285714285,1),(3250,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getDiastolicBloodPressure()','(M)',0.14285714285714285,1),(3251,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getGlucoseLevel()','(M)',0.14285714285714285,1),(3252,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)','edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getNumberOfDailyEntries(long,java.lang.String)','(O)',0.15384615384615385,1),(3253,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.027777777777777776,1),(3254,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)','edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:validatePR(long,long)','(M)',0.15384615384615385,1),(3255,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008130081300813009,1),(3256,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008733624454148471,1),(3257,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00816326530612245,1),(3258,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getNumberOfDailyEntries(long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3259,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getNumberOfDailyEntries(long,java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadList(java.sql.ResultSet)','(M)',0.25,1),(3260,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getNumberOfDailyEntries(long,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3261,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getNumberOfDailyEntries(long,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3262,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:validatePR(long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3263,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:validatePR(long,long)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03125,1),(3264,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:validatePR(long,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3265,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:validatePR(long,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3266,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getMonitoringHCPs(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3267,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getMonitoringHCPs(long)','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(3268,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getMonitoringHCPs(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3269,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getMonitoringHCPs(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3270,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:addPatientToList(long,long,edu.ncsu.csc.itrust.beans.TelemedicineBean)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.00823045267489712,1),(3271,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:addPatientToList(long,long,edu.ncsu.csc.itrust.beans.TelemedicineBean)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008264462809917356,1),(3272,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:addPatientToList(long,long,edu.ncsu.csc.itrust.beans.TelemedicineBean)','edu.ncsu.csc.itrust.beans.TelemedicineBean:isSystolicBloodPressureAllowed()','(M)',0.2,1),(3273,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:addPatientToList(long,long,edu.ncsu.csc.itrust.beans.TelemedicineBean)','edu.ncsu.csc.itrust.beans.TelemedicineBean:isDiastolicBloodPressureAllowed()','(M)',0.2,1),(3274,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:addPatientToList(long,long,edu.ncsu.csc.itrust.beans.TelemedicineBean)','edu.ncsu.csc.itrust.beans.TelemedicineBean:isGlucoseLevelAllowed()','(M)',0.2,1),(3275,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:addPatientToList(long,long,edu.ncsu.csc.itrust.beans.TelemedicineBean)','edu.ncsu.csc.itrust.beans.TelemedicineBean:isHeightAllowed()','(M)',0.2,1),(3276,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:addPatientToList(long,long,edu.ncsu.csc.itrust.beans.TelemedicineBean)','edu.ncsu.csc.itrust.beans.TelemedicineBean:isWeightAllowed()','(M)',0.2,1),(3277,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:addPatientToList(long,long,edu.ncsu.csc.itrust.beans.TelemedicineBean)','edu.ncsu.csc.itrust.beans.TelemedicineBean:isPedometerReadingAllowed()','(M)',0.2,1),(3278,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:addPatientToList(long,long,edu.ncsu.csc.itrust.beans.TelemedicineBean)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008849557522123894,1),(3279,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:removePatientFromList(long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3280,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:removePatientFromList(long,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3281,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:removePatientFromList(long,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3282,'edu.ncsu.csc.itrust.dao.mysql.AccessDAO:getSessionTimeoutMins()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3283,'edu.ncsu.csc.itrust.dao.mysql.AccessDAO:getSessionTimeoutMins()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3284,'edu.ncsu.csc.itrust.dao.mysql.AccessDAO:getSessionTimeoutMins()','edu.ncsu.csc.itrust.dao.mysql.AccessDAO:insertDefaultTimeout(java.sql.Connection,int)','(O)',0.3333333333333333,1),(3285,'edu.ncsu.csc.itrust.dao.mysql.AccessDAO:getSessionTimeoutMins()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3286,'edu.ncsu.csc.itrust.dao.mysql.AccessDAO:setSessionTimeoutMins(int)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3287,'edu.ncsu.csc.itrust.dao.mysql.AccessDAO:setSessionTimeoutMins(int)','edu.ncsu.csc.itrust.dao.mysql.AccessDAO:insertDefaultTimeout(java.sql.Connection,int)','(O)',0.3333333333333333,1),(3288,'edu.ncsu.csc.itrust.dao.mysql.AccessDAO:setSessionTimeoutMins(int)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3289,'edu.ncsu.csc.itrust.dao.mysql.AccessDAO:setSessionTimeoutMins(int)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3290,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.PatientLoader:<init>()','(O)',0.3333333333333333,1),(3291,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:<init>()','(O)',0.25,1),(3292,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:<init>(boolean)','(O)',0.25,1),(3293,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:<init>()','(O)',0.25,1),(3294,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:<init>(boolean)','(O)',0.2857142857142857,1),(3295,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3296,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3297,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03125,1),(3298,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3299,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRole(long,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3300,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRole(long,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3301,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRole(long,java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03125,1),(3302,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRole(long,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3303,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addEmptyPatient()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3304,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addEmptyPatient()','edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)','(S)',0.1111111111111111,1),(3305,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addEmptyPatient()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3306,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addEmptyPatient()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3307,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3308,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)','(M)',0.2857142857142857,1),(3309,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3310,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3311,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:editPatient(edu.ncsu.csc.itrust.beans.PatientBean,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008333333333333333,1),(3312,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:editPatient(edu.ncsu.csc.itrust.beans.PatientBean,long)','edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)','(M)',0.25,1),(3313,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:editPatient(edu.ncsu.csc.itrust.beans.PatientBean,long)','edu.ncsu.csc.itrust.beans.PatientBean:getMID()','(M)',0.13333333333333333,1),(3314,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:editPatient(edu.ncsu.csc.itrust.beans.PatientBean,long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addHistory(long,long)','(M)',0.2857142857142857,1),(3315,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:editPatient(edu.ncsu.csc.itrust.beans.PatientBean,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.008968609865470852,1),(3316,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:editPatient(edu.ncsu.csc.itrust.beans.PatientBean,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008368200836820083,1),(3317,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addHistory(long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3318,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addHistory(long,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3319,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addHistory(long,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3320,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:hasHistory(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3321,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:hasHistory(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3322,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:hasHistory(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3323,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatientHistory(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3324,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatientHistory(long)','edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)','(M)',0.4,1),(3325,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatientHistory(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3326,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatientHistory(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3327,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:checkPatientExists(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3328,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:checkPatientExists(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3329,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:checkPatientExists(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3330,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDeclaredHCPs(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3331,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDeclaredHCPs(long)','edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadList(java.sql.ResultSet)','(M)',0.18181818181818182,1),(3332,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDeclaredHCPs(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3333,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDeclaredHCPs(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3334,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:declareHCP(long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3335,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:declareHCP(long,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3336,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:declareHCP(long,long)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03125,1),(3337,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:declareHCP(long,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3338,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:undeclareHCP(long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3339,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:undeclareHCP(long,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3340,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:undeclareHCP(long,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3341,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:checkDeclaredHCP(long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3342,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:checkDeclaredHCP(long,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3343,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:checkDeclaredHCP(long,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3344,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresented(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3345,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresented(long)','edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(3346,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresented(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3347,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresented(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3348,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresenting(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3349,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresenting(long)','edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(3350,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresenting(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3351,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresenting(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3352,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:represents(long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3353,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:represents(long,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3354,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:represents(long,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3355,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addRepresentative(long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3356,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addRepresentative(long,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3357,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addRepresentative(long,long)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03125,1),(3358,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addRepresentative(long,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3359,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:removeRepresentative(long,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3360,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:removeRepresentative(long,long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3361,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:removeRepresentative(long,long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3362,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3363,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)','edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadList(java.sql.ResultSet)','(M)',0.25,1),(3364,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3365,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3366,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getProcedures(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3367,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getProcedures(long)','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.16666666666666666,1),(3368,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getProcedures(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3369,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getProcedures(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3370,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getImmunizationProcedures(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3371,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getImmunizationProcedures(long)','edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadList(java.sql.ResultSet)','(M)',0.16666666666666666,1),(3372,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getImmunizationProcedures(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3373,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getImmunizationProcedures(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3374,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPrescriptions(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3375,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPrescriptions(long)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadList(java.sql.ResultSet)','(M)',0.25,1),(3376,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPrescriptions(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3377,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPrescriptions(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3378,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getCurrentPrescriptions(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(3379,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getCurrentPrescriptions(long)','edu.ncsu.csc.itrust.DateUtil:getSQLdateXDaysAgoFromNow(int)','(S)',0.2857142857142857,1),(3380,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getCurrentPrescriptions(long)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(3381,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getCurrentPrescriptions(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(3382,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getCurrentPrescriptions(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(3383,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getExpiredPrescriptions(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(3384,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getExpiredPrescriptions(long)','edu.ncsu.csc.itrust.DateUtil:getSQLdateXDaysAgoFromNow(int)','(S)',0.2857142857142857,1),(3385,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getExpiredPrescriptions(long)','edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(3386,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getExpiredPrescriptions(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(3387,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getExpiredPrescriptions(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(3388,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getAllPatients()','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3389,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getAllPatients()','edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(3390,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getAllPatients()','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3391,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getAllPatients()','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3392,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRenewalNeedsPatients(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3393,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRenewalNeedsPatients(long)','edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(3394,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRenewalNeedsPatients(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3395,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRenewalNeedsPatients(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3396,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:searchForPatientsWithName(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008403361344537815,1),(3397,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:searchForPatientsWithName(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadList(java.sql.ResultSet)','(M)',0.2222222222222222,1),(3398,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:searchForPatientsWithName(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008438818565400843,1),(3399,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:searchForPatientsWithName(java.lang.String,java.lang.String)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00904977375565611,1),(3400,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hasFamilyHistory(long,double,double)','edu.ncsu.csc.itrust.dao.mysql.RiskDAO:getFamilyMembers(long)','(O)',0.5,1),(3401,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hasFamilyHistory(long,double,double)','edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()','(M)',0.09523809523809523,1),(3402,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hasFamilyHistory(long,double,double)','edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hadPriorDiagnoses(long,double,double)','(M)',0.4,1),(3403,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:getFamilyMembers(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getFamilyDAO()','(M)',0.3333333333333333,1),(3404,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:getFamilyMembers(long)','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getParents(long)','(M)',0.2857142857142857,1),(3405,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:getFamilyMembers(long)','edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getSiblings(long)','(M)',0.2857142857142857,1),(3406,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hadChildhoodInfection(long,double[])','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008368200836820083,1),(3407,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hadChildhoodInfection(long,double[])','edu.ncsu.csc.itrust.dao.mysql.RiskDAO:createPrepared(int)','(O)',0.3333333333333333,1),(3408,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hadChildhoodInfection(long,double[])','edu.ncsu.csc.itrust.dao.mysql.RiskDAO:setICDs(int,java.sql.PreparedStatement,double[])','(O)',0.3333333333333333,1),(3409,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hadChildhoodInfection(long,double[])','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.008403361344537815,1),(3410,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hadChildhoodInfection(long,double[])','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.009009009009009009,1),(3411,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hasSmoked(long)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3412,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hasSmoked(long)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3413,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hasSmoked(long)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3414,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hadPriorDiagnoses(long,double,double)','edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()','(M)',0.008438818565400843,1),(3415,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hadPriorDiagnoses(long,double,double)','edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)','(S)',0.00847457627118644,1),(3416,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hadPriorDiagnoses(long,double,double)','edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','(O)',0.00909090909090909,1),(3417,'edu.ncsu.csc.itrust.enums.PrescriptionAlerts:<clinit>()','edu.ncsu.csc.itrust.enums.PrescriptionAlerts:<init>(java.lang.String,int,java.lang.String,java.lang.String)','(O)',1,1),(3418,'edu.ncsu.csc.itrust.enums.PrescriptionAlerts:isAlert(java.lang.String)','edu.ncsu.csc.itrust.enums.PrescriptionAlerts:values()','(S)',0.6666666666666666,1),(3419,'edu.ncsu.csc.itrust.enums.PrescriptionAlerts:isAlert(java.lang.String)','edu.ncsu.csc.itrust.enums.PrescriptionAlerts:getNDCode()','(M)',0.6666666666666666,1),(3420,'edu.ncsu.csc.itrust.enums.Role:<clinit>()','edu.ncsu.csc.itrust.enums.Role:<init>(java.lang.String,int,java.lang.String,java.lang.String,long)','(O)',1,1),(3421,'edu.ncsu.csc.itrust.enums.Role:parse(java.lang.String)','edu.ncsu.csc.itrust.enums.Role:values()','(S)',0.6666666666666666,1),(3422,'edu.ncsu.csc.itrust.enums.State:<clinit>()','edu.ncsu.csc.itrust.enums.State:<init>(java.lang.String,int,java.lang.String)','(O)',1,1),(3423,'edu.ncsu.csc.itrust.enums.State:getAbbrev()','edu.ncsu.csc.itrust.enums.State:toString()','(M)',1,1),(3424,'edu.ncsu.csc.itrust.enums.State:parse(java.lang.String)','edu.ncsu.csc.itrust.enums.State:values()','(S)',0.5,1),(3425,'edu.ncsu.csc.itrust.enums.State:parse(java.lang.String)','edu.ncsu.csc.itrust.enums.State:getName()','(M)',0.5,1),(3426,'edu.ncsu.csc.itrust.enums.State:parse(java.lang.String)','edu.ncsu.csc.itrust.enums.State:getAbbrev()','(M)',0.5,1),(3427,'edu.ncsu.csc.itrust.enums.Ethnicity:<clinit>()','edu.ncsu.csc.itrust.enums.Ethnicity:<init>(java.lang.String,int,java.lang.String)','(O)',1,1),(3428,'edu.ncsu.csc.itrust.enums.Ethnicity:toString()','edu.ncsu.csc.itrust.enums.Ethnicity:getName()','(M)',0.6666666666666666,1),(3429,'edu.ncsu.csc.itrust.enums.Ethnicity:parse(java.lang.String)','edu.ncsu.csc.itrust.enums.Ethnicity:values()','(S)',1,1),(3430,'edu.ncsu.csc.itrust.enums.Gender:<clinit>()','edu.ncsu.csc.itrust.enums.Gender:<init>(java.lang.String,int,java.lang.String)','(O)',1,1),(3431,'edu.ncsu.csc.itrust.enums.Gender:toString()','edu.ncsu.csc.itrust.enums.Gender:getName()','(M)',0.5,1),(3432,'edu.ncsu.csc.itrust.enums.Gender:parse(java.lang.String)','edu.ncsu.csc.itrust.enums.Gender:values()','(S)',1,1),(3433,'edu.ncsu.csc.itrust.enums.BloodType:<clinit>()','edu.ncsu.csc.itrust.enums.BloodType:<init>(java.lang.String,int,java.lang.String)','(O)',1,1),(3434,'edu.ncsu.csc.itrust.enums.BloodType:toString()','edu.ncsu.csc.itrust.enums.BloodType:getName()','(M)',0.5,1),(3435,'edu.ncsu.csc.itrust.enums.BloodType:parse(java.lang.String)','edu.ncsu.csc.itrust.enums.BloodType:values()','(S)',0.6666666666666666,1),(3436,'edu.ncsu.csc.itrust.enums.BloodType:parse(java.lang.String)','edu.ncsu.csc.itrust.enums.BloodType:getName()','(M)',0.4,1),(3437,'edu.ncsu.csc.itrust.enums.TransactionType:<clinit>()','edu.ncsu.csc.itrust.enums.TransactionType:<init>(java.lang.String,int,int,java.lang.String,java.lang.String,boolean)','(O)',0.5,1),(3438,'edu.ncsu.csc.itrust.enums.TransactionType:<clinit>()','edu.ncsu.csc.itrust.enums.TransactionType:values()','(S)',0.2857142857142857,1),(3439,'edu.ncsu.csc.itrust.enums.TransactionType:<clinit>()','edu.ncsu.csc.itrust.enums.TransactionType:isPatientViewable()','(M)',0.4,1),(3440,'edu.ncsu.csc.itrust.enums.TransactionType:parse(int)','edu.ncsu.csc.itrust.enums.TransactionType:values()','(S)',0.4,1),(3441,'edu.ncsu.csc.itrust.enums.SortDirection:<clinit>()','edu.ncsu.csc.itrust.enums.SortDirection:<init>(java.lang.String,int,java.lang.String)','(O)',1,1),(3442,'edu.ncsu.csc.itrust.enums.SortDirection:parse(java.lang.String)','edu.ncsu.csc.itrust.enums.SortDirection:values()','(S)',1,1),(3443,'edu.ncsu.csc.itrust.exception.PrescriptionWarningException:<init>(java.util.List)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03278688524590164,1),(3444,'edu.ncsu.csc.itrust.exception.NoHealthRecordsException:<init>()','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03278688524590164,1),(3445,'edu.ncsu.csc.itrust.exception.PrescriptionFieldException:<init>(java.lang.String)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03278688524590164,1),(3446,'edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)','edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)','(O)',0.03278688524590164,1),(3447,'edu.ncsu.csc.itrust.exception.DBException:getExtendedMessage()','edu.ncsu.csc.itrust.exception.iTrustException:getExtendedMessage()','(O)',1,1),(3448,'edu.ncsu.csc.itrust.risk.ChronicDiseaseMediator:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.5,1),(3449,'edu.ncsu.csc.itrust.risk.ChronicDiseaseMediator:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.risk.Type1DiabetesRisks:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.5,1),(3450,'edu.ncsu.csc.itrust.risk.ChronicDiseaseMediator:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.5,1),(3451,'edu.ncsu.csc.itrust.risk.ChronicDiseaseMediator:getDiseaseAtRisk()','edu.ncsu.csc.itrust.risk.RiskChecker:isAtRisk()','(M)',1,1),(3452,'edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.risk.RiskChecker:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.5,1),(3453,'edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.GenderFactor:<init>(edu.ncsu.csc.itrust.beans.PatientBean,edu.ncsu.csc.itrust.enums.Gender)','(O)',0.18181818181818182,1),(3454,'edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.AgeFactor:<init>(edu.ncsu.csc.itrust.beans.PatientBean,int)','(O)',0.16666666666666666,1),(3455,'edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.EthnicityFactor:<init>(edu.ncsu.csc.itrust.beans.PatientBean,edu.ncsu.csc.itrust.enums.Ethnicity[])','(O)',0.15384615384615385,1),(3456,'edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.WeightFactor:<init>(edu.ncsu.csc.itrust.beans.HealthRecord,int)','(O)',0.16666666666666666,1),(3457,'edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.HypertensionFactor:<init>(edu.ncsu.csc.itrust.beans.HealthRecord)','(O)',0.16666666666666666,1),(3458,'edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.CholesterolFactor:<init>(edu.ncsu.csc.itrust.beans.HealthRecord)','(O)',0.16666666666666666,1),(3459,'edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.beans.PatientBean:getMID()','(M)',0.10526315789473684,1),(3460,'edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.SmokingFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.18181818181818182,1),(3461,'edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.PriorDiagnosisFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,double,double)','(O)',0.16666666666666666,1),(3462,'edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.FamilyHistoryFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,double,double)','(O)',0.15384615384615385,1),(3463,'edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.risk.RiskChecker:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.5,1),(3464,'edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:qualifiesForDisease()','edu.ncsu.csc.itrust.beans.PatientBean:getAge()','(M)',0.4,1),(3465,'edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.AgeFactor:<init>(edu.ncsu.csc.itrust.beans.PatientBean,int)','(O)',0.2,1),(3466,'edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.EthnicityFactor:<init>(edu.ncsu.csc.itrust.beans.PatientBean,edu.ncsu.csc.itrust.enums.Ethnicity[])','(O)',0.18181818181818182,1),(3467,'edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.WeightFactor:<init>(edu.ncsu.csc.itrust.beans.HealthRecord,int)','(O)',0.2,1),(3468,'edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.HypertensionFactor:<init>(edu.ncsu.csc.itrust.beans.HealthRecord)','(O)',0.2,1),(3469,'edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.CholesterolFactor:<init>(edu.ncsu.csc.itrust.beans.HealthRecord)','(O)',0.2,1),(3470,'edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.beans.PatientBean:getMID()','(M)',0.11764705882352941,1),(3471,'edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.PriorDiagnosisFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,double,double)','(O)',0.2,1),(3472,'edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.FamilyHistoryFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,double,double)','(O)',0.18181818181818182,1),(3473,'edu.ncsu.csc.itrust.risk.Type1DiabetesRisks:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.risk.RiskChecker:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','(O)',0.5,1),(3474,'edu.ncsu.csc.itrust.risk.Type1DiabetesRisks:qualifiesForDisease()','edu.ncsu.csc.itrust.beans.PatientBean:getAge()','(M)',0.4,1),(3475,'edu.ncsu.csc.itrust.risk.Type1DiabetesRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.EthnicityFactor:<init>(edu.ncsu.csc.itrust.beans.PatientBean,edu.ncsu.csc.itrust.enums.Ethnicity[])','(O)',0.2857142857142857,1),(3476,'edu.ncsu.csc.itrust.risk.Type1DiabetesRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.beans.PatientBean:getMID()','(M)',0.15384615384615385,1),(3477,'edu.ncsu.csc.itrust.risk.Type1DiabetesRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.FamilyHistoryFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,double,double)','(O)',0.2857142857142857,1),(3478,'edu.ncsu.csc.itrust.risk.Type1DiabetesRisks:getDiseaseRiskFactors()','edu.ncsu.csc.itrust.risk.factors.ChildhoodInfectionFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,double[])','(O)',0.4,1),(3479,'edu.ncsu.csc.itrust.risk.RiskChecker:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getHealthRecordsDAO()','(M)',0.2222222222222222,1),(3480,'edu.ncsu.csc.itrust.risk.RiskChecker:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)','(M)',0.125,1),(3481,'edu.ncsu.csc.itrust.risk.RiskChecker:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.exception.NoHealthRecordsException:<init>()','(O)',0.3333333333333333,1),(3482,'edu.ncsu.csc.itrust.risk.RiskChecker:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()','(M)',0.046511627906976744,1),(3483,'edu.ncsu.csc.itrust.risk.RiskChecker:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)','(M)',0.06451612903225806,1),(3484,'edu.ncsu.csc.itrust.risk.RiskChecker:isAtRisk()','edu.ncsu.csc.itrust.risk.RiskChecker:qualifiesForDisease()','(M)',0.5,1),(3485,'edu.ncsu.csc.itrust.risk.RiskChecker:isAtRisk()','edu.ncsu.csc.itrust.risk.RiskChecker:getDiseaseRiskFactors()','(M)',0.4,1),(3486,'edu.ncsu.csc.itrust.risk.RiskChecker:isAtRisk()','edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:hasRiskFactor()','(M)',0.4,1),(3487,'edu.ncsu.csc.itrust.risk.RiskChecker:getPatientRiskFactors()','edu.ncsu.csc.itrust.risk.RiskChecker:getDiseaseRiskFactors()','(M)',0.5,1),(3488,'edu.ncsu.csc.itrust.risk.RiskChecker:getPatientRiskFactors()','edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:hasRiskFactor()','(M)',0.5,1),(3489,'edu.ncsu.csc.itrust.risk.factors.ChildhoodInfectionFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,double[])','edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:<init>()','(O)',0.18181818181818182,1),(3490,'edu.ncsu.csc.itrust.risk.factors.ChildhoodInfectionFactor:hasFactor()','edu.ncsu.csc.itrust.dao.DAOFactory:getRiskDAO()','(M)',0.3333333333333333,1),(3491,'edu.ncsu.csc.itrust.risk.factors.ChildhoodInfectionFactor:hasFactor()','edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hadChildhoodInfection(long,double[])','(M)',0.6666666666666666,1),(3492,'edu.ncsu.csc.itrust.risk.factors.HypertensionFactor:<init>(edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:<init>()','(O)',0.18181818181818182,1),(3493,'edu.ncsu.csc.itrust.risk.factors.HypertensionFactor:hasFactor()','edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureSystolic()','(M)',0.4,1),(3494,'edu.ncsu.csc.itrust.risk.factors.HypertensionFactor:hasFactor()','edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureDiastolic()','(M)',0.4,1),(3495,'edu.ncsu.csc.itrust.risk.factors.SmokingFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)','edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:<init>()','(O)',0.18181818181818182,1),(3496,'edu.ncsu.csc.itrust.risk.factors.SmokingFactor:hasFactor()','edu.ncsu.csc.itrust.dao.DAOFactory:getRiskDAO()','(M)',0.2857142857142857,1),(3497,'edu.ncsu.csc.itrust.risk.factors.SmokingFactor:hasFactor()','edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hasSmoked(long)','(M)',0.5,1),(3498,'edu.ncsu.csc.itrust.risk.factors.SmokingFactor:hasFactor()','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.06060606060606061,1),(3499,'edu.ncsu.csc.itrust.risk.factors.CholesterolFactor:<init>(edu.ncsu.csc.itrust.beans.HealthRecord)','edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:<init>()','(O)',0.18181818181818182,1),(3500,'edu.ncsu.csc.itrust.risk.factors.CholesterolFactor:hasFactor()','edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolHDL()','(M)',0.25,1),(3501,'edu.ncsu.csc.itrust.risk.factors.CholesterolFactor:hasFactor()','edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolLDL()','(M)',0.25,1),(3502,'edu.ncsu.csc.itrust.risk.factors.CholesterolFactor:hasFactor()','edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolTri()','(M)',0.3333333333333333,1),(3503,'edu.ncsu.csc.itrust.risk.factors.WeightFactor:<init>(edu.ncsu.csc.itrust.beans.HealthRecord,int)','edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:<init>()','(O)',0.18181818181818182,1),(3504,'edu.ncsu.csc.itrust.risk.factors.WeightFactor:hasFactor()','edu.ncsu.csc.itrust.beans.HealthRecord:getBodyMassIndex()','(M)',1,1),(3505,'edu.ncsu.csc.itrust.risk.factors.EthnicityFactor:<init>(edu.ncsu.csc.itrust.beans.PatientBean,edu.ncsu.csc.itrust.enums.Ethnicity[])','edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:<init>()','(O)',0.16666666666666666,1),(3506,'edu.ncsu.csc.itrust.risk.factors.EthnicityFactor:<init>(edu.ncsu.csc.itrust.beans.PatientBean,edu.ncsu.csc.itrust.enums.Ethnicity[])','edu.ncsu.csc.itrust.enums.Ethnicity[]:clone()','(M)',0.6666666666666666,1),(3507,'edu.ncsu.csc.itrust.risk.factors.EthnicityFactor:getDescription()','edu.ncsu.csc.itrust.beans.PatientBean:getEthnicity()','(M)',0.5,1),(3508,'edu.ncsu.csc.itrust.risk.factors.EthnicityFactor:hasFactor()','edu.ncsu.csc.itrust.beans.PatientBean:getEthnicity()','(M)',0.4,1),(3509,'edu.ncsu.csc.itrust.risk.factors.EthnicityFactor:hasFactor()','edu.ncsu.csc.itrust.enums.Ethnicity:equals(java.lang.Object)','(M)',0.6666666666666666,1),(3510,'edu.ncsu.csc.itrust.risk.factors.FamilyHistoryFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,double,double)','edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:<init>()','(O)',0.18181818181818182,1),(3511,'edu.ncsu.csc.itrust.risk.factors.FamilyHistoryFactor:hasFactor()','edu.ncsu.csc.itrust.dao.DAOFactory:getRiskDAO()','(M)',0.2857142857142857,1),(3512,'edu.ncsu.csc.itrust.risk.factors.FamilyHistoryFactor:hasFactor()','edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hasFamilyHistory(long,double,double)','(M)',0.5,1),(3513,'edu.ncsu.csc.itrust.risk.factors.FamilyHistoryFactor:hasFactor()','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.06060606060606061,1),(3514,'edu.ncsu.csc.itrust.risk.factors.AgeFactor:<init>(edu.ncsu.csc.itrust.beans.PatientBean,int)','edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:<init>()','(O)',0.18181818181818182,1),(3515,'edu.ncsu.csc.itrust.risk.factors.AgeFactor:hasFactor()','edu.ncsu.csc.itrust.beans.PatientBean:getAge()','(M)',0.4,1),(3516,'edu.ncsu.csc.itrust.risk.factors.PriorDiagnosisFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,double,double)','edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:<init>()','(O)',0.18181818181818182,1),(3517,'edu.ncsu.csc.itrust.risk.factors.PriorDiagnosisFactor:hasFactor()','edu.ncsu.csc.itrust.dao.DAOFactory:getRiskDAO()','(M)',0.2857142857142857,1),(3518,'edu.ncsu.csc.itrust.risk.factors.PriorDiagnosisFactor:hasFactor()','edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hadPriorDiagnoses(long,double,double)','(M)',0.4,1),(3519,'edu.ncsu.csc.itrust.risk.factors.PriorDiagnosisFactor:hasFactor()','edu.ncsu.csc.itrust.exception.DBException:printStackTrace()','(M)',0.06060606060606061,1),(3520,'edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:hasRiskFactor()','edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:hasFactor()','(M)',1,1),(3521,'edu.ncsu.csc.itrust.risk.factors.GenderFactor:<init>(edu.ncsu.csc.itrust.beans.PatientBean,edu.ncsu.csc.itrust.enums.Gender)','edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:<init>()','(O)',0.18181818181818182,1),(3522,'edu.ncsu.csc.itrust.risk.factors.GenderFactor:getDescription()','edu.ncsu.csc.itrust.beans.PatientBean:getGender()','(M)',0.2857142857142857,1),(3523,'edu.ncsu.csc.itrust.risk.factors.GenderFactor:getDescription()','edu.ncsu.csc.itrust.enums.Gender:toString()','(M)',0.4,1),(3524,'edu.ncsu.csc.itrust.risk.factors.GenderFactor:hasFactor()','edu.ncsu.csc.itrust.beans.PatientBean:getGender()','(M)',0.2857142857142857,1),(3525,'edu.ncsu.csc.itrust.risk.factors.GenderFactor:hasFactor()','edu.ncsu.csc.itrust.enums.Gender:equals(java.lang.Object)','(M)',0.6666666666666666,1),(3526,'edu.ncsu.csc.itrust.validate.ValidationFormat:<clinit>()','edu.ncsu.csc.itrust.validate.ValidationFormat:<init>(java.lang.String,int,java.lang.String,java.lang.String)','(O)',1,1),(3527,'edu.ncsu.csc.itrust.validate.ApptBeanValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3528,'edu.ncsu.csc.itrust.validate.ApptBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.06060606060606061,1),(3529,'edu.ncsu.csc.itrust.validate.ApptBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.beans.ApptBean:getComment()','(M)',0.2222222222222222,1),(3530,'edu.ncsu.csc.itrust.validate.ApptBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.validate.ApptBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.2857142857142857,1),(3531,'edu.ncsu.csc.itrust.validate.ApptBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.06060606060606061,1),(3532,'edu.ncsu.csc.itrust.validate.ApptBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.06060606060606061,1),(3533,'edu.ncsu.csc.itrust.validate.ApptBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.06060606060606061,1),(3534,'edu.ncsu.csc.itrust.validate.ApptBeanValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.ApptBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptBean)','(M)',0.5,1),(3535,'edu.ncsu.csc.itrust.validate.BeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','edu.ncsu.csc.itrust.validate.ValidationFormat:getDescription()','(M)',0.4,1),(3536,'edu.ncsu.csc.itrust.validate.BeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','edu.ncsu.csc.itrust.validate.ValidationFormat:getRegex()','(M)',0.5,1),(3537,'edu.ncsu.csc.itrust.validate.BeanValidator:checkFormat(java.lang.String,java.lang.Long,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','edu.ncsu.csc.itrust.validate.BeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.5,1),(3538,'edu.ncsu.csc.itrust.validate.BeanValidator:checkFormat(java.lang.String,java.lang.Double,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','edu.ncsu.csc.itrust.validate.BeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.5,1),(3539,'edu.ncsu.csc.itrust.validate.BeanValidator:checkGender(java.lang.String,edu.ncsu.csc.itrust.enums.Gender,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','edu.ncsu.csc.itrust.enums.Gender:toString()','(M)',0.4,1),(3540,'edu.ncsu.csc.itrust.validate.BeanValidator:checkGender(java.lang.String,edu.ncsu.csc.itrust.enums.Gender,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','edu.ncsu.csc.itrust.validate.BeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.4,1),(3541,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3542,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.05405405405405406,1),(3543,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getReferralDetails()','(M)',0.14285714285714285,1),(3544,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.validate.ReferralBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.18181818181818182,1),(3545,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.05405405405405406,1),(3546,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getPriority()','(M)',0.16666666666666666,1),(3547,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getPatientID()','(M)',0.11764705882352941,1),(3548,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.validate.ReferralBeanValidator:checkFormat(java.lang.String,java.lang.Long,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.18181818181818182,1),(3549,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.beans.ReferralBean:getReceiverID()','(M)',0.1111111111111111,1),(3550,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.05405405405405406,1),(3551,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(edu.ncsu.csc.itrust.beans.ReferralBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.05405405405405406,1),(3552,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(edu.ncsu.csc.itrust.beans.ReferralBean)','(M)',1,1),(3553,'edu.ncsu.csc.itrust.validate.MedicationBeanValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3554,'edu.ncsu.csc.itrust.validate.MedicationBeanValidator:validate(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.058823529411764705,1),(3555,'edu.ncsu.csc.itrust.validate.MedicationBeanValidator:validate(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()','(M)',0.1,1),(3556,'edu.ncsu.csc.itrust.validate.MedicationBeanValidator:validate(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.validate.MedicationBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.25,1),(3557,'edu.ncsu.csc.itrust.validate.MedicationBeanValidator:validate(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.058823529411764705,1),(3558,'edu.ncsu.csc.itrust.validate.MedicationBeanValidator:validate(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.beans.MedicationBean:getDescription()','(M)',0.11764705882352941,1),(3559,'edu.ncsu.csc.itrust.validate.MedicationBeanValidator:validate(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.058823529411764705,1),(3560,'edu.ncsu.csc.itrust.validate.MedicationBeanValidator:validate(edu.ncsu.csc.itrust.beans.MedicationBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.058823529411764705,1),(3561,'edu.ncsu.csc.itrust.validate.MedicationBeanValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.MedicationBeanValidator:validate(edu.ncsu.csc.itrust.beans.MedicationBean)','(M)',0.5,1),(3562,'edu.ncsu.csc.itrust.validate.MessageValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3563,'edu.ncsu.csc.itrust.validate.MessageValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.058823529411764705,1),(3564,'edu.ncsu.csc.itrust.validate.MessageValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.MessageBean:getBody()','(M)',0.18181818181818182,1),(3565,'edu.ncsu.csc.itrust.validate.MessageValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.validate.MessageValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.25,1),(3566,'edu.ncsu.csc.itrust.validate.MessageValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.058823529411764705,1),(3567,'edu.ncsu.csc.itrust.validate.MessageValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.MessageBean:getSubject()','(M)',0.2,1),(3568,'edu.ncsu.csc.itrust.validate.MessageValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.058823529411764705,1),(3569,'edu.ncsu.csc.itrust.validate.MessageValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.058823529411764705,1),(3570,'edu.ncsu.csc.itrust.validate.MessageValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.MessageValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','(M)',0.6666666666666666,1),(3571,'edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3572,'edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:validate(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.058823529411764705,1),(3573,'edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:validate(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.beans.OverrideReasonBean:getORCode()','(M)',0.18181818181818182,1),(3574,'edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:validate(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.25,1),(3575,'edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:validate(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.058823529411764705,1),(3576,'edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:validate(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.beans.OverrideReasonBean:getDescription()','(M)',0.18181818181818182,1),(3577,'edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:validate(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.058823529411764705,1),(3578,'edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:validate(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.058823529411764705,1),(3579,'edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:validate(edu.ncsu.csc.itrust.beans.OverrideReasonBean)','(M)',0.5,1),(3580,'edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3581,'edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:validate(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.058823529411764705,1),(3582,'edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:validate(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()','(M)',0.1,1),(3583,'edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:validate(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.25,1),(3584,'edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:validate(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.058823529411764705,1),(3585,'edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:validate(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.beans.DiagnosisBean:getDescription()','(M)',0.14285714285714285,1),(3586,'edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:validate(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.058823529411764705,1),(3587,'edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:validate(edu.ncsu.csc.itrust.beans.DiagnosisBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.058823529411764705,1),(3588,'edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:validate(edu.ncsu.csc.itrust.beans.DiagnosisBean)','(M)',0.5,1),(3589,'edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3590,'edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:validate(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.058823529411764705,1),(3591,'edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:validate(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getCPTCode()','(M)',0.14285714285714285,1),(3592,'edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:validate(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.25,1),(3593,'edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:validate(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.058823529411764705,1),(3594,'edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:validate(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.beans.ProcedureBean:getDescription()','(M)',0.16666666666666666,1),(3595,'edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:validate(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.058823529411764705,1),(3596,'edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:validate(edu.ncsu.csc.itrust.beans.ProcedureBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.058823529411764705,1),(3597,'edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:validate(edu.ncsu.csc.itrust.beans.ProcedureBean)','(M)',0.5,1),(3598,'edu.ncsu.csc.itrust.validate.EMailValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3599,'edu.ncsu.csc.itrust.validate.EMailValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.06060606060606061,1),(3600,'edu.ncsu.csc.itrust.validate.EMailValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.beans.MessageBean:getBody()','(M)',0.2,1),(3601,'edu.ncsu.csc.itrust.validate.EMailValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.validate.EMailValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.2857142857142857,1),(3602,'edu.ncsu.csc.itrust.validate.EMailValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.06060606060606061,1),(3603,'edu.ncsu.csc.itrust.validate.EMailValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.06060606060606061,1),(3604,'edu.ncsu.csc.itrust.validate.EMailValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.06060606060606061,1),(3605,'edu.ncsu.csc.itrust.validate.EMailValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.EMailValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)','(M)',0.6666666666666666,1),(3606,'edu.ncsu.csc.itrust.validate.PatientValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3607,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.030303030303030304,1),(3608,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getFirstName()','(M)',0.045454545454545456,1),(3609,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.validate.PatientValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.05,1),(3610,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.030303030303030304,1),(3611,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getLastName()','(M)',0.045454545454545456,1),(3612,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getDateOfBirthStr()','(M)',0.04878048780487805,1),(3613,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getDateOfDeathStr()','(M)',0.04878048780487805,1),(3614,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getDateOfDeath()','(M)',0.05,1),(3615,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getCauseOfDeath()','(M)',0.046511627906976744,1),(3616,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getDateOfBirth()','(M)',0.04878048780487805,1),(3617,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.03636363636363636,1),(3618,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getStreetAddress1()','(M)',0.047619047619047616,1),(3619,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getStreetAddress2()','(M)',0.047619047619047616,1),(3620,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getCity()','(M)',0.046511627906976744,1),(3621,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getState()','(M)',0.046511627906976744,1),(3622,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getZip()','(M)',0.047619047619047616,1),(3623,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getPhone()','(M)',0.05,1),(3624,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyName()','(M)',0.047619047619047616,1),(3625,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone()','(M)',0.04878048780487805,1),(3626,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcName()','(M)',0.04878048780487805,1),(3627,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcAddress1()','(M)',0.04878048780487805,1),(3628,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcAddress2()','(M)',0.04878048780487805,1),(3629,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcCity()','(M)',0.047619047619047616,1),(3630,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcState()','(M)',0.047619047619047616,1),(3631,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcZip()','(M)',0.04878048780487805,1),(3632,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone()','(M)',0.05,1),(3633,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getIcID()','(M)',0.04878048780487805,1),(3634,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getMotherMID()','(M)',0.04878048780487805,1),(3635,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getFatherMID()','(M)',0.04878048780487805,1),(3636,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getTopicalNotes()','(M)',0.04878048780487805,1),(3637,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getCreditCardNumber()','(M)',0.04878048780487805,1),(3638,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getCreditCardType()','(M)',0.04878048780487805,1),(3639,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getDirectionsToHome()','(M)',0.04878048780487805,1),(3640,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getReligion()','(M)',0.04878048780487805,1),(3641,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getLanguage()','(M)',0.04878048780487805,1),(3642,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getSpiritualPractices()','(M)',0.04878048780487805,1),(3643,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getAlternateName()','(M)',0.04878048780487805,1),(3644,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.030303030303030304,1),(3645,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.030303030303030304,1),(3646,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','(M)',0.6666666666666666,1),(3647,'edu.ncsu.csc.itrust.validate.AddPatientValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3648,'edu.ncsu.csc.itrust.validate.AddPatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.05714285714285714,1),(3649,'edu.ncsu.csc.itrust.validate.AddPatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getFirstName()','(M)',0.15384615384615385,1),(3650,'edu.ncsu.csc.itrust.validate.AddPatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.validate.AddPatientValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.2222222222222222,1),(3651,'edu.ncsu.csc.itrust.validate.AddPatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.05714285714285714,1),(3652,'edu.ncsu.csc.itrust.validate.AddPatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getLastName()','(M)',0.15384615384615385,1),(3653,'edu.ncsu.csc.itrust.validate.AddPatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.beans.PatientBean:getEmail()','(M)',0.08333333333333333,1),(3654,'edu.ncsu.csc.itrust.validate.AddPatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.05714285714285714,1),(3655,'edu.ncsu.csc.itrust.validate.AddPatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.05714285714285714,1),(3656,'edu.ncsu.csc.itrust.validate.AddPatientValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.AddPatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)','(M)',0.6666666666666666,1),(3657,'edu.ncsu.csc.itrust.validate.SurveySearchValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3658,'edu.ncsu.csc.itrust.validate.SurveySearchValidator:validate(edu.ncsu.csc.itrust.beans.SurveyResultBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.06060606060606061,1),(3659,'edu.ncsu.csc.itrust.validate.SurveySearchValidator:validate(edu.ncsu.csc.itrust.beans.SurveyResultBean)','edu.ncsu.csc.itrust.beans.SurveyResultBean:getHCPzip()','(M)',0.25,1),(3660,'edu.ncsu.csc.itrust.validate.SurveySearchValidator:validate(edu.ncsu.csc.itrust.beans.SurveyResultBean)','edu.ncsu.csc.itrust.validate.SurveySearchValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.2857142857142857,1),(3661,'edu.ncsu.csc.itrust.validate.SurveySearchValidator:validate(edu.ncsu.csc.itrust.beans.SurveyResultBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.06060606060606061,1),(3662,'edu.ncsu.csc.itrust.validate.SurveySearchValidator:validate(edu.ncsu.csc.itrust.beans.SurveyResultBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.06060606060606061,1),(3663,'edu.ncsu.csc.itrust.validate.SurveySearchValidator:validate(edu.ncsu.csc.itrust.beans.SurveyResultBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.06060606060606061,1),(3664,'edu.ncsu.csc.itrust.validate.SurveySearchValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.SurveySearchValidator:validate(edu.ncsu.csc.itrust.beans.SurveyResultBean)','(M)',0.6666666666666666,1),(3665,'edu.ncsu.csc.itrust.validate.AllergyBeanValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3666,'edu.ncsu.csc.itrust.validate.AllergyBeanValidator:validate(edu.ncsu.csc.itrust.beans.AllergyBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.06060606060606061,1),(3667,'edu.ncsu.csc.itrust.validate.AllergyBeanValidator:validate(edu.ncsu.csc.itrust.beans.AllergyBean)','edu.ncsu.csc.itrust.beans.AllergyBean:getDescription()','(M)',0.2222222222222222,1),(3668,'edu.ncsu.csc.itrust.validate.AllergyBeanValidator:validate(edu.ncsu.csc.itrust.beans.AllergyBean)','edu.ncsu.csc.itrust.validate.AllergyBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.2857142857142857,1),(3669,'edu.ncsu.csc.itrust.validate.AllergyBeanValidator:validate(edu.ncsu.csc.itrust.beans.AllergyBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.06060606060606061,1),(3670,'edu.ncsu.csc.itrust.validate.AllergyBeanValidator:validate(edu.ncsu.csc.itrust.beans.AllergyBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.06060606060606061,1),(3671,'edu.ncsu.csc.itrust.validate.AllergyBeanValidator:validate(edu.ncsu.csc.itrust.beans.AllergyBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.06060606060606061,1),(3672,'edu.ncsu.csc.itrust.validate.AllergyBeanValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.AllergyBeanValidator:validate(edu.ncsu.csc.itrust.beans.AllergyBean)','(M)',1,1),(3673,'edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3674,'edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.058823529411764705,1),(3675,'edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.beans.ApptTypeBean:getName()','(M)',0.15384615384615385,1),(3676,'edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.25,1),(3677,'edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.058823529411764705,1),(3678,'edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.beans.ApptTypeBean:getDuration()','(M)',0.15384615384615385,1),(3679,'edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.058823529411764705,1),(3680,'edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptTypeBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.058823529411764705,1),(3681,'edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptTypeBean)','(M)',0.5,1),(3682,'edu.ncsu.csc.itrust.validate.PersonnelValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3683,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.04878048780487805,1),(3684,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getFirstName()','(M)',0.1111111111111111,1),(3685,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.validate.PersonnelValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.13333333333333333,1),(3686,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.04878048780487805,1),(3687,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getLastName()','(M)',0.10526315789473684,1),(3688,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getStreetAddress1()','(M)',0.1111111111111111,1),(3689,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getStreetAddress2()','(M)',0.1111111111111111,1),(3690,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getCity()','(M)',0.1111111111111111,1),(3691,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getState()','(M)',0.1111111111111111,1),(3692,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getZip()','(M)',0.10526315789473684,1),(3693,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getPhone()','(M)',0.13333333333333333,1),(3694,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getEmail()','(M)',0.09090909090909091,1),(3695,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.04878048780487805,1),(3696,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.04878048780487805,1),(3697,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.6666666666666666,1),(3698,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3699,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.05263157894736842,1),(3700,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getSystolicBloodPressure()','(M)',0.15384615384615385,1),(3701,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.16666666666666666,1),(3702,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.05263157894736842,1),(3703,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getDiastolicBloodPressure()','(M)',0.15384615384615385,1),(3704,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getGlucoseLevel()','(M)',0.15384615384615385,1),(3705,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getPedometerReading()','(M)',0.15384615384615385,1),(3706,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getHeight()','(M)',0.15384615384615385,1),(3707,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getWeight()','(M)',0.15384615384615385,1),(3708,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.05263157894736842,1),(3709,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.05263157894736842,1),(3710,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)','(M)',0.6666666666666666,1),(3711,'edu.ncsu.csc.itrust.validate.MailValidator:validateEmail(java.lang.String)','edu.ncsu.csc.itrust.validate.MailValidator:<init>()','(O)',0.6666666666666666,1),(3712,'edu.ncsu.csc.itrust.validate.MailValidator:validateEmail(java.lang.String)','edu.ncsu.csc.itrust.validate.MailValidator:isValid(java.lang.String)','(M)',0.6666666666666666,1),(3713,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3714,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(edu.ncsu.csc.itrust.beans.DrugInteractionBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.05714285714285714,1),(3715,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(edu.ncsu.csc.itrust.beans.DrugInteractionBean)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:getFirstDrug()','(M)',0.2,1),(3716,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(edu.ncsu.csc.itrust.beans.DrugInteractionBean)','edu.ncsu.csc.itrust.validate.DrugInteractionValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.2222222222222222,1),(3717,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(edu.ncsu.csc.itrust.beans.DrugInteractionBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.05714285714285714,1),(3718,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(edu.ncsu.csc.itrust.beans.DrugInteractionBean)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:getSecondDrug()','(M)',0.18181818181818182,1),(3719,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(edu.ncsu.csc.itrust.beans.DrugInteractionBean)','edu.ncsu.csc.itrust.beans.DrugInteractionBean:getDescription()','(M)',0.2,1),(3720,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(edu.ncsu.csc.itrust.beans.DrugInteractionBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.05714285714285714,1),(3721,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(edu.ncsu.csc.itrust.beans.DrugInteractionBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.05714285714285714,1),(3722,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(edu.ncsu.csc.itrust.beans.DrugInteractionBean)','(M)',0.5,1),(3723,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3724,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.04878048780487805,1),(3725,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getBloodPressureN()','(M)',0.125,1),(3726,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:checkInt(java.lang.String,java.lang.String,int,int,boolean)','(M)',0.13333333333333333,1),(3727,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.04878048780487805,1),(3728,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getBloodPressureD()','(M)',0.125,1),(3729,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getCholesterolHDL()','(M)',0.125,1),(3730,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getCholesterolLDL()','(M)',0.125,1),(3731,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getCholesterolTri()','(M)',0.125,1),(3732,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getHeight()','(M)',0.125,1),(3733,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.13333333333333333,1),(3734,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getWeight()','(M)',0.125,1),(3735,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getIsSmoker()','(M)',0.125,1),(3736,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.04878048780487805,1),(3737,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.04878048780487805,1),(3738,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)','(M)',0.6666666666666666,1),(3739,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3740,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.05,1),(3741,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getLoinc()','(M)',0.125,1),(3742,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.validate.LabProcedureValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.14285714285714285,1),(3743,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.05,1),(3744,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getCommentary()','(M)',0.125,1),(3745,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getResults()','(M)',0.125,1),(3746,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getStatus()','(M)',0.10526315789473684,1),(3747,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getRights()','(M)',0.11764705882352941,1),(3748,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getNumericalResult()','(M)',0.125,1),(3749,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getUpperBound()','(M)',0.125,1),(3750,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.beans.LabProcedureBean:getLowerBound()','(M)',0.125,1),(3751,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.05,1),(3752,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.05,1),(3753,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)','(M)',0.5,1),(3754,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:<init>(java.lang.String)','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3755,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.05263157894736842,1),(3756,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)','edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getStartDate()','(M)',0.15384615384615385,1),(3757,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)','edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.16666666666666666,1),(3758,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.05263157894736842,1),(3759,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)','edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getEndDate()','(M)',0.15384615384615385,1),(3760,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)','edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getInstructions()','(M)',0.15384615384615385,1),(3761,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)','edu.ncsu.csc.itrust.validate.ValidationFormat:getDescription()','(M)',0.14285714285714285,1),(3762,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)','edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getDosage()','(M)',0.15384615384615385,1),(3763,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)','edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:checkInt(java.lang.String,java.lang.String,int,int,boolean)','(M)',0.16666666666666666,1),(3764,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.05263157894736842,1),(3765,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.05263157894736842,1),(3766,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)','(M)',0.6666666666666666,1),(3767,'edu.ncsu.csc.itrust.validate.HospitalBeanValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3768,'edu.ncsu.csc.itrust.validate.HospitalBeanValidator:validate(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.058823529411764705,1),(3769,'edu.ncsu.csc.itrust.validate.HospitalBeanValidator:validate(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.beans.HospitalBean:getHospitalID()','(M)',0.18181818181818182,1),(3770,'edu.ncsu.csc.itrust.validate.HospitalBeanValidator:validate(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.validate.HospitalBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.25,1),(3771,'edu.ncsu.csc.itrust.validate.HospitalBeanValidator:validate(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.058823529411764705,1),(3772,'edu.ncsu.csc.itrust.validate.HospitalBeanValidator:validate(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.beans.HospitalBean:getHospitalName()','(M)',0.18181818181818182,1),(3773,'edu.ncsu.csc.itrust.validate.HospitalBeanValidator:validate(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.058823529411764705,1),(3774,'edu.ncsu.csc.itrust.validate.HospitalBeanValidator:validate(edu.ncsu.csc.itrust.beans.HospitalBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.058823529411764705,1),(3775,'edu.ncsu.csc.itrust.validate.HospitalBeanValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.HospitalBeanValidator:validate(edu.ncsu.csc.itrust.beans.HospitalBean)','(M)',0.5,1),(3776,'edu.ncsu.csc.itrust.validate.AdverseEventValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3777,'edu.ncsu.csc.itrust.validate.AdverseEventValidator:validate(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.06060606060606061,1),(3778,'edu.ncsu.csc.itrust.validate.AdverseEventValidator:validate(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.beans.AdverseEventBean:getDescription()','(M)',0.18181818181818182,1),(3779,'edu.ncsu.csc.itrust.validate.AdverseEventValidator:validate(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.validate.AdverseEventValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.2857142857142857,1),(3780,'edu.ncsu.csc.itrust.validate.AdverseEventValidator:validate(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.06060606060606061,1),(3781,'edu.ncsu.csc.itrust.validate.AdverseEventValidator:validate(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.06060606060606061,1),(3782,'edu.ncsu.csc.itrust.validate.AdverseEventValidator:validate(edu.ncsu.csc.itrust.beans.AdverseEventBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.06060606060606061,1),(3783,'edu.ncsu.csc.itrust.validate.AdverseEventValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.AdverseEventValidator:validate(edu.ncsu.csc.itrust.beans.AdverseEventBean)','(M)',0.6666666666666666,1),(3784,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3785,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.05,1),(3786,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getLabProcedureCode()','(M)',0.1111111111111111,1),(3787,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getComponent()','(M)',0.125,1),(3788,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getKindOfProperty()','(M)',0.125,1),(3789,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(java.lang.String[])','(O)',0.08695652173913043,1),(3790,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.validate.LOINCBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.14285714285714285,1),(3791,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.05,1),(3792,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getTimeAspect()','(M)',0.125,1),(3793,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getSystem()','(M)',0.125,1),(3794,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getScaleType()','(M)',0.125,1),(3795,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.beans.LOINCbean:getMethodType()','(M)',0.125,1),(3796,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.05,1),(3797,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.05,1),(3798,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)','(M)',0.5,1),(3799,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3800,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.05714285714285714,1),(3801,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getFirstName()','(M)',0.16666666666666666,1),(3802,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.validate.AddPersonnelValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.2222222222222222,1),(3803,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.05714285714285714,1),(3804,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getLastName()','(M)',0.15384615384615385,1),(3805,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.beans.PersonnelBean:getEmail()','(M)',0.125,1),(3806,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.05714285714285714,1),(3807,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.05714285714285714,1),(3808,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)','(M)',0.2857142857142857,1),(3809,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3810,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.05405405405405406,1),(3811,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getHcpID()','(M)',0.16666666666666666,1),(3812,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.18181818181818182,1),(3813,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.05405405405405406,1),(3814,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getHospitalID()','(M)',0.16666666666666666,1),(3815,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getNotes()','(M)',0.16666666666666666,1),(3816,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getPatientID()','(M)',0.16666666666666666,1),(3817,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getVisitDate()','(M)',0.16666666666666666,1),(3818,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.05405405405405406,1),(3819,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.05405405405405406,1),(3820,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)','(M)',0.6666666666666666,1),(3821,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3822,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.05714285714285714,1),(3823,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getName()','(M)',0.2,1),(3824,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.2222222222222222,1),(3825,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.05714285714285714,1),(3826,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getComment()','(M)',0.2,1),(3827,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getUrl()','(M)',0.2,1),(3828,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.05714285714285714,1),(3829,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.05714285714285714,1),(3830,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)','(M)',0.6666666666666666,1),(3831,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:<init>()','edu.ncsu.csc.itrust.validate.BeanValidator:<init>()','(O)',0.07407407407407407,1),(3832,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.exception.ErrorList:<init>()','(O)',0.05555555555555555,1),(3833,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(java.lang.String[])','(O)',0.10526315789473684,1),(3834,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.beans.SecurityQA:getConfirmAnswer()','(M)',0.2,1),(3835,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.beans.SecurityQA:getAnswer()','(M)',0.18181818181818182,1),(3836,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.beans.SecurityQA:getQuestion()','(M)',0.18181818181818182,1),(3837,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.validate.SecurityQAValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)','(M)',0.2,1),(3838,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)','(M)',0.05555555555555555,1),(3839,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()','(M)',0.05555555555555555,1),(3840,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(edu.ncsu.csc.itrust.beans.SecurityQA)','edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)','(O)',0.05555555555555555,1),(3841,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(java.lang.Object)','edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(edu.ncsu.csc.itrust.beans.SecurityQA)','(M)',0.6666666666666666,1);
/*!40000 ALTER TABLE `edge` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `edge_comment`
--

DROP TABLE IF EXISTS `edge_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `edge_comment` (
  `edge_id` int(11) NOT NULL,
  `comment_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `edge_comment`
--

LOCK TABLES `edge_comment` WRITE;
/*!40000 ALTER TABLE `edge_comment` DISABLE KEYS */;
/*!40000 ALTER TABLE `edge_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `friend`
--

DROP TABLE IF EXISTS `friend`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `friend` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userId` int(11) NOT NULL,
  `friendId` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `friend`
--

LOCK TABLES `friend` WRITE;
/*!40000 ALTER TABLE `friend` DISABLE KEYS */;
INSERT INTO `friend` VALUES (1,1,2),(2,1,3),(3,2,1),(4,3,1);
/*!40000 ALTER TABLE `friend` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `invitation`
--

DROP TABLE IF EXISTS `invitation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `invitation` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `from_username` varchar(30) NOT NULL,
  `to_user` int(11) NOT NULL,
  `team_id` int(11) NOT NULL,
  `team_name` varchar(30) NOT NULL,
  `state` tinyint(4) NOT NULL,
  `time` timestamp NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `invitation`
--

LOCK TABLES `invitation` WRITE;
/*!40000 ALTER TABLE `invitation` DISABLE KEYS */;
INSERT INTO `invitation` VALUES (1,'admin',2,1,'neuron group',1,'2020-05-01 15:16:17');
/*!40000 ALTER TABLE `invitation` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `message`
--

DROP TABLE IF EXISTS `message`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `message` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` varchar(500) NOT NULL,
  `from_user` int(11) NOT NULL,
  `to_user` int(11) NOT NULL,
  `state` int(11) NOT NULL,
  `time` timestamp NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `message`
--

LOCK TABLES `message` WRITE;
/*!40000 ALTER TABLE `message` DISABLE KEYS */;
INSERT INTO `message` VALUES (1,'Test sending message',1,2,1,'2020-05-01 15:16:17'),(2,'Test sending message2',2,1,1,'2020-05-01 15:17:17'),(3,'Test sending message3',2,1,1,'2020-05-01 15:18:17'),(4,'Test sending message4',1,2,1,'2020-05-01 15:19:17'),(5,'Test sending message5',1,2,1,'2020-05-01 15:19:18'),(6,'Test sending message6',1,2,1,'2020-05-01 18:16:17'),(7,'Test sending message7',2,1,1,'2020-05-02 15:16:17'),(8,'Test sending message8',1,2,1,'2020-05-03 15:16:17'),(9,'Test sending message9',1,2,1,'2020-05-04 15:16:17'),(10,'Test sending message10',1,2,0,'2020-05-05 15:16:17'),(11,'Test sending message11',1,2,0,'2020-05-06 15:16:17');
/*!40000 ALTER TABLE `message` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `node`
--

DROP TABLE IF EXISTS `node`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `node` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(350) NOT NULL,
  `project_id` int(11) NOT NULL,
  `x` double NOT NULL DEFAULT '0',
  `y` double NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1983 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `node`
--

LOCK TABLES `node` WRITE;
/*!40000 ALTER TABLE `node` DISABLE KEYS */;
INSERT INTO `node` VALUES (1,'edu.ncsu.csc.itrust.BeanBuilder:build(java.util.Map,java.lang.Object)',1,0,0),(2,'edu.ncsu.csc.itrust.BeanBuilder:checkOverloadedMethods(java.lang.Object)',1,0,0),(3,'edu.ncsu.csc.itrust.Localization:instance()',1,0,0),(4,'edu.ncsu.csc.itrust.Localization:<init>()',1,0,0),(5,'edu.ncsu.csc.itrust.EmailUtil:sendEmail(edu.ncsu.csc.itrust.beans.Email)',1,0,0),(6,'edu.ncsu.csc.itrust.dao.DAOFactory:getFakeEmailDAO()',1,0,0),(7,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:sendEmailRecord(edu.ncsu.csc.itrust.beans.Email)',1,0,0),(8,'edu.ncsu.csc.itrust.DateUtil:currentlyInMonthRange(int,int)',1,0,0),(9,'edu.ncsu.csc.itrust.DateUtil:isInMonthRange(java.util.Date,int,int)',1,0,0),(10,'edu.ncsu.csc.itrust.DateUtil:getSQLdateXyearsAgoFromNow(int)',1,0,0),(11,'edu.ncsu.csc.itrust.DateUtil:getDateXyearsAgoFromNow(int)',1,0,0),(12,'edu.ncsu.csc.itrust.DateUtil:getSQLdateXDaysAgoFromNow(int)',1,0,0),(13,'edu.ncsu.csc.itrust.DateUtil:getDateXDaysAgoFromNow(int)',1,0,0),(14,'edu.ncsu.csc.itrust.Messages:<clinit>()',1,0,0),(15,'edu.ncsu.csc.itrust.Localization:getCurrentLocale()',1,0,0),(16,'edu.ncsu.csc.itrust.DBUtil:canObtainProductionInstance()',1,0,0),(17,'edu.ncsu.csc.itrust.dao.DAOFactory:getProductionInstance()',1,0,0),(18,'edu.ncsu.csc.itrust.dao.DAOFactory:getConnection()',1,0,0),(19,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(20,'edu.ncsu.csc.itrust.dao.DAOFactory:getPersonnelDAO()',1,0,0),(21,'edu.ncsu.csc.itrust.dao.DAOFactory:getHospitalsDAO()',1,0,0),(22,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:getAvailableHospitals(java.lang.String)',1,0,0),(23,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:getAllHospitals()',1,0,0),(24,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getHospitals(long)',1,0,0),(25,'edu.ncsu.csc.itrust.exception.iTrustException:<init>(java.lang.String)',1,0,0),(26,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:getAssignedHospitals(java.lang.String)',1,0,0),(27,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:assignHCPToHospital(java.lang.String,java.lang.String)',1,0,0),(28,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:assignHospital(long,java.lang.String)',1,0,0),(29,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:removeHCPAssignmentToHospital(java.lang.String,java.lang.String)',1,0,0),(30,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:removeHospitalAssignment(long,java.lang.String)',1,0,0),(31,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:removeAllAssignmentsFromHCP(java.lang.String)',1,0,0),(32,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:removeAllHospitalAssignmentsFrom(long)',1,0,0),(33,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:checkHCPID(java.lang.String)',1,0,0),(34,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:checkPersonnelExists(long)',1,0,0),(35,'edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction:checkLTHospital(java.lang.String)',1,0,0),(36,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPersonnel(long)',1,0,0),(37,'edu.ncsu.csc.itrust.beans.PersonnelBean:getRole()',1,0,0),(38,'edu.ncsu.csc.itrust.enums.Role:toString()',1,0,0),(39,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:checkLTHasHospital(long)',1,0,0),(40,'edu.ncsu.csc.itrust.action.ViewMyApptsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(41,'edu.ncsu.csc.itrust.dao.DAOFactory:getApptDAO()',1,0,0),(42,'edu.ncsu.csc.itrust.dao.DAOFactory:getPatientDAO()',1,0,0),(43,'edu.ncsu.csc.itrust.action.ViewMyApptsAction:getMyAppointments()',1,0,0),(44,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:getApptsFor(long)',1,0,0),(45,'edu.ncsu.csc.itrust.action.ViewMyApptsAction:getAppointments(long)',1,0,0),(46,'edu.ncsu.csc.itrust.action.ViewMyApptsAction:getName(long)',1,0,0),(47,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getName(long)',1,0,0),(48,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getName(long)',1,0,0),(49,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(50,'edu.ncsu.csc.itrust.dao.DAOFactory:getReferralDAO()',1,0,0),(51,'edu.ncsu.csc.itrust.dao.DAOFactory:getOfficeVisitDAO()',1,0,0),(52,'edu.ncsu.csc.itrust.action.SendMessageAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(53,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getReferral(long)',1,0,0),(54,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferral(long)',1,0,0),(55,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:addReferral(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(56,'edu.ncsu.csc.itrust.beans.ReferralBean:getSenderID()',1,0,0),(57,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:addReferral(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(58,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCreatedMessages(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(59,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:editReferral(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(60,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:editReferral(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(61,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:deleteReferral(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(62,'edu.ncsu.csc.itrust.beans.ReferralBean:getId()',1,0,0),(63,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:removeReferral(long)',1,0,0),(64,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:sendReferralCancelledMessages(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(65,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getPatientName(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(66,'edu.ncsu.csc.itrust.beans.ReferralBean:getPatientID()',1,0,0),(67,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getReceivingHCPName(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(68,'edu.ncsu.csc.itrust.beans.ReferralBean:getReceiverID()',1,0,0),(69,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getReceivingHCPSpecialty(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(70,'edu.ncsu.csc.itrust.beans.PersonnelBean:getSpecialty()',1,0,0),(71,'edu.ncsu.csc.itrust.action.EditSingleReferralAction:getOfficeVisitDate(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(72,'edu.ncsu.csc.itrust.beans.ReferralBean:getOvid()',1,0,0),(73,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisit(long)',1,0,0),(74,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:getVisitDateStr()',1,0,0),(75,'edu.ncsu.csc.itrust.beans.ReferralBean:getReferralDetails()',1,0,0),(76,'edu.ncsu.csc.itrust.beans.ReferralBean:getTimeStamp()',1,0,0),(77,'edu.ncsu.csc.itrust.beans.MessageBean:<init>()',1,0,0),(78,'edu.ncsu.csc.itrust.beans.MessageBean:setFrom(long)',1,0,0),(79,'edu.ncsu.csc.itrust.beans.MessageBean:setTo(long)',1,0,0),(80,'edu.ncsu.csc.itrust.beans.MessageBean:setBody(java.lang.String)',1,0,0),(81,'edu.ncsu.csc.itrust.beans.MessageBean:setSubject(java.lang.String)',1,0,0),(82,'edu.ncsu.csc.itrust.beans.MessageBean:setRead(int)',1,0,0),(83,'edu.ncsu.csc.itrust.action.SendMessageAction:sendMessage(edu.ncsu.csc.itrust.beans.MessageBean)',1,0,0),(84,'edu.ncsu.csc.itrust.action.ChangeSessionTimeoutAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(85,'edu.ncsu.csc.itrust.dao.DAOFactory:getAccessDAO()',1,0,0),(86,'edu.ncsu.csc.itrust.action.ChangeSessionTimeoutAction:changeSessionTimeout(java.lang.String)',1,0,0),(87,'edu.ncsu.csc.itrust.exception.FormValidationException:<init>(java.lang.String[])',1,0,0),(88,'edu.ncsu.csc.itrust.dao.mysql.AccessDAO:setSessionTimeoutMins(int)',1,0,0),(89,'edu.ncsu.csc.itrust.action.ChangeSessionTimeoutAction:getSessionTimeout()',1,0,0),(90,'edu.ncsu.csc.itrust.dao.mysql.AccessDAO:getSessionTimeoutMins()',1,0,0),(91,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:<clinit>()',1,0,0),(92,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:<init>(java.lang.String,int,java.lang.String)',1,0,0),(93,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:values()',1,0,0),(94,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:getTypeName()',1,0,0),(95,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(96,'edu.ncsu.csc.itrust.dao.DAOFactory:getVisitRemindersDAO()',1,0,0),(97,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getVisitReminders(edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType)',1,0,0),(98,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:$SWITCH_TABLE$edu$ncsu$csc$itrust$action$GetVisitRemindersAction$ReminderType()',1,0,0),(99,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction$ReminderType:ordinal()',1,0,0),(100,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getDiagnosedVisitNeeders(long)',1,0,0),(101,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getFluShotDelinquents(long)',1,0,0),(102,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:getImmunizationNeeders(long)',1,0,0),(103,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:getPatients(long)',1,0,0),(104,'edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm:getPatientID()',1,0,0),(105,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:checkImmunizations(long)',1,0,0),(106,'edu.ncsu.csc.itrust.beans.VisitFlag:<init>(java.lang.String,java.lang.String)',1,0,0),(107,'edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm:addVisitFlag(edu.ncsu.csc.itrust.beans.VisitFlag)',1,0,0),(108,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getProcedures(long)',1,0,0),(109,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatient(long)',1,0,0),(110,'edu.ncsu.csc.itrust.beans.PatientBean:getDateOfBirth()',1,0,0),(111,'edu.ncsu.csc.itrust.beans.PatientBean:getGender()',1,0,0),(112,'edu.ncsu.csc.itrust.beans.ProcedureBean:getCPTCode()',1,0,0),(113,'edu.ncsu.csc.itrust.beans.ProcedureBean:getDate()',1,0,0),(114,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testHepB(int,java.util.Date,long)',1,0,0),(115,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testRotaVirus(int,java.util.Date,long)',1,0,0),(116,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testDipTet(int,java.util.Date,long)',1,0,0),(117,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testHaemoFlu(int,java.util.Date,long,long)',1,0,0),(118,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testPneumo(int,java.util.Date,long,long)',1,0,0),(119,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testPolio(int,java.util.Date,long)',1,0,0),(120,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testMeasles(int,java.util.Date,long)',1,0,0),(121,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testVaricella(int,java.util.Date,long)',1,0,0),(122,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testHepA(int,java.util.Date,long)',1,0,0),(123,'edu.ncsu.csc.itrust.enums.Gender:getName()',1,0,0),(124,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:testHPV(int,java.util.Date,long)',1,0,0),(125,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:olderThan(java.util.Date,int,int,int)',1,0,0),(126,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:firstDoseAfter(java.util.Date,java.util.Date,int,int,int)',1,0,0),(127,'edu.ncsu.csc.itrust.action.GetVisitRemindersAction:endBefore(java.util.Date,java.util.Date,int,int,int)',1,0,0),(128,'edu.ncsu.csc.itrust.action.AddERespAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(129,'edu.ncsu.csc.itrust.dao.DAOFactory:getAuthDAO()',1,0,0),(130,'edu.ncsu.csc.itrust.action.AddERespAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)',1,0,0),(131,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:<init>()',1,0,0),(132,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)',1,0,0),(133,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:addEmptyPersonnel(edu.ncsu.csc.itrust.enums.Role)',1,0,0),(134,'edu.ncsu.csc.itrust.beans.PersonnelBean:setMID(long)',1,0,0),(135,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:editPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean)',1,0,0),(136,'edu.ncsu.csc.itrust.RandomPassword:getRandomPassword()',1,0,0),(137,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:addUser(java.lang.Long,edu.ncsu.csc.itrust.enums.Role,java.lang.String)',1,0,0),(138,'edu.ncsu.csc.itrust.beans.PersonnelBean:setPassword(java.lang.String)',1,0,0),(139,'edu.ncsu.csc.itrust.action.ViewPersonnelAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(140,'edu.ncsu.csc.itrust.action.ViewPersonnelAction:getPersonnel(java.lang.String)',1,0,0),(141,'edu.ncsu.csc.itrust.Messages:getString(java.lang.String)',1,0,0),(142,'edu.ncsu.csc.itrust.action.ViewPersonnelAction:getEmailHistory()',1,0,0),(143,'edu.ncsu.csc.itrust.beans.PersonnelBean:getEmail()',1,0,0),(144,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getEmailsByPerson(java.lang.String)',1,0,0),(145,'edu.ncsu.csc.itrust.action.EditApptTypeAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(146,'edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:<init>()',1,0,0),(147,'edu.ncsu.csc.itrust.dao.DAOFactory:getApptTypeDAO()',1,0,0),(148,'edu.ncsu.csc.itrust.action.EditApptTypeAction:getApptTypes()',1,0,0),(149,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:getApptTypes()',1,0,0),(150,'edu.ncsu.csc.itrust.action.EditApptTypeAction:addApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)',1,0,0),(151,'edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptTypeBean)',1,0,0),(152,'edu.ncsu.csc.itrust.beans.ApptTypeBean:getName()',1,0,0),(153,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:addApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)',1,0,0),(154,'edu.ncsu.csc.itrust.beans.ApptTypeBean:getDuration()',1,0,0),(155,'edu.ncsu.csc.itrust.action.EditApptTypeAction:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)',1,0,0),(156,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:editApptType(edu.ncsu.csc.itrust.beans.ApptTypeBean)',1,0,0),(157,'edu.ncsu.csc.itrust.exception.DBException:printStackTrace()',1,0,0),(158,'edu.ncsu.csc.itrust.exception.DBException:getMessage()',1,0,0),(159,'edu.ncsu.csc.itrust.action.EditApptTypeAction:getDurationByType(java.lang.String)',1,0,0),(160,'edu.ncsu.csc.itrust.action.LabProcHCPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(161,'edu.ncsu.csc.itrust.action.LabProcUAPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(162,'edu.ncsu.csc.itrust.dao.DAOFactory:getLabProcedureDAO()',1,0,0),(163,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:<init>()',1,0,0),(164,'edu.ncsu.csc.itrust.action.LabProcHCPAction:sortByLOINC(long)',1,0,0),(165,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresLOINC(long)',1,0,0),(166,'edu.ncsu.csc.itrust.action.LabProcHCPAction:getLabProcForNextMonth()',1,0,0),(167,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForLHCP(long)',1,0,0),(168,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:getID()',1,0,0),(169,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForLHCPForNextMonth(long)',1,0,0),(170,'edu.ncsu.csc.itrust.action.LabProcHCPAction:changePrivacy(long)',1,0,0),(171,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedure(long)',1,0,0),(172,'edu.ncsu.csc.itrust.action.LabProcHCPAction:checkAccess(long)',1,0,0),(173,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getRights()',1,0,0),(174,'edu.ncsu.csc.itrust.beans.LabProcedureBean:allow()',1,0,0),(175,'edu.ncsu.csc.itrust.beans.LabProcedureBean:restrict()',1,0,0),(176,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(edu.ncsu.csc.itrust.beans.LabProcedureBean)',1,0,0),(177,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateRights(edu.ncsu.csc.itrust.beans.LabProcedureBean)',1,0,0),(178,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getOvID()',1,0,0),(179,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:getHcpID()',1,0,0),(180,'edu.ncsu.csc.itrust.action.LabProcHCPAction:getPendingCount()',1,0,0),(181,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getHCPPendingCount(long)',1,0,0),(182,'edu.ncsu.csc.itrust.action.LabProcHCPAction:viewProceduresByHCP()',1,0,0),(183,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getHCPLabProcedures(long)',1,0,0),(184,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(185,'edu.ncsu.csc.itrust.action.DeclareHCPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(186,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:makeHCPVisitBean(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String)',1,0,0),(187,'edu.ncsu.csc.itrust.beans.PersonnelBean:getMID()',1,0,0),(188,'edu.ncsu.csc.itrust.beans.HCPVisitBean:<init>()',1,0,0),(189,'edu.ncsu.csc.itrust.beans.HCPVisitBean:setHCPMID(long)',1,0,0),(190,'edu.ncsu.csc.itrust.beans.PersonnelBean:getFullName()',1,0,0),(191,'edu.ncsu.csc.itrust.beans.HCPVisitBean:setHCPName(java.lang.String)',1,0,0),(192,'edu.ncsu.csc.itrust.beans.HCPVisitBean:setOVDate(java.lang.String)',1,0,0),(193,'edu.ncsu.csc.itrust.beans.HCPVisitBean:setHCPSpecialty(java.lang.String)',1,0,0),(194,'edu.ncsu.csc.itrust.beans.PersonnelBean:getStreetAddress1()',1,0,0),(195,'edu.ncsu.csc.itrust.beans.PersonnelBean:getStreetAddress2()',1,0,0),(196,'edu.ncsu.csc.itrust.beans.PersonnelBean:getCity()',1,0,0),(197,'edu.ncsu.csc.itrust.beans.PersonnelBean:getState()',1,0,0),(198,'edu.ncsu.csc.itrust.beans.PersonnelBean:getZip()',1,0,0),(199,'edu.ncsu.csc.itrust.beans.HCPVisitBean:setHCPAddr(java.lang.String)',1,0,0),(200,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:checkDeclaredHCP(long,long)',1,0,0),(201,'edu.ncsu.csc.itrust.beans.HCPVisitBean:setDesignated(boolean)',1,0,0),(202,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:matchPersonnel(edu.ncsu.csc.itrust.beans.PersonnelBean,java.lang.String,java.lang.String,java.lang.String)',1,0,0),(203,'edu.ncsu.csc.itrust.beans.PersonnelBean:getLastName()',1,0,0),(204,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getAllVisitedHCPs(java.lang.String,java.lang.String,java.lang.String)',1,0,0),(205,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisits(long)',1,0,0),(206,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:getVisitDate()',1,0,0),(207,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDeclaredHCPs(long)',1,0,0),(208,'edu.ncsu.csc.itrust.beans.HCPVisitBean:getHCPMID()',1,0,0),(209,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getVisitedHCPs()',1,0,0),(210,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:getNamedHCP(java.lang.String)',1,0,0),(211,'edu.ncsu.csc.itrust.beans.HCPVisitBean:getHCPName()',1,0,0),(212,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:undeclareHCP(java.lang.String)',1,0,0),(213,'edu.ncsu.csc.itrust.action.DeclareHCPAction:undeclareHCP(java.lang.String)',1,0,0),(214,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:declareHCP(java.lang.String)',1,0,0),(215,'edu.ncsu.csc.itrust.action.DeclareHCPAction:declareHCP(java.lang.String)',1,0,0),(216,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getAllPersonnel()',1,0,0),(217,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:checkDeclared(long)',1,0,0),(218,'edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction:filterHCPList(java.lang.String,java.lang.String,java.lang.String)',1,0,0),(219,'edu.ncsu.csc.itrust.action.AddUAPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(220,'edu.ncsu.csc.itrust.action.AddUAPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)',1,0,0),(221,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(222,'edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:<init>()',1,0,0),(223,'edu.ncsu.csc.itrust.dao.DAOFactory:getICDCodesDAO()',1,0,0),(224,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)',1,0,0),(225,'edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:validate(edu.ncsu.csc.itrust.beans.DiagnosisBean)',1,0,0),(226,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:addICDCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)',1,0,0),(227,'edu.ncsu.csc.itrust.beans.DiagnosisBean:getICDCode()',1,0,0),(228,'edu.ncsu.csc.itrust.beans.DiagnosisBean:getDescription()',1,0,0),(229,'edu.ncsu.csc.itrust.exception.iTrustException:getMessage()',1,0,0),(230,'edu.ncsu.csc.itrust.action.UpdateICDCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.DiagnosisBean)',1,0,0),(231,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.DiagnosisBean)',1,0,0),(232,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(233,'edu.ncsu.csc.itrust.EmailUtil:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(234,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPatient(long)',1,0,0),(235,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getRepresentees()',1,0,0),(236,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresented(long)',1,0,0),(237,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescribingDoctor(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(238,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getPrescribingDoctor(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(239,'edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction:getPrescriptionsForPatient(long)',1,0,0),(240,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPrescriptions(long)',1,0,0),(241,'edu.ncsu.csc.itrust.beans.PatientBean:getEmail()',1,0,0),(242,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRepresenting(long)',1,0,0),(243,'edu.ncsu.csc.itrust.beans.PatientBean:getMID()',1,0,0),(244,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getUAPsForHCP(long)',1,0,0),(245,'edu.ncsu.csc.itrust.beans.Email:<init>()',1,0,0),(246,'edu.ncsu.csc.itrust.beans.Email:setToList(java.util.List)',1,0,0),(247,'edu.ncsu.csc.itrust.beans.Email:setFrom(java.lang.String)',1,0,0),(248,'edu.ncsu.csc.itrust.beans.Email:setSubject(java.lang.String)',1,0,0),(249,'edu.ncsu.csc.itrust.beans.Email:setBody(java.lang.String)',1,0,0),(250,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(251,'edu.ncsu.csc.itrust.validate.MedicationBeanValidator:<init>()',1,0,0),(252,'edu.ncsu.csc.itrust.dao.DAOFactory:getNDCodesDAO()',1,0,0),(253,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)',1,0,0),(254,'edu.ncsu.csc.itrust.validate.MedicationBeanValidator:validate(edu.ncsu.csc.itrust.beans.MedicationBean)',1,0,0),(255,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:addNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)',1,0,0),(256,'edu.ncsu.csc.itrust.beans.MedicationBean:getNDCode()',1,0,0),(257,'edu.ncsu.csc.itrust.beans.MedicationBean:getDescription()',1,0,0),(258,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.MedicationBean)',1,0,0),(259,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:updateCode(edu.ncsu.csc.itrust.beans.MedicationBean)',1,0,0),(260,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.MedicationBean)',1,0,0),(261,'edu.ncsu.csc.itrust.action.UpdateNDCodeListAction:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)',1,0,0),(262,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getNDCode(java.lang.String)',1,0,0),(263,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:removeNDCode(edu.ncsu.csc.itrust.beans.MedicationBean)',1,0,0),(264,'edu.ncsu.csc.itrust.action.AddOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)',1,0,0),(265,'edu.ncsu.csc.itrust.action.base.PatientBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)',1,0,0),(266,'edu.ncsu.csc.itrust.action.AddOfficeVisitAction:addEmptyOfficeVisit(long)',1,0,0),(267,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:<init>()',1,0,0),(268,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:setHcpID(long)',1,0,0),(269,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:setPatientID(long)',1,0,0),(270,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:add(edu.ncsu.csc.itrust.beans.OfficeVisitBean)',1,0,0),(271,'edu.ncsu.csc.itrust.action.AddOfficeVisitAction:getAllOfficeVisits()',1,0,0),(272,'edu.ncsu.csc.itrust.action.AddOfficeVisitAction:getUserName()',1,0,0),(273,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserName(long)',1,0,0),(274,'edu.ncsu.csc.itrust.dao.DAOFactory:getTransactionDAO()',1,0,0),(275,'edu.ncsu.csc.itrust.action.LabProcUAPAction:updateProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)',1,0,0),(276,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getStatus()',1,0,0),(277,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getProcedureID()',1,0,0),(278,'edu.ncsu.csc.itrust.action.LabProcUAPAction:makeEmail(edu.ncsu.csc.itrust.beans.LabProcedureBean)',1,0,0),(279,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:updateLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)',1,0,0),(280,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(281,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getPid()',1,0,0),(282,'edu.ncsu.csc.itrust.beans.PatientBean:getFullName()',1,0,0),(283,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getLoinc()',1,0,0),(284,'edu.ncsu.csc.itrust.action.LabProcUAPAction:viewProcedures(long)',1,0,0),(285,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresDate(long)',1,0,0),(286,'edu.ncsu.csc.itrust.action.LabProcUAPAction:viewPatientProcedures(long)',1,0,0),(287,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProcedures(long,long)',1,0,0),(288,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(289,'edu.ncsu.csc.itrust.dao.DAOFactory:getMessageDAO()',1,0,0),(290,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMyMessages()',1,0,0),(291,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFor(long)',1,0,0),(292,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMyMessagesTimeAscending()',1,0,0),(293,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesTimeAscending(long)',1,0,0),(294,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMyMessagesNameAscending()',1,0,0),(295,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesNameAscending(long)',1,0,0),(296,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMyMessagesNameDescending()',1,0,0),(297,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesNameDescending(long)',1,0,0),(298,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMySentMessages()',1,0,0),(299,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFrom(long)',1,0,0),(300,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMySentMessagesTimeAscending()',1,0,0),(301,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromTimeAscending(long)',1,0,0),(302,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMySentMessagesNameAscending()',1,0,0),(303,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromNameAscending(long)',1,0,0),(304,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getAllMySentMessagesNameDescending()',1,0,0),(305,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:getMessagesFromNameDescending(long)',1,0,0),(306,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:filterMessages(java.util.List,java.lang.String)',1,0,0),(307,'edu.ncsu.csc.itrust.beans.MessageBean:getFrom()',1,0,0),(308,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getName(long)',1,0,0),(309,'edu.ncsu.csc.itrust.beans.MessageBean:getSubject()',1,0,0),(310,'edu.ncsu.csc.itrust.beans.MessageBean:getBody()',1,0,0),(311,'edu.ncsu.csc.itrust.beans.MessageBean:getSentDate()',1,0,0),(312,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getPersonnelName(long)',1,0,0),(313,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:setRead(edu.ncsu.csc.itrust.beans.MessageBean)',1,0,0),(314,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:updateRead(edu.ncsu.csc.itrust.beans.MessageBean)',1,0,0),(315,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:getUnreadCount()',1,0,0),(316,'edu.ncsu.csc.itrust.beans.MessageBean:getRead()',1,0,0),(317,'edu.ncsu.csc.itrust.action.ViewMyMessagesAction:linkedToReferral(long)',1,0,0),(318,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:isReferralMessage(long)',1,0,0),(319,'edu.ncsu.csc.itrust.action.ViewAdverseEventAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(320,'edu.ncsu.csc.itrust.dao.DAOFactory:getAdverseEventDAO()',1,0,0),(321,'edu.ncsu.csc.itrust.action.ViewAdverseEventAction:getAdverseEvent(int)',1,0,0),(322,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getReport(int)',1,0,0),(323,'edu.ncsu.csc.itrust.action.ViewAdverseEventAction:getUnremovedAdverseEventsByCode(java.lang.String)',1,0,0),(324,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getUnremovedAdverseEventsByCode(java.lang.String)',1,0,0),(325,'edu.ncsu.csc.itrust.action.ViewAdverseEventAction:getNameForCode(java.lang.String)',1,0,0),(326,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getNameForCode(java.lang.String)',1,0,0),(327,'edu.ncsu.csc.itrust.action.AddApptAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(328,'edu.ncsu.csc.itrust.validate.ApptBeanValidator:<init>()',1,0,0),(329,'edu.ncsu.csc.itrust.action.AddApptAction:addAppt(edu.ncsu.csc.itrust.beans.ApptBean)',1,0,0),(330,'edu.ncsu.csc.itrust.validate.ApptBeanValidator:validate(edu.ncsu.csc.itrust.beans.ApptBean)',1,0,0),(331,'edu.ncsu.csc.itrust.beans.ApptBean:getDate()',1,0,0),(332,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:scheduleAppt(edu.ncsu.csc.itrust.beans.ApptBean)',1,0,0),(333,'edu.ncsu.csc.itrust.beans.ApptBean:getApptType()',1,0,0),(334,'edu.ncsu.csc.itrust.action.AddApptAction:getName(long)',1,0,0),(335,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)',1,0,0),(336,'edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)',1,0,0),(337,'edu.ncsu.csc.itrust.dao.DAOFactory:getProceduresDAO()',1,0,0),(338,'edu.ncsu.csc.itrust.dao.DAOFactory:getCPTCodesDAO()',1,0,0),(339,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(340,'edu.ncsu.csc.itrust.action.base.EditOfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(341,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:getImmunizations()',1,0,0),(342,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:isUnsaved()',1,0,0),(343,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:getOvID()',1,0,0),(344,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getImmunizationList(long)',1,0,0),(345,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:addImmunization(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(346,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:verifySaved()',1,0,0),(347,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:add(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(348,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:editImmunization(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(349,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:edit(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(350,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:deleteImmunization(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(351,'edu.ncsu.csc.itrust.beans.ProcedureBean:getOvProcedureID()',1,0,0),(352,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:remove(long)',1,0,0),(353,'edu.ncsu.csc.itrust.action.EditImmunizationsAction:getImmunizationCodes()',1,0,0),(354,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getImmunizationCPTCodes()',1,0,0),(355,'edu.ncsu.csc.itrust.action.EmergencyReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(356,'edu.ncsu.csc.itrust.dao.DAOFactory:getAllergyDAO()',1,0,0),(357,'edu.ncsu.csc.itrust.action.EmergencyReportAction:makeEmail()',1,0,0),(358,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getPatientName()',1,0,0),(359,'edu.ncsu.csc.itrust.beans.PatientBean:getFirstName()',1,0,0),(360,'edu.ncsu.csc.itrust.beans.PatientBean:getLastName()',1,0,0),(361,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getPatientAge()',1,0,0),(362,'edu.ncsu.csc.itrust.beans.PatientBean:getAge()',1,0,0),(363,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getPatientGender()',1,0,0),(364,'edu.ncsu.csc.itrust.enums.Gender:toString()',1,0,0),(365,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getPatientEmergencyContact()',1,0,0),(366,'edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyName()',1,0,0),(367,'edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone()',1,0,0),(368,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getBloodType()',1,0,0),(369,'edu.ncsu.csc.itrust.beans.PatientBean:getBloodType()',1,0,0),(370,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getAllergies()',1,0,0),(371,'edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:getAllergies(long)',1,0,0),(372,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getCurrentPrescriptions()',1,0,0),(373,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getCurrentPrescriptions(long)',1,0,0),(374,'edu.ncsu.csc.itrust.beans.PrescriptionBean:getMedication()',1,0,0),(375,'edu.ncsu.csc.itrust.enums.PrescriptionAlerts:isAlert(java.lang.String)',1,0,0),(376,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getWarningDiagnoses()',1,0,0),(377,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getDiagnoses(long)',1,0,0),(378,'edu.ncsu.csc.itrust.beans.DiagnosisBean:getVisitID()',1,0,0),(379,'edu.ncsu.csc.itrust.beans.DiagnosisBean:getClassification()',1,0,0),(380,'edu.ncsu.csc.itrust.action.EmergencyReportAction:getImmunizations()',1,0,0),(381,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getImmunizationProcedures(long)',1,0,0),(382,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(383,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getAccesses(java.lang.String,java.lang.String,java.lang.String,boolean)',1,0,0),(384,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getRepresented(long)',1,0,0),(385,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getAllRecordAccesses(long,long,boolean)',1,0,0),(386,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getRecordAccesses(long,long,java.util.Date,java.util.Date,boolean)',1,0,0),(387,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getDefaultStart(java.util.List)',1,0,0),(388,'edu.ncsu.csc.itrust.beans.TransactionBean:getTimeLogged()',1,0,0),(389,'edu.ncsu.csc.itrust.action.ViewMyAccessLogAction:getDefaultEnd(java.util.List)',1,0,0),(390,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(391,'edu.ncsu.csc.itrust.dao.DAOFactory:getRemoteMonitoringDAO()',1,0,0),(392,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getPatientsData()',1,0,0),(393,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientsData(long)',1,0,0),(394,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getPatientDataByDate(long,java.lang.String,java.lang.String)',1,0,0),(395,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientDataByDate(long,java.util.Date,java.util.Date)',1,0,0),(396,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getPatientDataByType(long,java.lang.String)',1,0,0),(397,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getPatientDataByType(long,java.lang.String)',1,0,0),(398,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getPatientDataWithoutLogging()',1,0,0),(399,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getPatientName(long)',1,0,0),(400,'edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction:getMonitoringHCPs()',1,0,0),(401,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getMonitoringHCPs(long)',1,0,0),(402,'edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,long)',1,0,0),(403,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:<init>()',1,0,0),(404,'edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction:getTelemedicineBean(long)',1,0,0),(405,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getTelemedicineBean(long)',1,0,0),(406,'edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction:addRemoteMonitoringData(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)',1,0,0),(407,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)',1,0,0),(408,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getUserRole(long)',1,0,0),(409,'edu.ncsu.csc.itrust.enums.Role:getUserRolesString()',1,0,0),(410,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:storePatientData(long,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean,java.lang.String,long)',1,0,0),(411,'edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction:getPatientName(long)',1,0,0),(412,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(413,'edu.ncsu.csc.itrust.dao.DAOFactory:getDiagnosesDAO()',1,0,0),(414,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getDiagnosisCodes()',1,0,0),(415,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getAllICDCodes()',1,0,0),(416,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getDiagnosisStatistics(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',1,0,0),(417,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getDiagnosisCounts(java.lang.String,java.lang.String,java.util.Date,java.util.Date)',1,0,0),(418,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:getEpidemicStatistics(java.lang.String,java.lang.String,java.lang.String)',1,0,0),(419,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getCountForWeekOf(java.lang.String,java.lang.String,java.util.Date)',1,0,0),(420,'edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:<init>(java.lang.String,long,long,java.util.Date,java.util.Date)',1,0,0),(421,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:findEarliestIncident(java.lang.String)',1,0,0),(422,'edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:getZipStats()',1,0,0),(423,'edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:getRegionStats()',1,0,0),(424,'edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:setRegionStats(long)',1,0,0),(425,'edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:setZipStats(long)',1,0,0),(426,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:isFluEpidemic(java.lang.String,java.lang.String)',1,0,0),(427,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:calcThreshold(double)',1,0,0),(428,'edu.ncsu.csc.itrust.action.ViewDiagnosisStatisticsAction:isMalariaEpidemic(java.lang.String,java.lang.String,java.lang.String)',1,0,0),(429,'edu.ncsu.csc.itrust.action.AddPatientAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(430,'edu.ncsu.csc.itrust.action.AddPatientAction:addPatient(edu.ncsu.csc.itrust.beans.PatientBean)',1,0,0),(431,'edu.ncsu.csc.itrust.validate.AddPatientValidator:<init>()',1,0,0),(432,'edu.ncsu.csc.itrust.validate.AddPatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)',1,0,0),(433,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addEmptyPatient()',1,0,0),(434,'edu.ncsu.csc.itrust.beans.PatientBean:setMID(long)',1,0,0),(435,'edu.ncsu.csc.itrust.beans.PatientBean:setPassword(java.lang.String)',1,0,0),(436,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:editPatient(edu.ncsu.csc.itrust.beans.PatientBean,long)',1,0,0),(437,'edu.ncsu.csc.itrust.validate.EMailValidator:<init>()',1,0,0),(438,'edu.ncsu.csc.itrust.validate.MessageValidator:<init>()',1,0,0),(439,'edu.ncsu.csc.itrust.validate.MessageValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)',1,0,0),(440,'edu.ncsu.csc.itrust.validate.EMailValidator:validate(edu.ncsu.csc.itrust.beans.MessageBean)',1,0,0),(441,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:addMessage(edu.ncsu.csc.itrust.beans.MessageBean)',1,0,0),(442,'edu.ncsu.csc.itrust.beans.MessageBean:getTo()',1,0,0),(443,'edu.ncsu.csc.itrust.action.SendMessageAction:getPatientName(long)',1,0,0),(444,'edu.ncsu.csc.itrust.action.SendMessageAction:getPersonnelName(long)',1,0,0),(445,'edu.ncsu.csc.itrust.action.SendMessageAction:getMyRepresentees()',1,0,0),(446,'edu.ncsu.csc.itrust.action.SendMessageAction:getMyDLHCPs()',1,0,0),(447,'edu.ncsu.csc.itrust.action.SendMessageAction:getDLHCPsFor(long)',1,0,0),(448,'edu.ncsu.csc.itrust.action.EditPatientAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(449,'edu.ncsu.csc.itrust.validate.PatientValidator:<init>()',1,0,0),(450,'edu.ncsu.csc.itrust.action.EditPatientAction:updateInformation(edu.ncsu.csc.itrust.beans.PatientBean)',1,0,0),(451,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(edu.ncsu.csc.itrust.beans.PatientBean)',1,0,0),(452,'edu.ncsu.csc.itrust.action.EditPatientAction:makeEmail()',1,0,0),(453,'edu.ncsu.csc.itrust.action.EditPatientAction:getPatient()',1,0,0),(454,'edu.ncsu.csc.itrust.action.EditPatientAction:getPid()',1,0,0),(455,'edu.ncsu.csc.itrust.action.EditPatientAction:editMessageFilter(java.lang.String)',1,0,0),(456,'edu.ncsu.csc.itrust.beans.PatientBean:setMessageFilter(java.lang.String)',1,0,0),(457,'edu.ncsu.csc.itrust.action.EditPatientAction:hasHistory()',1,0,0),(458,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:hasHistory(long)',1,0,0),(459,'edu.ncsu.csc.itrust.action.EditPatientAction:getHistory()',1,0,0),(460,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getPatientHistory(long)',1,0,0),(461,'edu.ncsu.csc.itrust.action.EditPatientAction:getEmployeeName(long)',1,0,0),(462,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(463,'edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:<init>()',1,0,0),(464,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(465,'edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:validate(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(466,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:addCPTCode(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(467,'edu.ncsu.csc.itrust.beans.ProcedureBean:getDescription()',1,0,0),(468,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(469,'edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction:updateCode(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(470,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(471,'edu.ncsu.csc.itrust.action.ViewPrescriptionRenewalNeedsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(472,'edu.ncsu.csc.itrust.action.ViewPrescriptionRenewalNeedsAction:getRenewalNeedsPatients()',1,0,0),(473,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRenewalNeedsPatients(long)',1,0,0),(474,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(475,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:getReferrals(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)',1,0,0),(476,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getSenderQuery(long)',1,0,0),(477,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:query(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)',1,0,0),(478,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:getReferral(long)',1,0,0),(479,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:getPatientName(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(480,'edu.ncsu.csc.itrust.action.ViewSentReferralsAction:getReceivingHCPName(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(481,'edu.ncsu.csc.itrust.action.AddHCPAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(482,'edu.ncsu.csc.itrust.action.AddHCPAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)',1,0,0),(483,'edu.ncsu.csc.itrust.action.ViewMyLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(484,'edu.ncsu.csc.itrust.action.ViewMyLabProceduresAction:getLabProcedures()',1,0,0),(485,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatient(long)',1,0,0),(486,'edu.ncsu.csc.itrust.action.ViewMyLabProceduresAction:getUnviewedCount()',1,0,0),(487,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getPatientUnviewedCount(long)',1,0,0),(488,'edu.ncsu.csc.itrust.action.EventLoggingAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(489,'edu.ncsu.csc.itrust.action.EventLoggingAction:logEvent(edu.ncsu.csc.itrust.enums.TransactionType,long,long,java.lang.String)',1,0,0),(490,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:logTransaction(edu.ncsu.csc.itrust.enums.TransactionType,long,long,java.lang.String)',1,0,0),(491,'edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(492,'edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction:getReferralsForReceivingHCP()',1,0,0),(493,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForReceivingHCP(long)',1,0,0),(494,'edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction:getReferralsForReceivingHCPUnread()',1,0,0),(495,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForReceivingHCPUnread(long)',1,0,0),(496,'edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction:getReferralByID(int)',1,0,0),(497,'edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction:updateReferral(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(498,'edu.ncsu.csc.itrust.action.ViewReceivingReferralsAction:getOVDate(long)',1,0,0),(499,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(500,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)',1,0,0),(501,'edu.ncsu.csc.itrust.validate.HospitalBeanValidator:<init>()',1,0,0),(502,'edu.ncsu.csc.itrust.validate.HospitalBeanValidator:validate(edu.ncsu.csc.itrust.beans.HospitalBean)',1,0,0),(503,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:addHospital(edu.ncsu.csc.itrust.beans.HospitalBean)',1,0,0),(504,'edu.ncsu.csc.itrust.beans.HospitalBean:getHospitalID()',1,0,0),(505,'edu.ncsu.csc.itrust.beans.HospitalBean:getHospitalName()',1,0,0),(506,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:updateInformation(edu.ncsu.csc.itrust.beans.HospitalBean)',1,0,0),(507,'edu.ncsu.csc.itrust.action.UpdateHospitalListAction:updateHospital(edu.ncsu.csc.itrust.beans.HospitalBean)',1,0,0),(508,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:updateHospital(edu.ncsu.csc.itrust.beans.HospitalBean)',1,0,0),(509,'edu.ncsu.csc.itrust.action.AddLTAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(510,'edu.ncsu.csc.itrust.action.AddLTAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)',1,0,0),(511,'edu.ncsu.csc.itrust.action.LabProcLTAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(512,'edu.ncsu.csc.itrust.action.LabProcLTAction:viewInTransitProcedures(long)',1,0,0),(513,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresInTransitForLabTech(long)',1,0,0),(514,'edu.ncsu.csc.itrust.action.LabProcLTAction:viewReceivedProcedures(long)',1,0,0),(515,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresReceivedForLabTech(long)',1,0,0),(516,'edu.ncsu.csc.itrust.action.LabProcLTAction:viewTestingProcedures(long)',1,0,0),(517,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresTestingForLabTech(long)',1,0,0),(518,'edu.ncsu.csc.itrust.action.LabProcLTAction:getLabProcedure(long)',1,0,0),(519,'edu.ncsu.csc.itrust.action.LabProcLTAction:getHCPName(long)',1,0,0),(520,'edu.ncsu.csc.itrust.action.LabProcLTAction:submitResults(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',1,0,0),(521,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setNumericalResult(java.lang.String)',1,0,0),(522,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setNumericalResultUnit(java.lang.String)',1,0,0),(523,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setUpperBound(java.lang.String)',1,0,0),(524,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setLowerBound(java.lang.String)',1,0,0),(525,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:submitTestResults(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',1,0,0),(526,'edu.ncsu.csc.itrust.action.LabProcLTAction:submitReceived(java.lang.String)',1,0,0),(527,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:submitReceivedLP(long)',1,0,0),(528,'edu.ncsu.csc.itrust.action.LabProcLTAction:setToTesting(long)',1,0,0),(529,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:setLPToTesting(long)',1,0,0),(530,'edu.ncsu.csc.itrust.action.EditMonitoringListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(531,'edu.ncsu.csc.itrust.action.EditMonitoringListAction:addToList(long,edu.ncsu.csc.itrust.beans.TelemedicineBean)',1,0,0),(532,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:addPatientToList(long,long,edu.ncsu.csc.itrust.beans.TelemedicineBean)',1,0,0),(533,'edu.ncsu.csc.itrust.action.EditMonitoringListAction:removeFromList(long)',1,0,0),(534,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:removePatientFromList(long,long)',1,0,0),(535,'edu.ncsu.csc.itrust.action.EditMonitoringListAction:isPatientInList(long)',1,0,0),(536,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getPatientMID()',1,0,0),(537,'edu.ncsu.csc.itrust.action.EditMonitoringListAction:getPatientName(long)',1,0,0),(538,'edu.ncsu.csc.itrust.action.SurveyAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(539,'edu.ncsu.csc.itrust.dao.DAOFactory:getSurveyDAO()',1,0,0),(540,'edu.ncsu.csc.itrust.action.SurveyAction:addSurvey(edu.ncsu.csc.itrust.beans.SurveyBean,long)',1,0,0),(541,'edu.ncsu.csc.itrust.beans.SurveyBean:setVisitID(long)',1,0,0),(542,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:addCompletedSurvey(edu.ncsu.csc.itrust.beans.SurveyBean,java.util.Date)',1,0,0),(543,'edu.ncsu.csc.itrust.action.SurveyAction:getPatientMID(long)',1,0,0),(544,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:getPatientID()',1,0,0),(545,'edu.ncsu.csc.itrust.action.AddDrugListAction$OverwriteDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)',1,0,0),(546,'edu.ncsu.csc.itrust.beans.MedicationBean:<init>()',1,0,0),(547,'edu.ncsu.csc.itrust.beans.MedicationBean:setNDCode(java.lang.String)',1,0,0),(548,'edu.ncsu.csc.itrust.beans.MedicationBean:setDescription(java.lang.String)',1,0,0),(549,'edu.ncsu.csc.itrust.action.AddDrugListAction$SkipDuplicateDrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)',1,0,0),(550,'edu.ncsu.csc.itrust.action.AddDrugListAction:LoadFile(java.io.InputStream)',1,0,0),(551,'edu.ncsu.csc.itrust.action.AddDrugListAction$DrugStrategy:LoadFile(java.io.InputStream,edu.ncsu.csc.itrust.dao.DAOFactory,edu.ncsu.csc.itrust.action.EventLoggingAction,long)',1,0,0),(552,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(553,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:<init>()',1,0,0),(554,'edu.ncsu.csc.itrust.dao.DAOFactory:getLOINCDAO()',1,0,0),(555,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:add(edu.ncsu.csc.itrust.beans.LOINCbean)',1,0,0),(556,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(edu.ncsu.csc.itrust.beans.LOINCbean)',1,0,0),(557,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:getAllLOINC()',1,0,0),(558,'edu.ncsu.csc.itrust.beans.LOINCbean:getLabProcedureCode()',1,0,0),(559,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:addLOINC(edu.ncsu.csc.itrust.beans.LOINCbean)',1,0,0),(560,'edu.ncsu.csc.itrust.action.UpdateLOINCListAction:updateInformation(edu.ncsu.csc.itrust.beans.LOINCbean)',1,0,0),(561,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:update(edu.ncsu.csc.itrust.beans.LOINCbean)',1,0,0),(562,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(563,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:processOfficeVisits()',1,0,0),(564,'edu.ncsu.csc.itrust.beans.PatientVisitBean:<init>()',1,0,0),(565,'edu.ncsu.csc.itrust.beans.PatientVisitBean:setPatient(edu.ncsu.csc.itrust.beans.PatientBean)',1,0,0),(566,'edu.ncsu.csc.itrust.beans.PatientVisitBean:setPatientName(java.lang.String)',1,0,0),(567,'edu.ncsu.csc.itrust.beans.PatientVisitBean:setLastOVDateM(java.lang.String)',1,0,0),(568,'edu.ncsu.csc.itrust.beans.PatientVisitBean:setLastOVDateD(java.lang.String)',1,0,0),(569,'edu.ncsu.csc.itrust.beans.PatientVisitBean:setLastOVDateY(java.lang.String)',1,0,0),(570,'edu.ncsu.csc.itrust.beans.PatientVisitBean:setLastOVDate(java.lang.String)',1,0,0),(571,'edu.ncsu.csc.itrust.beans.PatientBean:getStreetAddress1()',1,0,0),(572,'edu.ncsu.csc.itrust.beans.PatientBean:getStreetAddress2()',1,0,0),(573,'edu.ncsu.csc.itrust.beans.PatientVisitBean:setAddress1(java.lang.String)',1,0,0),(574,'edu.ncsu.csc.itrust.beans.PatientBean:getCity()',1,0,0),(575,'edu.ncsu.csc.itrust.beans.PatientBean:getState()',1,0,0),(576,'edu.ncsu.csc.itrust.beans.PatientBean:getZip()',1,0,0),(577,'edu.ncsu.csc.itrust.beans.PatientVisitBean:setAddress2(java.lang.String)',1,0,0),(578,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:PatientInList(edu.ncsu.csc.itrust.beans.PatientBean,java.lang.String)',1,0,0),(579,'edu.ncsu.csc.itrust.beans.PatientVisitBean:getPatientName()',1,0,0),(580,'edu.ncsu.csc.itrust.beans.PatientVisitBean:getLastOVDateY()',1,0,0),(581,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:getPatients()',1,0,0),(582,'edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction:getPersonnel()',1,0,0),(583,'edu.ncsu.csc.itrust.action.EditReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)',1,0,0),(584,'edu.ncsu.csc.itrust.action.EditReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(585,'edu.ncsu.csc.itrust.action.EditReferralsAction:getReferrals()',1,0,0),(586,'edu.ncsu.csc.itrust.action.EditReferralsAction:isUnsaved()',1,0,0),(587,'edu.ncsu.csc.itrust.action.EditReferralsAction:getOvID()',1,0,0),(588,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsFromOV(long)',1,0,0),(589,'edu.ncsu.csc.itrust.action.EditReferralsAction:getReferral(long)',1,0,0),(590,'edu.ncsu.csc.itrust.action.EditReferralsAction:getPatientName(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(591,'edu.ncsu.csc.itrust.action.EditReferralsAction:getReceivingHCPName(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(592,'edu.ncsu.csc.itrust.action.ChronicDiseaseRiskAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(593,'edu.ncsu.csc.itrust.risk.ChronicDiseaseMediator:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(594,'edu.ncsu.csc.itrust.action.ChronicDiseaseRiskAction:getUserName()',1,0,0),(595,'edu.ncsu.csc.itrust.action.ChronicDiseaseRiskAction:getDiseasesAtRisk()',1,0,0),(596,'edu.ncsu.csc.itrust.risk.ChronicDiseaseMediator:getDiseaseAtRisk()',1,0,0),(597,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)',1,0,0),(598,'edu.ncsu.csc.itrust.dao.DAOFactory:getPrescriptionsDAO()',1,0,0),(599,'edu.ncsu.csc.itrust.dao.DAOFactory:getDrugInteractionDAO()',1,0,0),(600,'edu.ncsu.csc.itrust.dao.DAOFactory:getPrescriptionReportDAO()',1,0,0),(601,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(602,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:check(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(603,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkInteraction(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(604,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:checkAllergy(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(605,'edu.ncsu.csc.itrust.exception.PrescriptionWarningException:<init>(java.util.List)',1,0,0),(606,'edu.ncsu.csc.itrust.beans.PrescriptionBean:getInstructions()',1,0,0),(607,'edu.ncsu.csc.itrust.exception.PrescriptionFieldException:<init>(java.lang.String)',1,0,0),(608,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:validOverride(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(609,'edu.ncsu.csc.itrust.beans.PrescriptionBean:getReason()',1,0,0),(610,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:interactionWarning(edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.PrescriptionBean,edu.ncsu.csc.itrust.beans.DrugInteractionBean)',1,0,0),(611,'edu.ncsu.csc.itrust.beans.PrescriptionBean:getStartDate()',1,0,0),(612,'edu.ncsu.csc.itrust.beans.PrescriptionBean:getEndDate()',1,0,0),(613,'edu.ncsu.csc.itrust.beans.DrugInteractionBean:getDescription()',1,0,0),(614,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:allergyWarning(edu.ncsu.csc.itrust.beans.AllergyBean)',1,0,0),(615,'edu.ncsu.csc.itrust.beans.AllergyBean:getDescription()',1,0,0),(616,'edu.ncsu.csc.itrust.beans.AllergyBean:getFirstFound()',1,0,0),(617,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:getPid()',1,0,0),(618,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byDate(long,java.lang.String,java.lang.String)',1,0,0),(619,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:getInteractions(java.lang.String)',1,0,0),(620,'edu.ncsu.csc.itrust.beans.PrescriptionReportBean:getPrescription()',1,0,0),(621,'edu.ncsu.csc.itrust.beans.DrugInteractionBean:getFirstDrug()',1,0,0),(622,'edu.ncsu.csc.itrust.beans.DrugInteractionBean:getSecondDrug()',1,0,0),(623,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:editPrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(624,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:verifySaved()',1,0,0),(625,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:edit(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(626,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:getPrescriptions()',1,0,0),(627,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:isUnsaved()',1,0,0),(628,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:getOvID()',1,0,0),(629,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:getList(long)',1,0,0),(630,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:addPrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(631,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:add(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(632,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:deletePrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(633,'edu.ncsu.csc.itrust.beans.PrescriptionBean:getId()',1,0,0),(634,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:remove(long)',1,0,0),(635,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:getMedications()',1,0,0),(636,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:getAllNDCodes()',1,0,0),(637,'edu.ncsu.csc.itrust.action.EditPrescriptionsAction:formToBean(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm,java.lang.String)',1,0,0),(638,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:<init>(java.lang.String)',1,0,0),(639,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm)',1,0,0),(640,'edu.ncsu.csc.itrust.beans.PrescriptionBean:<init>()',1,0,0),(641,'edu.ncsu.csc.itrust.beans.PrescriptionBean:setVisitID(long)',1,0,0),(642,'edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getMedID()',1,0,0),(643,'edu.ncsu.csc.itrust.beans.PrescriptionBean:setMedication(edu.ncsu.csc.itrust.beans.MedicationBean)',1,0,0),(644,'edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getDosage()',1,0,0),(645,'edu.ncsu.csc.itrust.beans.PrescriptionBean:setDosage(int)',1,0,0),(646,'edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getStartDate()',1,0,0),(647,'edu.ncsu.csc.itrust.beans.PrescriptionBean:setStartDateStr(java.lang.String)',1,0,0),(648,'edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getEndDate()',1,0,0),(649,'edu.ncsu.csc.itrust.beans.PrescriptionBean:setEndDateStr(java.lang.String)',1,0,0),(650,'edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getInstructions()',1,0,0),(651,'edu.ncsu.csc.itrust.beans.PrescriptionBean:setInstructions(java.lang.String)',1,0,0),(652,'edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getOverrideCode()',1,0,0),(653,'edu.ncsu.csc.itrust.beans.PrescriptionBean:setReason(java.lang.String)',1,0,0),(654,'edu.ncsu.csc.itrust.beans.forms.EditPrescriptionsForm:getOverrideComment()',1,0,0),(655,'edu.ncsu.csc.itrust.beans.PrescriptionBean:setOverrideComment(java.lang.String)',1,0,0),(656,'edu.ncsu.csc.itrust.action.LoginFailureAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)',1,0,0),(657,'edu.ncsu.csc.itrust.action.LoginFailureAction:recordLoginFailure()',1,0,0),(658,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:recordLoginFailure(java.lang.String)',1,0,0),(659,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getLoginFailures(java.lang.String)',1,0,0),(660,'edu.ncsu.csc.itrust.action.LoginFailureAction:isValidForLogin()',1,0,0),(661,'edu.ncsu.csc.itrust.action.LoginFailureAction:needsCaptcha()',1,0,0),(662,'edu.ncsu.csc.itrust.action.LoginFailureAction:resetFailures()',1,0,0),(663,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:resetLoginFailuresToZero(java.lang.String)',1,0,0),(664,'edu.ncsu.csc.itrust.action.LoginFailureAction:getFailureCount()',1,0,0),(665,'edu.ncsu.csc.itrust.action.AddPHAAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(666,'edu.ncsu.csc.itrust.action.AddPHAAction:add(edu.ncsu.csc.itrust.beans.PersonnelBean)',1,0,0),(667,'edu.ncsu.csc.itrust.action.ActivityFeedAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(668,'edu.ncsu.csc.itrust.action.ActivityFeedAction:getTransactions(java.util.Date,int)',1,0,0),(669,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getTransactionsAffecting(long,long,java.util.Date,int)',1,0,0),(670,'edu.ncsu.csc.itrust.action.ActivityFeedAction:getMessageAsSentence(java.lang.String,java.sql.Timestamp,edu.ncsu.csc.itrust.enums.TransactionType)',1,0,0),(671,'edu.ncsu.csc.itrust.enums.TransactionType:values()',1,0,0),(672,'edu.ncsu.csc.itrust.enums.TransactionType:getCode()',1,0,0),(673,'edu.ncsu.csc.itrust.enums.TransactionType:isPatientViewable()',1,0,0),(674,'edu.ncsu.csc.itrust.enums.TransactionType:getActionPhrase()',1,0,0),(675,'edu.ncsu.csc.itrust.action.ActivityFeedAction:recent(java.util.Date)',1,0,0),(676,'edu.ncsu.csc.itrust.action.ActivityFeedAction:replaceNameWithYou(java.lang.String)',1,0,0),(677,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(678,'edu.ncsu.csc.itrust.dao.DAOFactory:getFamilyDAO()',1,0,0),(679,'edu.ncsu.csc.itrust.dao.DAOFactory:getHealthRecordsDAO()',1,0,0),(680,'edu.ncsu.csc.itrust.dao.DAOFactory:getReportRequestDAO()',1,0,0),(681,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getProcedureName(java.lang.String)',1,0,0),(682,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:getProcedures(java.lang.String)',1,0,0),(683,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:representPatient(java.lang.String)',1,0,0),(684,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:represents(long,long)',1,0,0),(685,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getPatient()',1,0,0),(686,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getPatient(long)',1,0,0),(687,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getPersonnel(long)',1,0,0),(688,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getEmailHistory()',1,0,0),(689,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getAllergies()',1,0,0),(690,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamily()',1,0,0),(691,'edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getParents(long)',1,0,0),(692,'edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getSiblings(long)',1,0,0),(693,'edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getChildren(long)',1,0,0),(694,'edu.ncsu.csc.itrust.beans.FamilyMemberBean:getMid()',1,0,0),(695,'edu.ncsu.csc.itrust.beans.FamilyMemberBean:setRelation(java.lang.String)',1,0,0),(696,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyHistory()',1,0,0),(697,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getAllHealthRecords()',1,0,0),(698,'edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:getAllHealthRecords(long)',1,0,0),(699,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyHealthRecords(long)',1,0,0),(700,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getAllOfficeVisits()',1,0,0),(701,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getCompleteOfficeVisit(long)',1,0,0),(702,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getProcedures(long)',1,0,0),(703,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getList(long)',1,0,0),(704,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getRepresented()',1,0,0),(705,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getRepresenting()',1,0,0),(706,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:isSurveyCompleted(long)',1,0,0),(707,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:isSurveyCompleted(long)',1,0,0),(708,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getLabs()',1,0,0),(709,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getSpecificLabs(long,java.lang.String)',1,0,0),(710,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresLOINC(long,java.lang.String)',1,0,0),(711,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:setViewed(java.util.List)',1,0,0),(712,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setViewedByPatient(boolean)',1,0,0),(713,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:markViewed(edu.ncsu.csc.itrust.beans.LabProcedureBean)',1,0,0),(714,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getReportRequests()',1,0,0),(715,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getAllReportRequestsForPatient(long)',1,0,0),(716,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHighBP(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(717,'edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureSystolic()',1,0,0),(718,'edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureDiastolic()',1,0,0),(719,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHighCholesterol(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(720,'edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolHDL()',1,0,0),(721,'edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolLDL()',1,0,0),(722,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveDiabetes(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(723,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveCancer(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(724,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:doesFamilyMemberHaveHeartDisease(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(725,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:isFamilyMemberSmoker(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(726,'edu.ncsu.csc.itrust.beans.HealthRecord:isSmoker()',1,0,0),(727,'edu.ncsu.csc.itrust.action.ViewMyRecordsAction:getFamilyMemberCOD(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(728,'edu.ncsu.csc.itrust.beans.PatientBean:getCauseOfDeath()',1,0,0),(729,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:getICDCode(java.lang.String)',1,0,0),(730,'edu.ncsu.csc.itrust.action.DrugInteractionAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(731,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:<init>()',1,0,0),(732,'edu.ncsu.csc.itrust.action.DrugInteractionAction:reportInteraction(java.lang.String,java.lang.String,java.lang.String)',1,0,0),(733,'edu.ncsu.csc.itrust.beans.DrugInteractionBean:<init>()',1,0,0),(734,'edu.ncsu.csc.itrust.beans.DrugInteractionBean:setFirstDrug(java.lang.String)',1,0,0),(735,'edu.ncsu.csc.itrust.beans.DrugInteractionBean:setSecondDrug(java.lang.String)',1,0,0),(736,'edu.ncsu.csc.itrust.beans.DrugInteractionBean:setDescription(java.lang.String)',1,0,0),(737,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(edu.ncsu.csc.itrust.beans.DrugInteractionBean)',1,0,0),(738,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:reportInteraction(java.lang.String,java.lang.String,java.lang.String)',1,0,0),(739,'edu.ncsu.csc.itrust.action.DrugInteractionAction:deleteInteraction(java.lang.String,java.lang.String)',1,0,0),(740,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:deleteInteraction(java.lang.String,java.lang.String)',1,0,0),(741,'edu.ncsu.csc.itrust.action.DrugInteractionAction:getInteractions(java.lang.String)',1,0,0),(742,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:<init>(java.lang.String,edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(743,'edu.ncsu.csc.itrust.validate.AdverseEventValidator:<init>()',1,0,0),(744,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(745,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMails(java.util.List)',1,0,0),(746,'edu.ncsu.csc.itrust.beans.AdverseEventBean:getMID()',1,0,0),(747,'edu.ncsu.csc.itrust.beans.AdverseEventBean:getDrug()',1,0,0),(748,'edu.ncsu.csc.itrust.beans.AdverseEventBean:getCode()',1,0,0),(749,'edu.ncsu.csc.itrust.beans.AdverseEventBean:getDescription()',1,0,0),(750,'edu.ncsu.csc.itrust.beans.AdverseEventBean:setDescription(java.lang.String)',1,0,0),(751,'edu.ncsu.csc.itrust.beans.AdverseEventBean:getPrescriber()',1,0,0),(752,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:sendMail(edu.ncsu.csc.itrust.beans.AdverseEventBean)',1,0,0),(753,'edu.ncsu.csc.itrust.action.ReportAdverseEventAction:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean)',1,0,0),(754,'edu.ncsu.csc.itrust.validate.AdverseEventValidator:validate(edu.ncsu.csc.itrust.beans.AdverseEventBean)',1,0,0),(755,'edu.ncsu.csc.itrust.exception.FormValidationException:printStackTrace()',1,0,0),(756,'edu.ncsu.csc.itrust.exception.FormValidationException:getMessage()',1,0,0),(757,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:addReport(edu.ncsu.csc.itrust.beans.AdverseEventBean,long)',1,0,0),(758,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(759,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPatient(long)',1,0,0),(760,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getRepresentees()',1,0,0),(761,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescribingDoctor(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(762,'edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction:getPrescriptionsForPatient(long)',1,0,0),(763,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getExpiredPrescriptions(long)',1,0,0),(764,'edu.ncsu.csc.itrust.action.EditProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)',1,0,0),(765,'edu.ncsu.csc.itrust.action.EditProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(766,'edu.ncsu.csc.itrust.action.EditProceduresAction:getProcedures()',1,0,0),(767,'edu.ncsu.csc.itrust.action.EditProceduresAction:isUnsaved()',1,0,0),(768,'edu.ncsu.csc.itrust.action.EditProceduresAction:getOvID()',1,0,0),(769,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:getMedProceduresList(long)',1,0,0),(770,'edu.ncsu.csc.itrust.action.EditProceduresAction:addProcedure(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(771,'edu.ncsu.csc.itrust.action.EditProceduresAction:verifySaved()',1,0,0),(772,'edu.ncsu.csc.itrust.action.EditProceduresAction:editProcedure(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(773,'edu.ncsu.csc.itrust.action.EditProceduresAction:deleteProcedure(edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(774,'edu.ncsu.csc.itrust.action.EditProceduresAction:getProcedureCodes()',1,0,0),(775,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getProcedureCPTCodes()',1,0,0),(776,'edu.ncsu.csc.itrust.action.EditRepresentativesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(777,'edu.ncsu.csc.itrust.action.EditRepresentativesAction:getRepresented(long)',1,0,0),(778,'edu.ncsu.csc.itrust.action.EditRepresentativesAction:addRepresentative(java.lang.String)',1,0,0),(779,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addRepresentative(long,long)',1,0,0),(780,'edu.ncsu.csc.itrust.action.EditRepresentativesAction:removeRepresentative(java.lang.String)',1,0,0),(781,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:removeRepresentative(long,long)',1,0,0),(782,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)',1,0,0),(783,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(784,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:getDiagnoses()',1,0,0),(785,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:isUnsaved()',1,0,0),(786,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:getOvID()',1,0,0),(787,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getList(long)',1,0,0),(788,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:addDiagnosis(edu.ncsu.csc.itrust.beans.DiagnosisBean)',1,0,0),(789,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:verifySaved()',1,0,0),(790,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:add(edu.ncsu.csc.itrust.beans.DiagnosisBean)',1,0,0),(791,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:editDiagnosis(edu.ncsu.csc.itrust.beans.DiagnosisBean)',1,0,0),(792,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:edit(edu.ncsu.csc.itrust.beans.DiagnosisBean)',1,0,0),(793,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:deleteDiagnosis(edu.ncsu.csc.itrust.beans.DiagnosisBean)',1,0,0),(794,'edu.ncsu.csc.itrust.beans.DiagnosisBean:getOvDiagnosisID()',1,0,0),(795,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:remove(long)',1,0,0),(796,'edu.ncsu.csc.itrust.action.EditDiagnosesAction:getDiagnosisCodes()',1,0,0),(797,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(798,'edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:<init>()',1,0,0),(799,'edu.ncsu.csc.itrust.dao.DAOFactory:getORCodesDAO()',1,0,0),(800,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)',1,0,0),(801,'edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:validate(edu.ncsu.csc.itrust.beans.OverrideReasonBean)',1,0,0),(802,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:addORCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)',1,0,0),(803,'edu.ncsu.csc.itrust.beans.OverrideReasonBean:getORCode()',1,0,0),(804,'edu.ncsu.csc.itrust.beans.OverrideReasonBean:getDescription()',1,0,0),(805,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:updateInformation(edu.ncsu.csc.itrust.beans.OverrideReasonBean)',1,0,0),(806,'edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction:updateCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)',1,0,0),(807,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:updateCode(edu.ncsu.csc.itrust.beans.OverrideReasonBean)',1,0,0),(808,'edu.ncsu.csc.itrust.action.EditPHRAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(809,'edu.ncsu.csc.itrust.action.EditPHRAction:updateAllergies(long,java.lang.String)',1,0,0),(810,'edu.ncsu.csc.itrust.beans.AllergyBean:<init>()',1,0,0),(811,'edu.ncsu.csc.itrust.beans.AllergyBean:setDescription(java.lang.String)',1,0,0),(812,'edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:addAllergy(long,java.lang.String)',1,0,0),(813,'edu.ncsu.csc.itrust.action.EditPHRAction:makeEmail()',1,0,0),(814,'edu.ncsu.csc.itrust.action.EditPHRAction:getPatient()',1,0,0),(815,'edu.ncsu.csc.itrust.action.EditPHRAction:getAllergies()',1,0,0),(816,'edu.ncsu.csc.itrust.action.EditPHRAction:getFamily()',1,0,0),(817,'edu.ncsu.csc.itrust.action.EditPHRAction:getAllHealthRecords()',1,0,0),(818,'edu.ncsu.csc.itrust.action.EditPHRAction:getAllOfficeVisits()',1,0,0),(819,'edu.ncsu.csc.itrust.action.EditPHRAction:getCompleteOfficeVisit(long)',1,0,0),(820,'edu.ncsu.csc.itrust.action.EditPHRAction:getProcedures(long)',1,0,0),(821,'edu.ncsu.csc.itrust.action.EditPHRAction:getDiseasesAtRisk()',1,0,0),(822,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHighBP(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(823,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHighCholesterol(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(824,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveDiabetes(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(825,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveCancer(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(826,'edu.ncsu.csc.itrust.action.EditPHRAction:doesFamilyMemberHaveHeartDisease(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(827,'edu.ncsu.csc.itrust.action.EditPHRAction:isFamilyMemberSmoker(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(828,'edu.ncsu.csc.itrust.action.EditPHRAction:getFamilyMemberCOD(edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(829,'edu.ncsu.csc.itrust.action.ViewSurveyResultAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(830,'edu.ncsu.csc.itrust.dao.DAOFactory:getSurveyResultDAO()',1,0,0),(831,'edu.ncsu.csc.itrust.validate.SurveySearchValidator:<init>()',1,0,0),(832,'edu.ncsu.csc.itrust.action.ViewSurveyResultAction:getSurveyResultsForHospital(edu.ncsu.csc.itrust.beans.SurveyResultBean)',1,0,0),(833,'edu.ncsu.csc.itrust.beans.SurveyResultBean:getHCPhospital()',1,0,0),(834,'edu.ncsu.csc.itrust.beans.SurveyResultBean:getHCPspecialty()',1,0,0),(835,'edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:getSurveyResultsForHospital(java.lang.String,java.lang.String)',1,0,0),(836,'edu.ncsu.csc.itrust.action.ViewSurveyResultAction:getSurveyResultsForZip(edu.ncsu.csc.itrust.beans.SurveyResultBean)',1,0,0),(837,'edu.ncsu.csc.itrust.validate.SurveySearchValidator:validate(edu.ncsu.csc.itrust.beans.SurveyResultBean)',1,0,0),(838,'edu.ncsu.csc.itrust.beans.SurveyResultBean:getHCPzip()',1,0,0),(839,'edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:getSurveyResultsForZip(java.lang.String,java.lang.String)',1,0,0),(840,'edu.ncsu.csc.itrust.action.DeclareHCPAction:getDeclaredHCPS()',1,0,0),(841,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:declareHCP(long,long)',1,0,0),(842,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:undeclareHCP(long,long)',1,0,0),(843,'edu.ncsu.csc.itrust.action.GetUserNameAction:getUserName(java.lang.String)',1,0,0),(844,'edu.ncsu.csc.itrust.action.ViewReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(845,'edu.ncsu.csc.itrust.action.ViewReportAction:getDiagnoses(long)',1,0,0),(846,'edu.ncsu.csc.itrust.action.ViewReportAction:getProcedures(long)',1,0,0),(847,'edu.ncsu.csc.itrust.action.ViewReportAction:getPrescriptions(long)',1,0,0),(848,'edu.ncsu.csc.itrust.action.ViewReportAction:getDeclaredHCPs(long)',1,0,0),(849,'edu.ncsu.csc.itrust.action.ViewReportAction:getPersonnel(long)',1,0,0),(850,'edu.ncsu.csc.itrust.action.ViewReportAction:getPatient(long)',1,0,0),(851,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(852,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:getAllReportRequestsForRequester()',1,0,0),(853,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getAllReportRequestsForRequester(long)',1,0,0),(854,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:addReportRequest(long)',1,0,0),(855,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:addReportRequest(long,long,java.util.Date)',1,0,0),(856,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:getReportRequest(int)',1,0,0),(857,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:getReportRequest(long)',1,0,0),(858,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:setViewed(int)',1,0,0),(859,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:setViewed(long,java.util.Date)',1,0,0),(860,'edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction:getLongStatus(long)',1,0,0),(861,'edu.ncsu.csc.itrust.beans.ReportRequestBean:getStatus()',1,0,0),(862,'edu.ncsu.csc.itrust.beans.ReportRequestBean:getRequesterMID()',1,0,0),(863,'edu.ncsu.csc.itrust.beans.ReportRequestBean:getRequestedDateString()',1,0,0),(864,'edu.ncsu.csc.itrust.beans.ReportRequestBean:getViewedDateString()',1,0,0),(865,'edu.ncsu.csc.itrust.action.MyDiagnosisAction$HCPDiagnosisBeanComparator:compare(edu.ncsu.csc.itrust.beans.HCPDiagnosisBean,edu.ncsu.csc.itrust.beans.HCPDiagnosisBean)',1,0,0),(866,'edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:getNumPatients()',1,0,0),(867,'edu.ncsu.csc.itrust.action.MyDiagnosisAction$HCPDiagnosisBeanComparator:compare(java.lang.Object,java.lang.Object)',1,0,0),(868,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(869,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getDiagnoses()',1,0,0),(870,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getHCPByDiagnosis(java.lang.String)',1,0,0),(871,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getAllOfficeVisitsForDiagnosis(java.lang.String)',1,0,0),(872,'edu.ncsu.csc.itrust.beans.PatientBean:getZip1()',1,0,0),(873,'edu.ncsu.csc.itrust.beans.PersonnelBean:getZip1()',1,0,0),(874,'edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:getMedList()',1,0,0),(875,'edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:setMedList(java.util.List)',1,0,0),(876,'edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:getLabList()',1,0,0),(877,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:getVisitID()',1,0,0),(878,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresForDocOV(long)',1,0,0),(879,'edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:setLabList(java.util.List)',1,0,0),(880,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:getSurveyData(long)',1,0,0),(881,'edu.ncsu.csc.itrust.beans.SurveyBean:getVisitSatisfaction()',1,0,0),(882,'edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:setVisitSat(int)',1,0,0),(883,'edu.ncsu.csc.itrust.beans.SurveyBean:getTreatmentSatisfaction()',1,0,0),(884,'edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:setTreatmentSat(int)',1,0,0),(885,'edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:incNumPatients()',1,0,0),(886,'edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:<init>()',1,0,0),(887,'edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:setHCP(long)',1,0,0),(888,'edu.ncsu.csc.itrust.beans.HCPDiagnosisBean:setHCPName(java.lang.String)',1,0,0),(889,'edu.ncsu.csc.itrust.action.MyDiagnosisAction$HCPDiagnosisBeanComparator:<init>()',1,0,0),(890,'edu.ncsu.csc.itrust.action.MyDiagnosisAction:getPrescriptionsByHCPAndICD(long,java.lang.String)',1,0,0),(891,'edu.ncsu.csc.itrust.action.EditApptAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(892,'edu.ncsu.csc.itrust.action.EditApptAction:getAppt(int)',1,0,0),(893,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:getAppt(int)',1,0,0),(894,'edu.ncsu.csc.itrust.action.EditApptAction:editAppt(edu.ncsu.csc.itrust.beans.ApptBean)',1,0,0),(895,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:editAppt(edu.ncsu.csc.itrust.beans.ApptBean)',1,0,0),(896,'edu.ncsu.csc.itrust.action.EditApptAction:removeAppt(edu.ncsu.csc.itrust.beans.ApptBean)',1,0,0),(897,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:removeAppt(edu.ncsu.csc.itrust.beans.ApptBean)',1,0,0),(898,'edu.ncsu.csc.itrust.action.EditApptAction:getName(long)',1,0,0),(899,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)',1,0,0),(900,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(901,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabProcedures()',1,0,0),(902,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:isUnsaved()',1,0,0),(903,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getOvID()',1,0,0),(904,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabProcedure(long)',1,0,0),(905,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:verifySaved()',1,0,0),(906,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)',1,0,0),(907,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setStatus(java.lang.String)',1,0,0),(908,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:addLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)',1,0,0),(909,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:autoAssignLabTech(edu.ncsu.csc.itrust.beans.LabProcedureBean)',1,0,0),(910,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getLabTechs()',1,0,0),(911,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setLTID(long)',1,0,0),(912,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:editLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)',1,0,0),(913,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:deleteLabProcedure(edu.ncsu.csc.itrust.beans.LabProcedureBean)',1,0,0),(914,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:removeLabProcedure(long)',1,0,0),(915,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabTechs()',1,0,0),(916,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabTechName(long)',1,0,0),(917,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabTechQueueSize(long)',1,0,0),(918,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabTechQueueSize(long)',1,0,0),(919,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabTechQueueSizeByPriority(long)',1,0,0),(920,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabTechQueueSizeByPriority(long)',1,0,0),(921,'edu.ncsu.csc.itrust.action.EditLabProceduresAction:getLabProcedureCodes()',1,0,0),(922,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(923,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:getReferrals(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)',1,0,0),(924,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getPatientQuery(long)',1,0,0),(925,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:getReferralsForPatientUnread()',1,0,0),(926,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForPatientUnread(long)',1,0,0),(927,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:getReferralByID(int)',1,0,0),(928,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:updateReferral(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(929,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:setReferralMessage(long,long)',1,0,0),(930,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:setReferralMessage(long,long)',1,0,0),(931,'edu.ncsu.csc.itrust.action.ViewPatientReferralsAction:getOVDate(long)',1,0,0),(932,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(933,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:<init>()',1,0,0),(934,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:getPatientName()',1,0,0),(935,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:addHealthRecord(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)',1,0,0),(936,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)',1,0,0),(937,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:transferForm(long,edu.ncsu.csc.itrust.beans.forms.HealthRecordForm)',1,0,0),(938,'edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:add(edu.ncsu.csc.itrust.beans.HealthRecord)',1,0,0),(939,'edu.ncsu.csc.itrust.beans.HealthRecord:<init>()',1,0,0),(940,'edu.ncsu.csc.itrust.beans.HealthRecord:setPatientID(long)',1,0,0),(941,'edu.ncsu.csc.itrust.beans.HealthRecord:setPersonnelID(long)',1,0,0),(942,'edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getBloodPressureD()',1,0,0),(943,'edu.ncsu.csc.itrust.beans.HealthRecord:setBloodPressureD(int)',1,0,0),(944,'edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getBloodPressureN()',1,0,0),(945,'edu.ncsu.csc.itrust.beans.HealthRecord:setBloodPressureN(int)',1,0,0),(946,'edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getCholesterolHDL()',1,0,0),(947,'edu.ncsu.csc.itrust.beans.HealthRecord:setCholesterolHDL(int)',1,0,0),(948,'edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getCholesterolLDL()',1,0,0),(949,'edu.ncsu.csc.itrust.beans.HealthRecord:setCholesterolLDL(int)',1,0,0),(950,'edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getCholesterolTri()',1,0,0),(951,'edu.ncsu.csc.itrust.beans.HealthRecord:setCholesterolTri(int)',1,0,0),(952,'edu.ncsu.csc.itrust.beans.HealthRecord:getTotalCholesterol()',1,0,0),(953,'edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getHeight()',1,0,0),(954,'edu.ncsu.csc.itrust.beans.HealthRecord:setHeight(double)',1,0,0),(955,'edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getWeight()',1,0,0),(956,'edu.ncsu.csc.itrust.beans.HealthRecord:setWeight(double)',1,0,0),(957,'edu.ncsu.csc.itrust.beans.forms.HealthRecordForm:getIsSmoker()',1,0,0),(958,'edu.ncsu.csc.itrust.beans.HealthRecord:setSmoker(int)',1,0,0),(959,'edu.ncsu.csc.itrust.action.EditHealthHistoryAction:getAllHealthRecords(long)',1,0,0),(960,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(961,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:getConflicts()',1,0,0),(962,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:getApptsTable(int,int)',1,0,0),(963,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:getOfficeVisitsTable(int,int)',1,0,0),(964,'edu.ncsu.csc.itrust.action.GenerateCalendarAction:getLabProceduresTable(int,int)',1,0,0),(965,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getTimestamp()',1,0,0),(966,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(967,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String,java.lang.String)',1,0,0),(968,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)',1,0,0),(969,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:checkRepresented(long,java.lang.String)',1,0,0),(970,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getOfficeVisit()',1,0,0),(971,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getPrescriptions()',1,0,0),(972,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getAllProcedures()',1,0,0),(973,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getProcedures()',1,0,0),(974,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getImmunizations()',1,0,0),(975,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getDiagnoses()',1,0,0),(976,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getLabProcedures()',1,0,0),(977,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatientOV(long)',1,0,0),(978,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:setViewed(java.util.List)',1,0,0),(979,'edu.ncsu.csc.itrust.action.ViewOfficeVisitAction:getHCPName(long)',1,0,0),(980,'edu.ncsu.csc.itrust.exception.iTrustException:printStackTrace()',1,0,0),(981,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)',1,0,0),(982,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:<init>()',1,0,0),(983,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String,java.lang.String)',1,0,0),(984,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(985,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(986,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:reinitializeSubActions()',1,0,0),(987,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:isUnsaved()',1,0,0),(988,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getFactory()',1,0,0),(989,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getPid()',1,0,0),(990,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getOvID()',1,0,0),(991,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getOfficeVisit()',1,0,0),(992,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getBean()',1,0,0),(993,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getHospitals()',1,0,0),(994,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:getHcpid()',1,0,0),(995,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:combineLists(java.util.List,java.util.List)',1,0,0),(996,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateInformation(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)',1,0,0),(997,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateOv(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)',1,0,0),(998,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:logOfficeVisitEvent(edu.ncsu.csc.itrust.enums.TransactionType)',1,0,0),(999,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:makeEmailApp(long,java.lang.String,java.lang.String)',1,0,0),(1000,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm)',1,0,0),(1001,'edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getNotes()',1,0,0),(1002,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:setNotes(java.lang.String)',1,0,0),(1003,'edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getVisitDate()',1,0,0),(1004,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:setVisitDateStr(java.lang.String)',1,0,0),(1005,'edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getHcpID()',1,0,0),(1006,'edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getPatientID()',1,0,0),(1007,'edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm:getHospitalID()',1,0,0),(1008,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:setHospitalID(java.lang.String)',1,0,0),(1009,'edu.ncsu.csc.itrust.action.EditOfficeVisitAction:updateBean(edu.ncsu.csc.itrust.beans.OfficeVisitBean)',1,0,0),(1010,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:update(edu.ncsu.csc.itrust.beans.OfficeVisitBean)',1,0,0),(1011,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(1012,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:representPatient(java.lang.String)',1,0,0),(1013,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:getAllOfficeVisits()',1,0,0),(1014,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:getPrescriptionReports(java.util.Map,java.util.List)',1,0,0),(1015,'edu.ncsu.csc.itrust.ParameterUtil:convertMap(java.util.Map)',1,0,0),(1016,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:byOfficeVisitAndPatient(java.util.List,long)',1,0,0),(1017,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:getPatient()',1,0,0),(1018,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:getQueryString(java.util.Map,java.util.List)',1,0,0),(1019,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:checkOfficeVisits(java.util.HashMap,java.util.List)',1,0,0),(1020,'edu.ncsu.csc.itrust.action.PrescriptionReportAction:buildQueryString(java.util.List)',1,0,0),(1021,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)',1,0,0),(1022,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1023,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1024,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1025,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:getOfficeVisitsWithInstructions()',1,0,0),(1026,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:getPid()',1,0,0),(1027,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getOfficeVisitsWithInstructions(long)',1,0,0),(1028,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:getInstructionsForOfficeVisit(long)',1,0,0),(1029,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:getList(long)',1,0,0),(1030,'edu.ncsu.csc.itrust.action.ViewPatientInstructionsAction:getHCPNameLookup()',1,0,0),(1031,'edu.ncsu.csc.itrust.action.EditPersonnelAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,java.lang.String)',1,0,0),(1032,'edu.ncsu.csc.itrust.action.base.PersonnelBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)',1,0,0),(1033,'edu.ncsu.csc.itrust.validate.PersonnelValidator:<init>()',1,0,0),(1034,'edu.ncsu.csc.itrust.action.EditPersonnelAction:updateInformation(edu.ncsu.csc.itrust.beans.PersonnelBean)',1,0,0),(1035,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(edu.ncsu.csc.itrust.beans.PersonnelBean)',1,0,0),(1036,'edu.ncsu.csc.itrust.action.EditPersonnelAction:editMessageFilter(java.lang.String)',1,0,0),(1037,'edu.ncsu.csc.itrust.action.EditPersonnelAction:getPid()',1,0,0),(1038,'edu.ncsu.csc.itrust.beans.PersonnelBean:setMessageFilter(java.lang.String)',1,0,0),(1039,'edu.ncsu.csc.itrust.action.SearchUsersAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(1040,'edu.ncsu.csc.itrust.action.SearchUsersAction:searchForPersonnelWithName(java.lang.String,java.lang.String)',1,0,0),(1041,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:searchForPersonnelWithName(java.lang.String,java.lang.String)',1,0,0),(1042,'edu.ncsu.csc.itrust.action.SearchUsersAction:searchForPatientsWithName(java.lang.String,java.lang.String)',1,0,0),(1043,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:searchForPatientsWithName(java.lang.String,java.lang.String)',1,0,0),(1044,'edu.ncsu.csc.itrust.dao.DAOFactory:getPatientInstructionsDAO()',1,0,0),(1045,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:getPatientInstructions()',1,0,0),(1046,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:isUnsaved()',1,0,0),(1047,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:getOvID()',1,0,0),(1048,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:addPatientInstructions(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)',1,0,0),(1049,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:verifySaved()',1,0,0),(1050,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:add(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)',1,0,0),(1051,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:editPatientInstructions(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)',1,0,0),(1052,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:edit(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)',1,0,0),(1053,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:deletePatientInstructions(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)',1,0,0),(1054,'edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getId()',1,0,0),(1055,'edu.ncsu.csc.itrust.dao.mysql.PatientInstructionsDAO:remove(long)',1,0,0),(1056,'edu.ncsu.csc.itrust.action.EditPatientInstructionsAction:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)',1,0,0),(1057,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:<init>()',1,0,0),(1058,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:validate(edu.ncsu.csc.itrust.beans.PatientInstructionsBean)',1,0,0),(1059,'edu.ncsu.csc.itrust.action.ResetPasswordAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1060,'edu.ncsu.csc.itrust.action.ResetPasswordAction:checkMID(java.lang.String)',1,0,0),(1061,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:checkUserExists(long)',1,0,0),(1062,'edu.ncsu.csc.itrust.action.ResetPasswordAction:isMaxedOut(java.lang.String)',1,0,0),(1063,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getResetPasswordFailures(java.lang.String)',1,0,0),(1064,'edu.ncsu.csc.itrust.action.ResetPasswordAction:checkRole(long,java.lang.String)',1,0,0),(1065,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getRole(long,java.lang.String)',1,0,0),(1066,'edu.ncsu.csc.itrust.action.ResetPasswordAction:getSecurityQuestion(long)',1,0,0),(1067,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityQuestion(long)',1,0,0),(1068,'edu.ncsu.csc.itrust.action.ResetPasswordAction:resetPassword(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',1,0,0),(1069,'edu.ncsu.csc.itrust.enums.Role:parse(java.lang.String)',1,0,0),(1070,'edu.ncsu.csc.itrust.enums.Role:equals(java.lang.Object)',1,0,0),(1071,'edu.ncsu.csc.itrust.action.ResetPasswordAction:validatePassword(java.lang.String,java.lang.String)',1,0,0),(1072,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:getSecurityAnswer(long)',1,0,0),(1073,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:resetPassword(long,java.lang.String)',1,0,0),(1074,'edu.ncsu.csc.itrust.action.ResetPasswordAction:makeEmailApp(long,java.lang.String)',1,0,0),(1075,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:recordResetPasswordFailure(java.lang.String)',1,0,0),(1076,'edu.ncsu.csc.itrust.exception.ErrorList:<init>()',1,0,0),(1077,'edu.ncsu.csc.itrust.exception.ErrorList:addIfNotNull(java.lang.String)',1,0,0),(1078,'edu.ncsu.csc.itrust.validate.ValidationFormat:getRegex()',1,0,0),(1079,'edu.ncsu.csc.itrust.validate.ValidationFormat:getDescription()',1,0,0),(1080,'edu.ncsu.csc.itrust.exception.ErrorList:hasErrors()',1,0,0),(1081,'edu.ncsu.csc.itrust.exception.FormValidationException:<init>(edu.ncsu.csc.itrust.exception.ErrorList)',1,0,0),(1082,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(1083,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:checkMID(long)',1,0,0),(1084,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:updateInformation(edu.ncsu.csc.itrust.beans.SecurityQA)',1,0,0),(1085,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:<init>()',1,0,0),(1086,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(edu.ncsu.csc.itrust.beans.SecurityQA)',1,0,0),(1087,'edu.ncsu.csc.itrust.beans.SecurityQA:getQuestion()',1,0,0),(1088,'edu.ncsu.csc.itrust.beans.SecurityQA:getAnswer()',1,0,0),(1089,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:setSecurityQuestionAnswer(java.lang.String,java.lang.String,long)',1,0,0),(1090,'edu.ncsu.csc.itrust.action.SetSecurityQuestionAction:retrieveInformation()',1,0,0),(1091,'edu.ncsu.csc.itrust.beans.SecurityQA:<init>()',1,0,0),(1092,'edu.ncsu.csc.itrust.beans.SecurityQA:setAnswer(java.lang.String)',1,0,0),(1093,'edu.ncsu.csc.itrust.beans.SecurityQA:setQuestion(java.lang.String)',1,0,0),(1094,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(1095,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:getReports(boolean,java.lang.String,java.lang.String)',1,0,0),(1096,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getPerscriptions(java.lang.String,java.lang.String)',1,0,0),(1097,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getImmunizations(java.lang.String,java.lang.String)',1,0,0),(1098,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:getName(long)',1,0,0),(1099,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:sendEmail(long,java.lang.String)',1,0,0),(1100,'edu.ncsu.csc.itrust.beans.Email:getFrom()',1,0,0),(1101,'edu.ncsu.csc.itrust.beans.Email:getBody()',1,0,0),(1102,'edu.ncsu.csc.itrust.action.MonitorAdverseEventAction:remove(int)',1,0,0),(1103,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:removeReport(int)',1,0,0),(1104,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getHCPMID(int)',1,0,0),(1105,'edu.ncsu.csc.itrust.exception.DBException:<init>(java.sql.SQLException)',1,0,0),(1106,'edu.ncsu.csc.itrust.action.base.PatientBaseAction:checkPatientID(java.lang.String)',1,0,0),(1107,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:checkPatientExists(long)',1,0,0),(1108,'edu.ncsu.csc.itrust.HtmlEncoder:encode(java.lang.String)',1,0,0),(1109,'edu.ncsu.csc.itrust.action.base.PersonnelBaseAction:checkPersonnelID(java.lang.String)',1,0,0),(1110,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,java.lang.String)',1,0,0),(1111,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:checkOfficeVisitID(java.lang.String)',1,0,0),(1112,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:encode(java.lang.String)',1,0,0),(1113,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:checkOfficeVisitExists(long,long)',1,0,0),(1114,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:verifySaved()',1,0,0),(1115,'edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction:isUnsaved()',1,0,0),(1116,'edu.ncsu.csc.itrust.beans.FamilyMemberBean:getFullName()',1,0,0),(1117,'edu.ncsu.csc.itrust.beans.FamilyMemberBean:getFirstName()',1,0,0),(1118,'edu.ncsu.csc.itrust.beans.FamilyMemberBean:getLastName()',1,0,0),(1119,'edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressure()',1,0,0),(1120,'edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureN()',1,0,0),(1121,'edu.ncsu.csc.itrust.beans.HealthRecord:getBloodPressureD()',1,0,0),(1122,'edu.ncsu.csc.itrust.beans.HealthRecord:getCholesterolTri()',1,0,0),(1123,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:toReferralBean()',1,0,0),(1124,'edu.ncsu.csc.itrust.beans.ReferralBean:<init>()',1,0,0),(1125,'edu.ncsu.csc.itrust.beans.ReferralBean:setId(long)',1,0,0),(1126,'edu.ncsu.csc.itrust.beans.ReferralBean:setPatientID(long)',1,0,0),(1127,'edu.ncsu.csc.itrust.beans.ReferralBean:setSenderID(long)',1,0,0),(1128,'edu.ncsu.csc.itrust.beans.ReferralBean:setReceiverID(long)',1,0,0),(1129,'edu.ncsu.csc.itrust.beans.ReferralBean:setReferralDetails(java.lang.String)',1,0,0),(1130,'edu.ncsu.csc.itrust.beans.ReferralBean:setOvid(long)',1,0,0),(1131,'edu.ncsu.csc.itrust.beans.ReferralBean:setViewedByPatient(boolean)',1,0,0),(1132,'edu.ncsu.csc.itrust.beans.ReferralBean:setViewedByHCP(boolean)',1,0,0),(1133,'edu.ncsu.csc.itrust.beans.ReferralBean:setTimeStamp(java.lang.String)',1,0,0),(1134,'edu.ncsu.csc.itrust.beans.ReferralBean:setPriority(int)',1,0,0),(1135,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:equals(java.lang.Object)',1,0,0),(1136,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:equals(edu.ncsu.csc.itrust.beans.VerboseReferralBean)',1,0,0),(1137,'edu.ncsu.csc.itrust.beans.PatientBean:setBloodTypeStr(java.lang.String)',1,0,0),(1138,'edu.ncsu.csc.itrust.enums.BloodType:parse(java.lang.String)',1,0,0),(1139,'edu.ncsu.csc.itrust.beans.PatientBean:setEthnicityStr(java.lang.String)',1,0,0),(1140,'edu.ncsu.csc.itrust.enums.Ethnicity:parse(java.lang.String)',1,0,0),(1141,'edu.ncsu.csc.itrust.beans.PatientBean:setGenderStr(java.lang.String)',1,0,0),(1142,'edu.ncsu.csc.itrust.enums.Gender:parse(java.lang.String)',1,0,0),(1143,'edu.ncsu.csc.itrust.beans.PatientBean:getIcAddress3()',1,0,0),(1144,'edu.ncsu.csc.itrust.beans.PatientBean:getIcCity()',1,0,0),(1145,'edu.ncsu.csc.itrust.beans.PatientBean:getIcState()',1,0,0),(1146,'edu.ncsu.csc.itrust.beans.PatientBean:getIcZip()',1,0,0),(1147,'edu.ncsu.csc.itrust.beans.PatientBean:getIcZip2()',1,0,0),(1148,'edu.ncsu.csc.itrust.beans.PatientBean:getIcZip1()',1,0,0),(1149,'edu.ncsu.csc.itrust.beans.PatientBean:getPhone()',1,0,0),(1150,'edu.ncsu.csc.itrust.beans.PatientBean:getPhone1()',1,0,0),(1151,'edu.ncsu.csc.itrust.beans.PatientBean:getPhone2()',1,0,0),(1152,'edu.ncsu.csc.itrust.beans.PatientBean:getPhone3()',1,0,0),(1153,'edu.ncsu.csc.itrust.beans.PatientBean:getStreetAddress3()',1,0,0),(1154,'edu.ncsu.csc.itrust.beans.PatientBean:getZip2()',1,0,0),(1155,'edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone1()',1,0,0),(1156,'edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone2()',1,0,0),(1157,'edu.ncsu.csc.itrust.beans.PatientBean:getEmergencyPhone3()',1,0,0),(1158,'edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone()',1,0,0),(1159,'edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone1()',1,0,0),(1160,'edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone2()',1,0,0),(1161,'edu.ncsu.csc.itrust.beans.PatientBean:getIcPhone3()',1,0,0),(1162,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setBloodTypeStr(java.lang.String)',1,0,0),(1163,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setEthnicityStr(java.lang.String)',1,0,0),(1164,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getFullName()',1,0,0),(1165,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getFirstName()',1,0,0),(1166,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getLastName()',1,0,0),(1167,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setGenderStr(java.lang.String)',1,0,0),(1168,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcAddress3()',1,0,0),(1169,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcCity()',1,0,0),(1170,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcState()',1,0,0),(1171,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcZip()',1,0,0),(1172,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcZip2()',1,0,0),(1173,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcZip1()',1,0,0),(1174,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getPhone()',1,0,0),(1175,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getPhone1()',1,0,0),(1176,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getPhone2()',1,0,0),(1177,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getPhone3()',1,0,0),(1178,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getStreetAddress3()',1,0,0),(1179,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getCity()',1,0,0),(1180,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getState()',1,0,0),(1181,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getZip()',1,0,0),(1182,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getZip2()',1,0,0),(1183,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getZip1()',1,0,0),(1184,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getEmergencyPhone()',1,0,0),(1185,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getEmergencyPhone1()',1,0,0),(1186,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getEmergencyPhone2()',1,0,0),(1187,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getEmergencyPhone3()',1,0,0),(1188,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcPhone()',1,0,0),(1189,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcPhone1()',1,0,0),(1190,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcPhone2()',1,0,0),(1191,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:getIcPhone3()',1,0,0),(1192,'edu.ncsu.csc.itrust.beans.AllergyBean:getFirstFoundStr()',1,0,0),(1193,'edu.ncsu.csc.itrust.beans.HospitalBean:equals(java.lang.Object)',1,0,0),(1194,'edu.ncsu.csc.itrust.beans.HospitalBean:equals(edu.ncsu.csc.itrust.beans.HospitalBean)',1,0,0),(1195,'edu.ncsu.csc.itrust.beans.Email:equals(java.lang.Object)',1,0,0),(1196,'edu.ncsu.csc.itrust.beans.Email:equals(edu.ncsu.csc.itrust.beans.Email)',1,0,0),(1197,'edu.ncsu.csc.itrust.beans.Email:listEquals(java.util.List,java.util.List)',1,0,0),(1198,'edu.ncsu.csc.itrust.beans.OperationalProfile:<init>()',1,0,0),(1199,'edu.ncsu.csc.itrust.beans.OperationalProfile:createEmptyMap()',1,0,0),(1200,'edu.ncsu.csc.itrust.beans.PrescriptionBean:equals(java.lang.Object)',1,0,0),(1201,'edu.ncsu.csc.itrust.beans.PrescriptionBean:equals(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(1202,'edu.ncsu.csc.itrust.beans.MedicationBean:equals(java.lang.Object)',1,0,0),(1203,'edu.ncsu.csc.itrust.beans.PersonnelBean:getFirstName()',1,0,0),(1204,'edu.ncsu.csc.itrust.beans.PersonnelBean:getZip2()',1,0,0),(1205,'edu.ncsu.csc.itrust.beans.ReferralBean:equals(java.lang.Object)',1,0,0),(1206,'edu.ncsu.csc.itrust.beans.ReferralBean:equals(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(1207,'edu.ncsu.csc.itrust.beans.SurveyBean:setSurveyDateString(java.lang.String)',1,0,0),(1208,'edu.ncsu.csc.itrust.beans.SurveyBean:setSurveyDate(java.util.Date)',1,0,0),(1209,'edu.ncsu.csc.itrust.beans.SurveyBean:getSurveyDateString()',1,0,0),(1210,'edu.ncsu.csc.itrust.beans.SurveyBean:getSurveyDate()',1,0,0),(1211,'edu.ncsu.csc.itrust.beans.MedicationBean:getNDCodeFormatted()',1,0,0),(1212,'edu.ncsu.csc.itrust.beans.MedicationBean:equals(edu.ncsu.csc.itrust.beans.MedicationBean)',1,0,0),(1213,'edu.ncsu.csc.itrust.beans.ReportRequestBean:<clinit>()',1,0,0),(1214,'edu.ncsu.csc.itrust.beans.ReportRequestBean:setRequestedDateString(java.lang.String)',1,0,0),(1215,'edu.ncsu.csc.itrust.beans.ReportRequestBean:setRequestedDate(java.util.Date)',1,0,0),(1216,'edu.ncsu.csc.itrust.beans.ReportRequestBean:setViewedDateString(java.lang.String)',1,0,0),(1217,'edu.ncsu.csc.itrust.beans.ReportRequestBean:setViewedDate(java.util.Date)',1,0,0),(1218,'edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm$1:compare(edu.ncsu.csc.itrust.beans.VisitFlag,edu.ncsu.csc.itrust.beans.VisitFlag)',1,0,0),(1219,'edu.ncsu.csc.itrust.beans.VisitFlag:getType()',1,0,0),(1220,'edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm$1:compare(java.lang.Object,java.lang.Object)',1,0,0),(1221,'edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm:<init>(long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',1,0,0),(1222,'edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm:setPhoneNumber(java.lang.String,java.lang.String,java.lang.String)',1,0,0),(1223,'edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm:getVisitFlags()',1,0,0),(1224,'edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm$1:<init>(edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm)',1,0,0),(1225,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1226,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1227,'edu.ncsu.csc.itrust.beans.LOINCbean:<init>()',1,0,0),(1228,'edu.ncsu.csc.itrust.beans.LOINCbean:setLabProcedureCode(java.lang.String)',1,0,0),(1229,'edu.ncsu.csc.itrust.beans.LOINCbean:setComponent(java.lang.String)',1,0,0),(1230,'edu.ncsu.csc.itrust.beans.LOINCbean:setKindOfProperty(java.lang.String)',1,0,0),(1231,'edu.ncsu.csc.itrust.beans.LOINCbean:setTimeAspect(java.lang.String)',1,0,0),(1232,'edu.ncsu.csc.itrust.beans.LOINCbean:setSystem(java.lang.String)',1,0,0),(1233,'edu.ncsu.csc.itrust.beans.LOINCbean:setScaleType(java.lang.String)',1,0,0),(1234,'edu.ncsu.csc.itrust.beans.LOINCbean:setMethodType(java.lang.String)',1,0,0),(1235,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1236,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.LOINCbean)',1,0,0),(1237,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1238,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1239,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.Email)',1,0,0),(1240,'edu.ncsu.csc.itrust.beans.Email:getToListStr()',1,0,0),(1241,'edu.ncsu.csc.itrust.beans.Email:getSubject()',1,0,0),(1242,'edu.ncsu.csc.itrust.beans.Email:setTimeAdded(java.sql.Timestamp)',1,0,0),(1243,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1244,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1245,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1246,'edu.ncsu.csc.itrust.beans.AdverseEventBean:<init>()',1,0,0),(1247,'edu.ncsu.csc.itrust.beans.AdverseEventBean:setMID(java.lang.String)',1,0,0),(1248,'edu.ncsu.csc.itrust.beans.AdverseEventBean:setDrug(java.lang.String)',1,0,0),(1249,'edu.ncsu.csc.itrust.beans.AdverseEventBean:setCode(java.lang.String)',1,0,0),(1250,'edu.ncsu.csc.itrust.beans.AdverseEventBean:setDate(java.lang.String)',1,0,0),(1251,'edu.ncsu.csc.itrust.beans.AdverseEventBean:setId(int)',1,0,0),(1252,'edu.ncsu.csc.itrust.beans.AdverseEventBean:setStatus(java.lang.String)',1,0,0),(1253,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1254,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.AdverseEventBean)',1,0,0),(1255,'edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1256,'edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1257,'edu.ncsu.csc.itrust.beans.AllergyBean:setId(long)',1,0,0),(1258,'edu.ncsu.csc.itrust.beans.AllergyBean:setPatientID(long)',1,0,0),(1259,'edu.ncsu.csc.itrust.beans.AllergyBean:setFirstFound(java.util.Date)',1,0,0),(1260,'edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1261,'edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.AllergyBean)',1,0,0),(1262,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1263,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1264,'edu.ncsu.csc.itrust.beans.TelemedicineBean:<init>()',1,0,0),(1265,'edu.ncsu.csc.itrust.beans.TelemedicineBean:setSystolicBloodPressureAllowed(boolean)',1,0,0),(1266,'edu.ncsu.csc.itrust.beans.TelemedicineBean:setDiastolicBloodPressureAllowed(boolean)',1,0,0),(1267,'edu.ncsu.csc.itrust.beans.TelemedicineBean:setGlucoseLevelAllowed(boolean)',1,0,0),(1268,'edu.ncsu.csc.itrust.beans.TelemedicineBean:setHeightAllowed(boolean)',1,0,0),(1269,'edu.ncsu.csc.itrust.beans.TelemedicineBean:setWeightAllowed(boolean)',1,0,0),(1270,'edu.ncsu.csc.itrust.beans.TelemedicineBean:setPedometerReadingAllowed(boolean)',1,0,0),(1271,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1272,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.TelemedicineBean)',1,0,0),(1273,'edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1274,'edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1275,'edu.ncsu.csc.itrust.beans.FamilyMemberBean:<init>()',1,0,0),(1276,'edu.ncsu.csc.itrust.beans.FamilyMemberBean:setFirstName(java.lang.String)',1,0,0),(1277,'edu.ncsu.csc.itrust.beans.FamilyMemberBean:setLastName(java.lang.String)',1,0,0),(1278,'edu.ncsu.csc.itrust.beans.FamilyMemberBean:setMid(long)',1,0,0),(1279,'edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1280,'edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.FamilyMemberBean)',1,0,0),(1281,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1282,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1283,'edu.ncsu.csc.itrust.beans.LabProcedureBean:<init>()',1,0,0),(1284,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setProcedureID(long)',1,0,0),(1285,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setPid(long)',1,0,0),(1286,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setLoinc(java.lang.String)',1,0,0),(1287,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setCommentary(java.lang.String)',1,0,0),(1288,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setResults(java.lang.String)',1,0,0),(1289,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setOvID(long)',1,0,0),(1290,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setTimestamp(java.sql.Timestamp)',1,0,0),(1291,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setRights(java.lang.String)',1,0,0),(1292,'edu.ncsu.csc.itrust.beans.LabProcedureBean:setPriorityCode(int)',1,0,0),(1293,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1294,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.LabProcedureBean)',1,0,0),(1295,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1296,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1297,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:<init>()',1,0,0),(1298,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setLoggedInMID(long)',1,0,0),(1299,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setSystolicBloodPressure(int)',1,0,0),(1300,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setDiastolicBloodPressure(int)',1,0,0),(1301,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setGlucoseLevel(int)',1,0,0),(1302,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setHeight(float)',1,0,0),(1303,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setWeight(float)',1,0,0),(1304,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setPedometerReading(int)',1,0,0),(1305,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setTime(java.sql.Timestamp)',1,0,0),(1306,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setReporterRole(java.lang.String)',1,0,0),(1307,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:setReporterMID(long)',1,0,0),(1308,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1309,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean)',1,0,0),(1310,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadList(java.sql.ResultSet)',1,0,0),(1311,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1312,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:<init>(long)',1,0,0),(1313,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1314,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OfficeVisitBean)',1,0,0),(1315,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadList(java.sql.ResultSet)',1,0,0),(1316,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1317,'edu.ncsu.csc.itrust.beans.PersonnelBean:<init>()',1,0,0),(1318,'edu.ncsu.csc.itrust.beans.PersonnelBean:setAMID(long)',1,0,0),(1319,'edu.ncsu.csc.itrust.beans.PersonnelBean:setRoleString(java.lang.String)',1,0,0),(1320,'edu.ncsu.csc.itrust.beans.PersonnelBean:setLastName(java.lang.String)',1,0,0),(1321,'edu.ncsu.csc.itrust.beans.PersonnelBean:setFirstName(java.lang.String)',1,0,0),(1322,'edu.ncsu.csc.itrust.beans.PersonnelBean:setPhone1(java.lang.String)',1,0,0),(1323,'edu.ncsu.csc.itrust.beans.PersonnelBean:setPhone2(java.lang.String)',1,0,0),(1324,'edu.ncsu.csc.itrust.beans.PersonnelBean:setPhone3(java.lang.String)',1,0,0),(1325,'edu.ncsu.csc.itrust.beans.PersonnelBean:setStreetAddress1(java.lang.String)',1,0,0),(1326,'edu.ncsu.csc.itrust.beans.PersonnelBean:setStreetAddress2(java.lang.String)',1,0,0),(1327,'edu.ncsu.csc.itrust.beans.PersonnelBean:setCity(java.lang.String)',1,0,0),(1328,'edu.ncsu.csc.itrust.beans.PersonnelBean:setState(java.lang.String)',1,0,0),(1329,'edu.ncsu.csc.itrust.beans.PersonnelBean:setZip1(java.lang.String)',1,0,0),(1330,'edu.ncsu.csc.itrust.beans.PersonnelBean:setZip2(java.lang.String)',1,0,0),(1331,'edu.ncsu.csc.itrust.beans.PersonnelBean:setEmail(java.lang.String)',1,0,0),(1332,'edu.ncsu.csc.itrust.beans.PersonnelBean:setSpecialty(java.lang.String)',1,0,0),(1333,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PersonnelBean)',1,0,0),(1334,'edu.ncsu.csc.itrust.beans.PersonnelBean:getAMID()',1,0,0),(1335,'edu.ncsu.csc.itrust.beans.PersonnelBean:getPhone1()',1,0,0),(1336,'edu.ncsu.csc.itrust.beans.PersonnelBean:getPhone2()',1,0,0),(1337,'edu.ncsu.csc.itrust.beans.PersonnelBean:getPhone3()',1,0,0),(1338,'edu.ncsu.csc.itrust.beans.PersonnelBean:getMessageFilter()',1,0,0),(1339,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1340,'edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1341,'edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1342,'edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1343,'edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.DrugInteractionBean)',1,0,0),(1344,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:<init>()',1,0,0),(1345,'edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:<init>()',1,0,0),(1346,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1347,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1348,'edu.ncsu.csc.itrust.beans.PrescriptionBean:setId(long)',1,0,0),(1349,'edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1350,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(1351,'edu.ncsu.csc.itrust.beans.PrescriptionBean:getVisitID()',1,0,0),(1352,'edu.ncsu.csc.itrust.beans.PrescriptionBean:getDosage()',1,0,0),(1353,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1354,'edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1355,'edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1356,'edu.ncsu.csc.itrust.beans.OverrideReasonBean:<init>(java.lang.String)',1,0,0),(1357,'edu.ncsu.csc.itrust.beans.OverrideReasonBean:setDescription(java.lang.String)',1,0,0),(1358,'edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1359,'edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OverrideReasonBean)',1,0,0),(1360,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1361,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1362,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:<init>()',1,0,0),(1363,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setId(long)',1,0,0),(1364,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setSenderID(long)',1,0,0),(1365,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setReceiverID(long)',1,0,0),(1366,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setPatientID(long)',1,0,0),(1367,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setReferralDetails(java.lang.String)',1,0,0),(1368,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setOvid(long)',1,0,0),(1369,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setTimeStamp(java.lang.String)',1,0,0),(1370,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setViewedByHCP(boolean)',1,0,0),(1371,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setViewedByPatient(boolean)',1,0,0),(1372,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setPriority(int)',1,0,0),(1373,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setOvDate(java.lang.String)',1,0,0),(1374,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setPatientName(java.lang.String)',1,0,0),(1375,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setReceiverName(java.lang.String)',1,0,0),(1376,'edu.ncsu.csc.itrust.beans.VerboseReferralBean:setSenderName(java.lang.String)',1,0,0),(1377,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1378,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.VerboseReferralBean)',1,0,0),(1379,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1380,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1381,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ApptBean)',1,0,0),(1382,'edu.ncsu.csc.itrust.beans.ApptBean:getPatient()',1,0,0),(1383,'edu.ncsu.csc.itrust.beans.ApptBean:getHcp()',1,0,0),(1384,'edu.ncsu.csc.itrust.beans.ApptBean:getComment()',1,0,0),(1385,'edu.ncsu.csc.itrust.beans.ApptBean:<init>()',1,0,0),(1386,'edu.ncsu.csc.itrust.beans.ApptBean:setApptID(int)',1,0,0),(1387,'edu.ncsu.csc.itrust.beans.ApptBean:setApptType(java.lang.String)',1,0,0),(1388,'edu.ncsu.csc.itrust.beans.ApptBean:setPatient(long)',1,0,0),(1389,'edu.ncsu.csc.itrust.beans.ApptBean:setHcp(long)',1,0,0),(1390,'edu.ncsu.csc.itrust.beans.ApptBean:setDate(java.sql.Timestamp)',1,0,0),(1391,'edu.ncsu.csc.itrust.beans.ApptBean:setComment(java.lang.String)',1,0,0),(1392,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1393,'edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1394,'edu.ncsu.csc.itrust.beans.MedicationBean:<init>(java.lang.String)',1,0,0),(1395,'edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1396,'edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.MedicationBean)',1,0,0),(1397,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1398,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1399,'edu.ncsu.csc.itrust.beans.ProcedureBean:<init>(java.lang.String)',1,0,0),(1400,'edu.ncsu.csc.itrust.beans.ProcedureBean:setDescription(java.lang.String)',1,0,0),(1401,'edu.ncsu.csc.itrust.beans.ProcedureBean:setAttribute(java.lang.String)',1,0,0),(1402,'edu.ncsu.csc.itrust.beans.ProcedureBean:setOvProcedureID(long)',1,0,0),(1403,'edu.ncsu.csc.itrust.beans.ProcedureBean:setDate(java.sql.Date)',1,0,0),(1404,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ProcedureBean)',1,0,0),(1405,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1406,'edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1407,'edu.ncsu.csc.itrust.beans.SurveyBean:<init>()',1,0,0),(1408,'edu.ncsu.csc.itrust.beans.SurveyBean:setExamRoomMinutes(int)',1,0,0),(1409,'edu.ncsu.csc.itrust.beans.SurveyBean:setWaitingRoomMinutes(int)',1,0,0),(1410,'edu.ncsu.csc.itrust.beans.SurveyBean:setTreatmentSatisfaction(int)',1,0,0),(1411,'edu.ncsu.csc.itrust.beans.SurveyBean:setVisitSatisfaction(int)',1,0,0),(1412,'edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1413,'edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.SurveyBean)',1,0,0),(1414,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1415,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1416,'edu.ncsu.csc.itrust.beans.ReportRequestBean:<init>()',1,0,0),(1417,'edu.ncsu.csc.itrust.beans.ReportRequestBean:setID(long)',1,0,0),(1418,'edu.ncsu.csc.itrust.beans.ReportRequestBean:setRequesterMID(long)',1,0,0),(1419,'edu.ncsu.csc.itrust.beans.ReportRequestBean:setPatientMID(long)',1,0,0),(1420,'edu.ncsu.csc.itrust.beans.ReportRequestBean:setStatus(java.lang.String)',1,0,0),(1421,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1422,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReportRequestBean)',1,0,0),(1423,'edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1424,'edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1425,'edu.ncsu.csc.itrust.beans.HospitalBean:<init>(java.lang.String,java.lang.String)',1,0,0),(1426,'edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1427,'edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HospitalBean)',1,0,0),(1428,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1429,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1430,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(1431,'edu.ncsu.csc.itrust.beans.ReferralBean:isViewedByPatient()',1,0,0),(1432,'edu.ncsu.csc.itrust.beans.ReferralBean:isViewedByHCP()',1,0,0),(1433,'edu.ncsu.csc.itrust.beans.ReferralBean:getPriority()',1,0,0),(1434,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1435,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1436,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1437,'edu.ncsu.csc.itrust.beans.SurveyResultBean:<init>()',1,0,0),(1438,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPMID(long)',1,0,0),(1439,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setAvgExamRoomMinutes(float)',1,0,0),(1440,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setAvgTreatmentSatisfaction(float)',1,0,0),(1441,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setAvgVisitSatisfaction(float)',1,0,0),(1442,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setAvgWaitingRoomMinutes(float)',1,0,0),(1443,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPaddress1(java.lang.String)',1,0,0),(1444,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPaddress2(java.lang.String)',1,0,0),(1445,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPcity(java.lang.String)',1,0,0),(1446,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPstate(java.lang.String)',1,0,0),(1447,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPzip(java.lang.String)',1,0,0),(1448,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPhospital(java.lang.String)',1,0,0),(1449,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPFirstName(java.lang.String)',1,0,0),(1450,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPLastName(java.lang.String)',1,0,0),(1451,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setHCPspecialty(java.lang.String)',1,0,0),(1452,'edu.ncsu.csc.itrust.beans.SurveyResultBean:setPercentSatisfactionResults(float)',1,0,0),(1453,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1454,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.SurveyResultBean)',1,0,0),(1455,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1456,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1457,'edu.ncsu.csc.itrust.beans.TransactionBean:<init>()',1,0,0),(1458,'edu.ncsu.csc.itrust.beans.TransactionBean:setAddedInfo(java.lang.String)',1,0,0),(1459,'edu.ncsu.csc.itrust.beans.TransactionBean:setLoggedInMID(long)',1,0,0),(1460,'edu.ncsu.csc.itrust.beans.TransactionBean:setSecondaryMID(long)',1,0,0),(1461,'edu.ncsu.csc.itrust.beans.TransactionBean:setTimeLogged(java.sql.Timestamp)',1,0,0),(1462,'edu.ncsu.csc.itrust.enums.TransactionType:parse(int)',1,0,0),(1463,'edu.ncsu.csc.itrust.beans.TransactionBean:setTransactionType(edu.ncsu.csc.itrust.enums.TransactionType)',1,0,0),(1464,'edu.ncsu.csc.itrust.beans.TransactionBean:setTransactionID(long)',1,0,0),(1465,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1466,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.TransactionBean)',1,0,0),(1467,'edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1468,'edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1469,'edu.ncsu.csc.itrust.beans.DiagnosisBean:<init>(java.lang.String,java.lang.String,java.lang.String)',1,0,0),(1470,'edu.ncsu.csc.itrust.beans.DiagnosisBean:setOvDiagnosisID(long)',1,0,0),(1471,'edu.ncsu.csc.itrust.beans.DiagnosisBean:setVisitID(long)',1,0,0),(1472,'edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1473,'edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.DiagnosisBean)',1,0,0),(1474,'edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadList(java.sql.ResultSet)',1,0,0),(1475,'edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1476,'edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1477,'edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm)',1,0,0),(1478,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1479,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1480,'edu.ncsu.csc.itrust.beans.PatientInstructionsBean:<init>()',1,0,0),(1481,'edu.ncsu.csc.itrust.beans.PatientInstructionsBean:setName(java.lang.String)',1,0,0),(1482,'edu.ncsu.csc.itrust.beans.PatientInstructionsBean:setComment(java.lang.String)',1,0,0),(1483,'edu.ncsu.csc.itrust.beans.PatientInstructionsBean:setUrl(java.lang.String)',1,0,0),(1484,'edu.ncsu.csc.itrust.beans.PatientInstructionsBean:setModified(java.util.Date)',1,0,0),(1485,'edu.ncsu.csc.itrust.beans.PatientInstructionsBean:setId(long)',1,0,0),(1486,'edu.ncsu.csc.itrust.beans.PatientInstructionsBean:setVisitID(long)',1,0,0),(1487,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientInstructionsBean)',1,0,0),(1488,'edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getVisitID()',1,0,0),(1489,'edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getModified()',1,0,0),(1490,'edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getName()',1,0,0),(1491,'edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getUrl()',1,0,0),(1492,'edu.ncsu.csc.itrust.beans.PatientInstructionsBean:getComment()',1,0,0),(1493,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1494,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1495,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1496,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.HealthRecord)',1,0,0),(1497,'edu.ncsu.csc.itrust.beans.HealthRecord:getPatientID()',1,0,0),(1498,'edu.ncsu.csc.itrust.beans.HealthRecord:getHeight()',1,0,0),(1499,'edu.ncsu.csc.itrust.beans.HealthRecord:getWeight()',1,0,0),(1500,'edu.ncsu.csc.itrust.beans.HealthRecord:getSmokingStatus()',1,0,0),(1501,'edu.ncsu.csc.itrust.beans.HealthRecord:getPersonnelID()',1,0,0),(1502,'edu.ncsu.csc.itrust.beans.HealthRecord:setDateRecorded(java.sql.Timestamp)',1,0,0),(1503,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1504,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:<init>()',1,0,0),(1505,'edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader:<init>()',1,0,0),(1506,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1507,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1508,'edu.ncsu.csc.itrust.beans.PrescriptionReportBean:<init>()',1,0,0),(1509,'edu.ncsu.csc.itrust.beans.PrescriptionReportBean:setOfficeVisit(edu.ncsu.csc.itrust.beans.OfficeVisitBean)',1,0,0),(1510,'edu.ncsu.csc.itrust.beans.PrescriptionReportBean:setPrescription(edu.ncsu.csc.itrust.beans.PrescriptionBean)',1,0,0),(1511,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1512,'edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PrescriptionReportBean)',1,0,0),(1513,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1514,'edu.ncsu.csc.itrust.beans.OperationalProfile:getTotalCount()',1,0,0),(1515,'edu.ncsu.csc.itrust.beans.OperationalProfile:getPatientCount()',1,0,0),(1516,'edu.ncsu.csc.itrust.beans.OperationalProfile:getPersonnelCount()',1,0,0),(1517,'edu.ncsu.csc.itrust.beans.OperationalProfile:setNumTotalTransactions(int)',1,0,0),(1518,'edu.ncsu.csc.itrust.beans.OperationalProfile:setNumPatientTransactions(int)',1,0,0),(1519,'edu.ncsu.csc.itrust.beans.OperationalProfile:setNumPersonnelTransactions(int)',1,0,0),(1520,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1521,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OperationalProfile)',1,0,0),(1522,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1523,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1524,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.MessageBean)',1,0,0),(1525,'edu.ncsu.csc.itrust.beans.MessageBean:getParentMessageId()',1,0,0),(1526,'edu.ncsu.csc.itrust.beans.MessageBean:setMessageId(long)',1,0,0),(1527,'edu.ncsu.csc.itrust.beans.MessageBean:setSentDate(java.sql.Timestamp)',1,0,0),(1528,'edu.ncsu.csc.itrust.beans.MessageBean:setParentMessageId(long)',1,0,0),(1529,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1530,'edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadList(java.sql.ResultSet)',1,0,0),(1531,'edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1532,'edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.ApptTypeBean)',1,0,0),(1533,'edu.ncsu.csc.itrust.beans.ApptTypeBean:<init>()',1,0,0),(1534,'edu.ncsu.csc.itrust.beans.ApptTypeBean:setName(java.lang.String)',1,0,0),(1535,'edu.ncsu.csc.itrust.beans.ApptTypeBean:setDuration(int)',1,0,0),(1536,'edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1537,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadList(java.sql.ResultSet)',1,0,0),(1538,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingle(java.sql.ResultSet)',1,0,0),(1539,'edu.ncsu.csc.itrust.beans.PatientBean:<init>()',1,0,0),(1540,'edu.ncsu.csc.itrust.beans.PatientBean:setFirstName(java.lang.String)',1,0,0),(1541,'edu.ncsu.csc.itrust.beans.PatientBean:setLastName(java.lang.String)',1,0,0),(1542,'edu.ncsu.csc.itrust.beans.PatientBean:setDateOfBirthStr(java.lang.String)',1,0,0),(1543,'edu.ncsu.csc.itrust.beans.PatientBean:setDateOfDeathStr(java.lang.String)',1,0,0),(1544,'edu.ncsu.csc.itrust.beans.PatientBean:setCauseOfDeath(java.lang.String)',1,0,0),(1545,'edu.ncsu.csc.itrust.beans.PatientBean:setEmail(java.lang.String)',1,0,0),(1546,'edu.ncsu.csc.itrust.beans.PatientBean:setStreetAddress1(java.lang.String)',1,0,0),(1547,'edu.ncsu.csc.itrust.beans.PatientBean:setStreetAddress2(java.lang.String)',1,0,0),(1548,'edu.ncsu.csc.itrust.beans.PatientBean:setCity(java.lang.String)',1,0,0),(1549,'edu.ncsu.csc.itrust.beans.PatientBean:setState(java.lang.String)',1,0,0),(1550,'edu.ncsu.csc.itrust.beans.PatientBean:setZip1(java.lang.String)',1,0,0),(1551,'edu.ncsu.csc.itrust.beans.PatientBean:setZip2(java.lang.String)',1,0,0),(1552,'edu.ncsu.csc.itrust.beans.PatientBean:setPhone1(java.lang.String)',1,0,0),(1553,'edu.ncsu.csc.itrust.beans.PatientBean:setPhone2(java.lang.String)',1,0,0),(1554,'edu.ncsu.csc.itrust.beans.PatientBean:setPhone3(java.lang.String)',1,0,0),(1555,'edu.ncsu.csc.itrust.beans.PatientBean:setEmergencyName(java.lang.String)',1,0,0),(1556,'edu.ncsu.csc.itrust.beans.PatientBean:setEmergencyPhone1(java.lang.String)',1,0,0),(1557,'edu.ncsu.csc.itrust.beans.PatientBean:setEmergencyPhone2(java.lang.String)',1,0,0),(1558,'edu.ncsu.csc.itrust.beans.PatientBean:setEmergencyPhone3(java.lang.String)',1,0,0),(1559,'edu.ncsu.csc.itrust.beans.PatientBean:setIcName(java.lang.String)',1,0,0),(1560,'edu.ncsu.csc.itrust.beans.PatientBean:setIcAddress1(java.lang.String)',1,0,0),(1561,'edu.ncsu.csc.itrust.beans.PatientBean:setIcAddress2(java.lang.String)',1,0,0),(1562,'edu.ncsu.csc.itrust.beans.PatientBean:setIcCity(java.lang.String)',1,0,0),(1563,'edu.ncsu.csc.itrust.beans.PatientBean:setIcState(java.lang.String)',1,0,0),(1564,'edu.ncsu.csc.itrust.beans.PatientBean:setIcZip1(java.lang.String)',1,0,0),(1565,'edu.ncsu.csc.itrust.beans.PatientBean:setIcZip2(java.lang.String)',1,0,0),(1566,'edu.ncsu.csc.itrust.beans.PatientBean:setIcPhone1(java.lang.String)',1,0,0),(1567,'edu.ncsu.csc.itrust.beans.PatientBean:setIcPhone2(java.lang.String)',1,0,0),(1568,'edu.ncsu.csc.itrust.beans.PatientBean:setIcPhone3(java.lang.String)',1,0,0),(1569,'edu.ncsu.csc.itrust.beans.PatientBean:setIcID(java.lang.String)',1,0,0),(1570,'edu.ncsu.csc.itrust.beans.PatientBean:setMotherMID(java.lang.String)',1,0,0),(1571,'edu.ncsu.csc.itrust.beans.PatientBean:setFatherMID(java.lang.String)',1,0,0),(1572,'edu.ncsu.csc.itrust.beans.PatientBean:setTopicalNotes(java.lang.String)',1,0,0),(1573,'edu.ncsu.csc.itrust.beans.PatientBean:setCreditCardType(java.lang.String)',1,0,0),(1574,'edu.ncsu.csc.itrust.beans.PatientBean:setCreditCardNumber(java.lang.String)',1,0,0),(1575,'edu.ncsu.csc.itrust.beans.PatientBean:setDirectionsToHome(java.lang.String)',1,0,0),(1576,'edu.ncsu.csc.itrust.beans.PatientBean:setReligion(java.lang.String)',1,0,0),(1577,'edu.ncsu.csc.itrust.beans.PatientBean:setLanguage(java.lang.String)',1,0,0),(1578,'edu.ncsu.csc.itrust.beans.PatientBean:setSpiritualPractices(java.lang.String)',1,0,0),(1579,'edu.ncsu.csc.itrust.beans.PatientBean:setAlternateName(java.lang.String)',1,0,0),(1580,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadSingleHistory(java.sql.ResultSet)',1,0,0),(1581,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:<init>()',1,0,0),(1582,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setChangeMID(long)',1,0,0),(1583,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setChangeDateStr(java.lang.String)',1,0,0),(1584,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setMID(long)',1,0,0),(1585,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setFirstName(java.lang.String)',1,0,0),(1586,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setLastName(java.lang.String)',1,0,0),(1587,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setDateOfBirthStr(java.lang.String)',1,0,0),(1588,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setDateOfDeathStr(java.lang.String)',1,0,0),(1589,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setCauseOfDeath(java.lang.String)',1,0,0),(1590,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setEmail(java.lang.String)',1,0,0),(1591,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setStreetAddress1(java.lang.String)',1,0,0),(1592,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setStreetAddress2(java.lang.String)',1,0,0),(1593,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setCity(java.lang.String)',1,0,0),(1594,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setState(java.lang.String)',1,0,0),(1595,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setZip1(java.lang.String)',1,0,0),(1596,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setZip2(java.lang.String)',1,0,0),(1597,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setPhone1(java.lang.String)',1,0,0),(1598,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setPhone2(java.lang.String)',1,0,0),(1599,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setPhone3(java.lang.String)',1,0,0),(1600,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setEmergencyName(java.lang.String)',1,0,0),(1601,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setEmergencyPhone1(java.lang.String)',1,0,0),(1602,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setEmergencyPhone2(java.lang.String)',1,0,0),(1603,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setEmergencyPhone3(java.lang.String)',1,0,0),(1604,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcName(java.lang.String)',1,0,0),(1605,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcAddress1(java.lang.String)',1,0,0),(1606,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcAddress2(java.lang.String)',1,0,0),(1607,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcCity(java.lang.String)',1,0,0),(1608,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcState(java.lang.String)',1,0,0),(1609,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcZip1(java.lang.String)',1,0,0),(1610,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcZip2(java.lang.String)',1,0,0),(1611,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcPhone1(java.lang.String)',1,0,0),(1612,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcPhone2(java.lang.String)',1,0,0),(1613,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcPhone3(java.lang.String)',1,0,0),(1614,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setIcID(java.lang.String)',1,0,0),(1615,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setMotherMID(java.lang.String)',1,0,0),(1616,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setFatherMID(java.lang.String)',1,0,0),(1617,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setTopicalNotes(java.lang.String)',1,0,0),(1618,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setCreditCardType(java.lang.String)',1,0,0),(1619,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setCreditCardNumber(java.lang.String)',1,0,0),(1620,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setMessageFilter(java.lang.String)',1,0,0),(1621,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setDirectionsToHome(java.lang.String)',1,0,0),(1622,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setReligion(java.lang.String)',1,0,0),(1623,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setLanguage(java.lang.String)',1,0,0),(1624,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setSpiritualPractices(java.lang.String)',1,0,0),(1625,'edu.ncsu.csc.itrust.beans.PatientHistoryBean:setAlternateName(java.lang.String)',1,0,0),(1626,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.PatientBean)',1,0,0),(1627,'edu.ncsu.csc.itrust.beans.PatientBean:getIcName()',1,0,0),(1628,'edu.ncsu.csc.itrust.beans.PatientBean:getIcAddress1()',1,0,0),(1629,'edu.ncsu.csc.itrust.beans.PatientBean:getIcAddress2()',1,0,0),(1630,'edu.ncsu.csc.itrust.beans.PatientBean:getIcID()',1,0,0),(1631,'edu.ncsu.csc.itrust.beans.PatientBean:getDateOfBirthStr()',1,0,0),(1632,'edu.ncsu.csc.itrust.beans.PatientBean:getDateOfDeathStr()',1,0,0),(1633,'edu.ncsu.csc.itrust.beans.PatientBean:getMotherMID()',1,0,0),(1634,'edu.ncsu.csc.itrust.beans.PatientBean:getFatherMID()',1,0,0),(1635,'edu.ncsu.csc.itrust.enums.BloodType:getName()',1,0,0),(1636,'edu.ncsu.csc.itrust.beans.PatientBean:getEthnicity()',1,0,0),(1637,'edu.ncsu.csc.itrust.enums.Ethnicity:getName()',1,0,0),(1638,'edu.ncsu.csc.itrust.beans.PatientBean:getTopicalNotes()',1,0,0),(1639,'edu.ncsu.csc.itrust.beans.PatientBean:getCreditCardType()',1,0,0),(1640,'edu.ncsu.csc.itrust.beans.PatientBean:getCreditCardNumber()',1,0,0),(1641,'edu.ncsu.csc.itrust.beans.PatientBean:getMessageFilter()',1,0,0),(1642,'edu.ncsu.csc.itrust.beans.PatientBean:getDirectionsToHome()',1,0,0),(1643,'edu.ncsu.csc.itrust.beans.PatientBean:getReligion()',1,0,0),(1644,'edu.ncsu.csc.itrust.beans.PatientBean:getLanguage()',1,0,0),(1645,'edu.ncsu.csc.itrust.beans.PatientBean:getSpiritualPractices()',1,0,0),(1646,'edu.ncsu.csc.itrust.beans.PatientBean:getAlternateName()',1,0,0),(1647,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:loadParameters(java.sql.PreparedStatement,java.lang.Object)',1,0,0),(1648,'edu.ncsu.csc.itrust.charts.AdverseEventsData:produceDataset(java.util.Map)',1,0,0),(1649,'edu.ncsu.csc.itrust.charts.AdverseEventsData$1:<init>(edu.ncsu.csc.itrust.charts.AdverseEventsData)',1,0,0),(1650,'edu.ncsu.csc.itrust.beans.AdverseEventBean:getDate()',1,0,0),(1651,'edu.ncsu.csc.itrust.charts.DiagnosisTrendData:<init>()',1,0,0),(1652,'edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean:<init>()',1,0,0),(1653,'edu.ncsu.csc.itrust.charts.DiagnosisTrendData:initializeDiagnosisStatistics(edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean,java.lang.String)',1,0,0),(1654,'edu.ncsu.csc.itrust.charts.DiagnosisTrendData:initializeAvgDiagnosisStatistics(edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean,edu.ncsu.csc.itrust.beans.DiagnosisStatisticsBean,java.lang.String)',1,0,0),(1655,'edu.ncsu.csc.itrust.charts.DiagnosisTrendData:produceDataset(java.util.Map)',1,0,0),(1656,'edu.ncsu.csc.itrust.charts.DiagnosisTrendData$1:<init>(edu.ncsu.csc.itrust.charts.DiagnosisTrendData)',1,0,0),(1657,'edu.ncsu.csc.itrust.charts.PatientLabResults:hasData()',1,0,0),(1658,'edu.ncsu.csc.itrust.charts.PatientLabResults:produceDataset(java.util.Map)',1,0,0),(1659,'edu.ncsu.csc.itrust.charts.PatientLabResults$1:<init>(edu.ncsu.csc.itrust.charts.PatientLabResults)',1,0,0),(1660,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getNumericalResultAsDouble()',1,0,0),(1661,'edu.ncsu.csc.itrust.charts.HealthData:hasData()',1,0,0),(1662,'edu.ncsu.csc.itrust.beans.HealthRecord:getDateRecorded()',1,0,0),(1663,'edu.ncsu.csc.itrust.charts.HealthData:produceDataset(java.util.Map)',1,0,0),(1664,'edu.ncsu.csc.itrust.charts.HealthData$1:<init>(edu.ncsu.csc.itrust.charts.HealthData)',1,0,0),(1665,'edu.ncsu.csc.itrust.dao.DAOFactory:<init>()',1,0,0),(1666,'edu.ncsu.csc.itrust.dao.ProductionConnectionDriver:<init>()',1,0,0),(1667,'edu.ncsu.csc.itrust.dao.IConnectionDriver:getConnection()',1,0,0),(1668,'edu.ncsu.csc.itrust.dao.mysql.AccessDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1669,'edu.ncsu.csc.itrust.dao.mysql.AllergyDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1670,'edu.ncsu.csc.itrust.dao.mysql.ApptDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1671,'edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1672,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1673,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1674,'edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1675,'edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1676,'edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1677,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1678,'edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1679,'edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1680,'edu.ncsu.csc.itrust.dao.DAOFactory:getProfilePhotoDAO()',1,0,0),(1681,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1682,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1683,'edu.ncsu.csc.itrust.dao.DAOFactory:getRiskDAO()',1,0,0),(1684,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1685,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1686,'edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1687,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1688,'edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1689,'edu.ncsu.csc.itrust.dao.mysql.SurveyDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1690,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1691,'edu.ncsu.csc.itrust.dao.mysql.LOINCDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1692,'edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1693,'edu.ncsu.csc.itrust.dao.mysql.MessageDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1694,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1695,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1696,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionsDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1697,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1698,'edu.ncsu.csc.itrust.dao.mysql.ProceduresDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1699,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1700,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:<init>(edu.ncsu.csc.itrust.dao.DAOFactory)',1,0,0),(1701,'edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:<init>(boolean)',1,0,0),(1702,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:setValues(java.sql.PreparedStatement,edu.ncsu.csc.itrust.beans.OfficeVisitBean)',1,0,0),(1703,'edu.ncsu.csc.itrust.DBUtil:getLastInsert(java.sql.Connection)',1,0,0),(1704,'edu.ncsu.csc.itrust.DBUtil:closeConnection(java.sql.Connection,java.sql.PreparedStatement)',1,0,0),(1705,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:getNotes()',1,0,0),(1706,'edu.ncsu.csc.itrust.beans.OfficeVisitBean:getHospitalID()',1,0,0),(1707,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:loadFullOfficeVist(java.sql.ResultSet,long)',1,0,0),(1708,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisitsWithNoSurvey(long)',1,0,0),(1709,'edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO:getOfficeVisitsFromHospital(java.lang.String)',1,0,0),(1710,'edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader:<init>()',1,0,0),(1711,'edu.ncsu.csc.itrust.beans.ApptBean:getApptID()',1,0,0),(1712,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:<init>(boolean)',1,0,0),(1713,'edu.ncsu.csc.itrust.beans.ProcedureBean:getVisitID()',1,0,0),(1714,'edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader:<init>()',1,0,0),(1715,'edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO:getHospital(java.lang.String)',1,0,0),(1716,'edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader:<init>()',1,0,0),(1717,'edu.ncsu.csc.itrust.beans.MessageBean:getMessageId()',1,0,0),(1718,'edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader:<init>()',1,0,0),(1719,'edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader:<init>()',1,0,0),(1720,'edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader:<init>()',1,0,0),(1721,'edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO:getReportsFor(long)',1,0,0),(1722,'edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader:<init>()',1,0,0),(1723,'edu.ncsu.csc.itrust.beans.loaders.PatientInstructionsBeanLoader:<init>()',1,0,0),(1724,'edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader:<init>()',1,0,0),(1725,'edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader:<init>()',1,0,0),(1726,'edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader:<init>()',1,0,0),(1727,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getAllTransactions()',1,0,0),(1728,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:logTransaction(edu.ncsu.csc.itrust.enums.TransactionType,long)',1,0,0),(1729,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:addAndSortRoles(java.util.List,long,boolean)',1,0,0),(1730,'edu.ncsu.csc.itrust.dao.mysql.TransactionDAO:getOperationalProfile()',1,0,0),(1731,'edu.ncsu.csc.itrust.beans.TransactionBean:getLoggedInMID()',1,0,0),(1732,'edu.ncsu.csc.itrust.beans.TransactionBean:setRole(java.lang.String)',1,0,0),(1733,'edu.ncsu.csc.itrust.beans.TransactionBean:getRole()',1,0,0),(1734,'edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader:<init>()',1,0,0),(1735,'edu.ncsu.csc.itrust.DateUtil:setSQLMonthRange(java.sql.Date,int,int,java.sql.Date,int,int)',1,0,0),(1736,'edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader:<init>()',1,0,0),(1737,'edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader:<init>()',1,0,0),(1738,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getAllEmails()',1,0,0),(1739,'edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO:getEmailWithBody(java.lang.String)',1,0,0),(1740,'edu.ncsu.csc.itrust.dao.mysql.FamilyDAO:getFamilyMembers(long,java.lang.String,java.lang.String,boolean)',1,0,0),(1741,'edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader:<init>(java.lang.String)',1,0,0),(1742,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:<clinit>()',1,0,0),(1743,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:loadDefaultProfilePhoto()',1,0,0),(1744,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:store(long,java.awt.image.BufferedImage)',1,0,0),(1745,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:get(long)',1,0,0),(1746,'edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO:removePhoto(long)',1,0,0),(1747,'edu.ncsu.csc.itrust.dao.mysql.DiagnosesDAO:getWeeklyCounts(java.lang.String,java.lang.String,java.util.Date,java.util.Date)',1,0,0),(1748,'edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader:<init>()',1,0,0),(1749,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:getAllORCodes()',1,0,0),(1750,'edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO:getORCode(java.lang.String)',1,0,0),(1751,'edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader:<init>()',1,0,0),(1752,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getLabProceduresForPatientForNextMonth(long)',1,0,0),(1753,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProceduresForDocOV(long,long)',1,0,0),(1754,'edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO:getAllLabProcedures()',1,0,0),(1755,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getCommentary()',1,0,0),(1756,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getResults()',1,0,0),(1757,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getLTID()',1,0,0),(1758,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getPriorityCode()',1,0,0),(1759,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getNumericalResult()',1,0,0),(1760,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getLowerBound()',1,0,0),(1761,'edu.ncsu.csc.itrust.beans.LabProcedureBean:getUpperBound()',1,0,0),(1762,'edu.ncsu.csc.itrust.beans.LabProcedureBean:isViewedByPatient()',1,0,0),(1763,'edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader:<init>()',1,0,0),(1764,'edu.ncsu.csc.itrust.beans.LOINCbean:getComponent()',1,0,0),(1765,'edu.ncsu.csc.itrust.beans.LOINCbean:getKindOfProperty()',1,0,0),(1766,'edu.ncsu.csc.itrust.beans.LOINCbean:getTimeAspect()',1,0,0),(1767,'edu.ncsu.csc.itrust.beans.LOINCbean:getSystem()',1,0,0),(1768,'edu.ncsu.csc.itrust.beans.LOINCbean:getScaleType()',1,0,0),(1769,'edu.ncsu.csc.itrust.beans.LOINCbean:getMethodType()',1,0,0),(1770,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:$SWITCH_TABLE$edu$ncsu$csc$itrust$enums$Role()',1,0,0),(1771,'edu.ncsu.csc.itrust.enums.Role:ordinal()',1,0,0),(1772,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:insertLoginFailureRow(java.lang.String,int,java.sql.Connection)',1,0,0),(1773,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:insertResetPasswordRow(java.lang.String,int,java.sql.Connection)',1,0,0),(1774,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:updateResetFailuresToZero(java.lang.String,java.sql.Connection)',1,0,0),(1775,'edu.ncsu.csc.itrust.dao.mysql.AuthDAO:updateFailuresToZero(java.lang.String,java.sql.Connection)',1,0,0),(1776,'edu.ncsu.csc.itrust.enums.Role:values()',1,0,0),(1777,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$PatientReferralListQuery:<init>(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO,edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(1778,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:<init>(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO,edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(1779,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReceiverReferralListQuery:<init>(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO,edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(1780,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:doquery(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)',1,0,0),(1781,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:getUserField()',1,0,0),(1782,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:buildSort(java.lang.String,edu.ncsu.csc.itrust.enums.SortDirection)',1,0,0),(1783,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$ReferralListQuery:getUserId()',1,0,0),(1784,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:access$0(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO)',1,0,0),(1785,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO$SenderReferralListQuery:<init>(edu.ncsu.csc.itrust.dao.mysql.ReferralDAO,edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(1786,'edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader:<init>()',1,0,0),(1787,'edu.ncsu.csc.itrust.beans.loaders.VerboseReferralBeanLoader:<init>()',1,0,0),(1788,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsSentFrom(long)',1,0,0),(1789,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsSentTo(long)',1,0,0),(1790,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReferralsForPatient(long)',1,0,0),(1791,'edu.ncsu.csc.itrust.dao.mysql.ReferralDAO:getReceiverQuery(long)',1,0,0),(1792,'edu.ncsu.csc.itrust.beans.loaders.SurveyLoader:<init>()',1,0,0),(1793,'edu.ncsu.csc.itrust.beans.SurveyBean:getVisitID()',1,0,0),(1794,'edu.ncsu.csc.itrust.beans.SurveyBean:getWaitingRoomMinutes()',1,0,0),(1795,'edu.ncsu.csc.itrust.beans.SurveyBean:getExamRoomMinutes()',1,0,0),(1796,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:buildPreps(int)',1,0,0),(1797,'edu.ncsu.csc.itrust.dao.mysql.PrescriptionReportDAO:prepareOVIDs(java.sql.PreparedStatement,java.util.List)',1,0,0),(1798,'edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader:<init>()',1,0,0),(1799,'edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader:<init>()',1,0,0),(1800,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getAllCPTCodes()',1,0,0),(1801,'edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO:getCPTCode(java.lang.String)',1,0,0),(1802,'edu.ncsu.csc.itrust.beans.ProcedureBean:getAttribute()',1,0,0),(1803,'edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader:<init>()',1,0,0),(1804,'edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader:<init>()',1,0,0),(1805,'edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO:getNextID(edu.ncsu.csc.itrust.enums.Role)',1,0,0),(1806,'edu.ncsu.csc.itrust.enums.Role:getMidFirstDigit()',1,0,0),(1807,'edu.ncsu.csc.itrust.enums.Role:name()',1,0,0),(1808,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader:<init>()',1,0,0),(1809,'edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader:<init>()',1,0,0),(1810,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:<init>(long)',1,0,0),(1811,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getHeight()',1,0,0),(1812,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getWeight()',1,0,0),(1813,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getPedometerReading()',1,0,0),(1814,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getSystolicBloodPressure()',1,0,0),(1815,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getDiastolicBloodPressure()',1,0,0),(1816,'edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean:getGlucoseLevel()',1,0,0),(1817,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:getNumberOfDailyEntries(long,java.lang.String)',1,0,0),(1818,'edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO:validatePR(long,long)',1,0,0),(1819,'edu.ncsu.csc.itrust.beans.TelemedicineBean:isSystolicBloodPressureAllowed()',1,0,0),(1820,'edu.ncsu.csc.itrust.beans.TelemedicineBean:isDiastolicBloodPressureAllowed()',1,0,0),(1821,'edu.ncsu.csc.itrust.beans.TelemedicineBean:isGlucoseLevelAllowed()',1,0,0),(1822,'edu.ncsu.csc.itrust.beans.TelemedicineBean:isHeightAllowed()',1,0,0),(1823,'edu.ncsu.csc.itrust.beans.TelemedicineBean:isWeightAllowed()',1,0,0),(1824,'edu.ncsu.csc.itrust.beans.TelemedicineBean:isPedometerReadingAllowed()',1,0,0),(1825,'edu.ncsu.csc.itrust.dao.mysql.AccessDAO:insertDefaultTimeout(java.sql.Connection,int)',1,0,0),(1826,'edu.ncsu.csc.itrust.beans.loaders.PatientLoader:<init>()',1,0,0),(1827,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:addHistory(long,long)',1,0,0),(1828,'edu.ncsu.csc.itrust.dao.mysql.PatientDAO:getAllPatients()',1,0,0),(1829,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hasFamilyHistory(long,double,double)',1,0,0),(1830,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:getFamilyMembers(long)',1,0,0),(1831,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hadPriorDiagnoses(long,double,double)',1,0,0),(1832,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hadChildhoodInfection(long,double[])',1,0,0),(1833,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:createPrepared(int)',1,0,0),(1834,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:setICDs(int,java.sql.PreparedStatement,double[])',1,0,0),(1835,'edu.ncsu.csc.itrust.dao.mysql.RiskDAO:hasSmoked(long)',1,0,0),(1836,'edu.ncsu.csc.itrust.enums.PrescriptionAlerts:<clinit>()',1,0,0),(1837,'edu.ncsu.csc.itrust.enums.PrescriptionAlerts:<init>(java.lang.String,int,java.lang.String,java.lang.String)',1,0,0),(1838,'edu.ncsu.csc.itrust.enums.PrescriptionAlerts:values()',1,0,0),(1839,'edu.ncsu.csc.itrust.enums.PrescriptionAlerts:getNDCode()',1,0,0),(1840,'edu.ncsu.csc.itrust.enums.Role:<clinit>()',1,0,0),(1841,'edu.ncsu.csc.itrust.enums.Role:<init>(java.lang.String,int,java.lang.String,java.lang.String,long)',1,0,0),(1842,'edu.ncsu.csc.itrust.enums.State:<clinit>()',1,0,0),(1843,'edu.ncsu.csc.itrust.enums.State:<init>(java.lang.String,int,java.lang.String)',1,0,0),(1844,'edu.ncsu.csc.itrust.enums.State:getAbbrev()',1,0,0),(1845,'edu.ncsu.csc.itrust.enums.State:toString()',1,0,0),(1846,'edu.ncsu.csc.itrust.enums.State:parse(java.lang.String)',1,0,0),(1847,'edu.ncsu.csc.itrust.enums.State:values()',1,0,0),(1848,'edu.ncsu.csc.itrust.enums.State:getName()',1,0,0),(1849,'edu.ncsu.csc.itrust.enums.Ethnicity:<clinit>()',1,0,0),(1850,'edu.ncsu.csc.itrust.enums.Ethnicity:<init>(java.lang.String,int,java.lang.String)',1,0,0),(1851,'edu.ncsu.csc.itrust.enums.Ethnicity:toString()',1,0,0),(1852,'edu.ncsu.csc.itrust.enums.Ethnicity:values()',1,0,0),(1853,'edu.ncsu.csc.itrust.enums.Gender:<clinit>()',1,0,0),(1854,'edu.ncsu.csc.itrust.enums.Gender:<init>(java.lang.String,int,java.lang.String)',1,0,0),(1855,'edu.ncsu.csc.itrust.enums.Gender:values()',1,0,0),(1856,'edu.ncsu.csc.itrust.enums.BloodType:<clinit>()',1,0,0),(1857,'edu.ncsu.csc.itrust.enums.BloodType:<init>(java.lang.String,int,java.lang.String)',1,0,0),(1858,'edu.ncsu.csc.itrust.enums.BloodType:toString()',1,0,0),(1859,'edu.ncsu.csc.itrust.enums.BloodType:values()',1,0,0),(1860,'edu.ncsu.csc.itrust.enums.TransactionType:<clinit>()',1,0,0),(1861,'edu.ncsu.csc.itrust.enums.TransactionType:<init>(java.lang.String,int,int,java.lang.String,java.lang.String,boolean)',1,0,0),(1862,'edu.ncsu.csc.itrust.enums.SortDirection:<clinit>()',1,0,0),(1863,'edu.ncsu.csc.itrust.enums.SortDirection:<init>(java.lang.String,int,java.lang.String)',1,0,0),(1864,'edu.ncsu.csc.itrust.enums.SortDirection:parse(java.lang.String)',1,0,0),(1865,'edu.ncsu.csc.itrust.enums.SortDirection:values()',1,0,0),(1866,'edu.ncsu.csc.itrust.exception.NoHealthRecordsException:<init>()',1,0,0),(1867,'edu.ncsu.csc.itrust.exception.DBException:getExtendedMessage()',1,0,0),(1868,'edu.ncsu.csc.itrust.exception.iTrustException:getExtendedMessage()',1,0,0),(1869,'edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(1870,'edu.ncsu.csc.itrust.risk.Type1DiabetesRisks:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(1871,'edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(1872,'edu.ncsu.csc.itrust.risk.RiskChecker:isAtRisk()',1,0,0),(1873,'edu.ncsu.csc.itrust.risk.RiskChecker:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(1874,'edu.ncsu.csc.itrust.risk.HeartDiseaseRisks:getDiseaseRiskFactors()',1,0,0),(1875,'edu.ncsu.csc.itrust.risk.factors.GenderFactor:<init>(edu.ncsu.csc.itrust.beans.PatientBean,edu.ncsu.csc.itrust.enums.Gender)',1,0,0),(1876,'edu.ncsu.csc.itrust.risk.factors.AgeFactor:<init>(edu.ncsu.csc.itrust.beans.PatientBean,int)',1,0,0),(1877,'edu.ncsu.csc.itrust.risk.factors.EthnicityFactor:<init>(edu.ncsu.csc.itrust.beans.PatientBean,edu.ncsu.csc.itrust.enums.Ethnicity[])',1,0,0),(1878,'edu.ncsu.csc.itrust.risk.factors.WeightFactor:<init>(edu.ncsu.csc.itrust.beans.HealthRecord,int)',1,0,0),(1879,'edu.ncsu.csc.itrust.risk.factors.HypertensionFactor:<init>(edu.ncsu.csc.itrust.beans.HealthRecord)',1,0,0),(1880,'edu.ncsu.csc.itrust.risk.factors.CholesterolFactor:<init>(edu.ncsu.csc.itrust.beans.HealthRecord)',1,0,0),(1881,'edu.ncsu.csc.itrust.risk.factors.SmokingFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long)',1,0,0),(1882,'edu.ncsu.csc.itrust.risk.factors.PriorDiagnosisFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,double,double)',1,0,0),(1883,'edu.ncsu.csc.itrust.risk.factors.FamilyHistoryFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,double,double)',1,0,0),(1884,'edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:qualifiesForDisease()',1,0,0),(1885,'edu.ncsu.csc.itrust.risk.Type2DiabetesRisks:getDiseaseRiskFactors()',1,0,0),(1886,'edu.ncsu.csc.itrust.risk.Type1DiabetesRisks:qualifiesForDisease()',1,0,0),(1887,'edu.ncsu.csc.itrust.risk.Type1DiabetesRisks:getDiseaseRiskFactors()',1,0,0),(1888,'edu.ncsu.csc.itrust.risk.factors.ChildhoodInfectionFactor:<init>(edu.ncsu.csc.itrust.dao.DAOFactory,long,double[])',1,0,0),(1889,'edu.ncsu.csc.itrust.risk.RiskChecker:qualifiesForDisease()',1,0,0),(1890,'edu.ncsu.csc.itrust.risk.RiskChecker:getDiseaseRiskFactors()',1,0,0),(1891,'edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:hasRiskFactor()',1,0,0),(1892,'edu.ncsu.csc.itrust.risk.RiskChecker:getPatientRiskFactors()',1,0,0),(1893,'edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:<init>()',1,0,0),(1894,'edu.ncsu.csc.itrust.risk.factors.ChildhoodInfectionFactor:hasFactor()',1,0,0),(1895,'edu.ncsu.csc.itrust.risk.factors.HypertensionFactor:hasFactor()',1,0,0),(1896,'edu.ncsu.csc.itrust.risk.factors.SmokingFactor:hasFactor()',1,0,0),(1897,'edu.ncsu.csc.itrust.risk.factors.CholesterolFactor:hasFactor()',1,0,0),(1898,'edu.ncsu.csc.itrust.risk.factors.WeightFactor:hasFactor()',1,0,0),(1899,'edu.ncsu.csc.itrust.beans.HealthRecord:getBodyMassIndex()',1,0,0),(1900,'edu.ncsu.csc.itrust.enums.Ethnicity[]:clone()',1,0,0),(1901,'edu.ncsu.csc.itrust.risk.factors.EthnicityFactor:getDescription()',1,0,0),(1902,'edu.ncsu.csc.itrust.risk.factors.EthnicityFactor:hasFactor()',1,0,0),(1903,'edu.ncsu.csc.itrust.enums.Ethnicity:equals(java.lang.Object)',1,0,0),(1904,'edu.ncsu.csc.itrust.risk.factors.FamilyHistoryFactor:hasFactor()',1,0,0),(1905,'edu.ncsu.csc.itrust.risk.factors.AgeFactor:hasFactor()',1,0,0),(1906,'edu.ncsu.csc.itrust.risk.factors.PriorDiagnosisFactor:hasFactor()',1,0,0),(1907,'edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor:hasFactor()',1,0,0),(1908,'edu.ncsu.csc.itrust.risk.factors.GenderFactor:getDescription()',1,0,0),(1909,'edu.ncsu.csc.itrust.risk.factors.GenderFactor:hasFactor()',1,0,0),(1910,'edu.ncsu.csc.itrust.enums.Gender:equals(java.lang.Object)',1,0,0),(1911,'edu.ncsu.csc.itrust.validate.ValidationFormat:<clinit>()',1,0,0),(1912,'edu.ncsu.csc.itrust.validate.ValidationFormat:<init>(java.lang.String,int,java.lang.String,java.lang.String)',1,0,0),(1913,'edu.ncsu.csc.itrust.validate.BeanValidator:<init>()',1,0,0),(1914,'edu.ncsu.csc.itrust.validate.ApptBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1915,'edu.ncsu.csc.itrust.validate.ApptBeanValidator:validate(java.lang.Object)',1,0,0),(1916,'edu.ncsu.csc.itrust.validate.BeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1917,'edu.ncsu.csc.itrust.validate.BeanValidator:checkFormat(java.lang.String,java.lang.Long,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1918,'edu.ncsu.csc.itrust.validate.BeanValidator:checkFormat(java.lang.String,java.lang.Double,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1919,'edu.ncsu.csc.itrust.validate.BeanValidator:checkGender(java.lang.String,edu.ncsu.csc.itrust.enums.Gender,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1920,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:<init>()',1,0,0),(1921,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(edu.ncsu.csc.itrust.beans.ReferralBean)',1,0,0),(1922,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1923,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:checkFormat(java.lang.String,java.lang.Long,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1924,'edu.ncsu.csc.itrust.validate.ReferralBeanValidator:validate(java.lang.Object)',1,0,0),(1925,'edu.ncsu.csc.itrust.validate.MedicationBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1926,'edu.ncsu.csc.itrust.validate.MedicationBeanValidator:validate(java.lang.Object)',1,0,0),(1927,'edu.ncsu.csc.itrust.validate.MessageValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1928,'edu.ncsu.csc.itrust.validate.MessageValidator:validate(java.lang.Object)',1,0,0),(1929,'edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1930,'edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator:validate(java.lang.Object)',1,0,0),(1931,'edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1932,'edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator:validate(java.lang.Object)',1,0,0),(1933,'edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1934,'edu.ncsu.csc.itrust.validate.ProcedureBeanValidator:validate(java.lang.Object)',1,0,0),(1935,'edu.ncsu.csc.itrust.validate.EMailValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1936,'edu.ncsu.csc.itrust.validate.EMailValidator:validate(java.lang.Object)',1,0,0),(1937,'edu.ncsu.csc.itrust.validate.PatientValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1938,'edu.ncsu.csc.itrust.beans.PatientBean:getDateOfDeath()',1,0,0),(1939,'edu.ncsu.csc.itrust.validate.PatientValidator:validate(java.lang.Object)',1,0,0),(1940,'edu.ncsu.csc.itrust.validate.AddPatientValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1941,'edu.ncsu.csc.itrust.validate.AddPatientValidator:validate(java.lang.Object)',1,0,0),(1942,'edu.ncsu.csc.itrust.validate.SurveySearchValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1943,'edu.ncsu.csc.itrust.validate.SurveySearchValidator:validate(java.lang.Object)',1,0,0),(1944,'edu.ncsu.csc.itrust.validate.AllergyBeanValidator:<init>()',1,0,0),(1945,'edu.ncsu.csc.itrust.validate.AllergyBeanValidator:validate(edu.ncsu.csc.itrust.beans.AllergyBean)',1,0,0),(1946,'edu.ncsu.csc.itrust.validate.AllergyBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1947,'edu.ncsu.csc.itrust.validate.AllergyBeanValidator:validate(java.lang.Object)',1,0,0),(1948,'edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1949,'edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator:validate(java.lang.Object)',1,0,0),(1950,'edu.ncsu.csc.itrust.validate.PersonnelValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1951,'edu.ncsu.csc.itrust.beans.PersonnelBean:getPhone()',1,0,0),(1952,'edu.ncsu.csc.itrust.validate.PersonnelValidator:validate(java.lang.Object)',1,0,0),(1953,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1954,'edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator:validate(java.lang.Object)',1,0,0),(1955,'edu.ncsu.csc.itrust.validate.MailValidator:validateEmail(java.lang.String)',1,0,0),(1956,'edu.ncsu.csc.itrust.validate.MailValidator:<init>()',1,0,0),(1957,'edu.ncsu.csc.itrust.validate.MailValidator:isValid(java.lang.String)',1,0,0),(1958,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1959,'edu.ncsu.csc.itrust.validate.DrugInteractionValidator:validate(java.lang.Object)',1,0,0),(1960,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:checkInt(java.lang.String,java.lang.String,int,int,boolean)',1,0,0),(1961,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1962,'edu.ncsu.csc.itrust.validate.HealthRecordFormValidator:validate(java.lang.Object)',1,0,0),(1963,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1964,'edu.ncsu.csc.itrust.validate.LabProcedureValidator:validate(java.lang.Object)',1,0,0),(1965,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1966,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:checkInt(java.lang.String,java.lang.String,int,int,boolean)',1,0,0),(1967,'edu.ncsu.csc.itrust.validate.EditPrescriptionsValidator:validate(java.lang.Object)',1,0,0),(1968,'edu.ncsu.csc.itrust.validate.HospitalBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1969,'edu.ncsu.csc.itrust.validate.HospitalBeanValidator:validate(java.lang.Object)',1,0,0),(1970,'edu.ncsu.csc.itrust.validate.AdverseEventValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1971,'edu.ncsu.csc.itrust.validate.AdverseEventValidator:validate(java.lang.Object)',1,0,0),(1972,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1973,'edu.ncsu.csc.itrust.validate.LOINCBeanValidator:validate(java.lang.Object)',1,0,0),(1974,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1975,'edu.ncsu.csc.itrust.validate.AddPersonnelValidator:validate(java.lang.Object)',1,0,0),(1976,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1977,'edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator:validate(java.lang.Object)',1,0,0),(1978,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1979,'edu.ncsu.csc.itrust.validate.PatientInstructionsBeanValidator:validate(java.lang.Object)',1,0,0),(1980,'edu.ncsu.csc.itrust.beans.SecurityQA:getConfirmAnswer()',1,0,0),(1981,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:checkFormat(java.lang.String,java.lang.String,edu.ncsu.csc.itrust.validate.ValidationFormat,boolean)',1,0,0),(1982,'edu.ncsu.csc.itrust.validate.SecurityQAValidator:validate(java.lang.Object)',1,0,0);
/*!40000 ALTER TABLE `node` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `node_code`
--

DROP TABLE IF EXISTS `node_code`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `node_code` (
  `node_id` int(11) NOT NULL,
  `code` text,
  PRIMARY KEY (`node_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `node_code`
--

LOCK TABLES `node_code` WRITE;
/*!40000 ALTER TABLE `node_code` DISABLE KEYS */;
INSERT INTO `node_code` VALUES (3,'	public static Localization instance(){\n		if(currentInstance == null){\n			currentInstance = new Localization();\n		}\n		return currentInstance;\n	}\n'),(5,'	public void sendEmail(Email email) throws DBException {\n		factory.getFakeEmailDAO().sendEmailRecord(email);\n	}\n'),(6,'	public FakeEmailDAO getFakeEmailDAO() {\n		return new FakeEmailDAO(this);\n	}\n'),(7,'	public void sendEmailRecord(Email email) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO FakeEmail (ToAddr, FromAddr, Subject, Body) \"\n					+ \"VALUES (?,?,?,?)\");\n			emailBeanLoader.loadParameters(ps, email);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(8,'	public static boolean currentlyInMonthRange(int firstMonth, int secondMonth) {\n		return isInMonthRange(new Date(), firstMonth, secondMonth);\n	}\n'),(9,'	public static boolean isInMonthRange(java.util.Date date, int firstMonth, int secondMonth) {\n		Calendar cal = new GregorianCalendar();\n		cal.setTime(date);\n		firstMonth %= 12;\n		secondMonth %= 12;\n		if (secondMonth >= firstMonth) {\n			return ((cal.get(Calendar.MONTH) >= firstMonth) && (cal.get(Calendar.MONTH) <= secondMonth));\n		}\n		return ((cal.get(Calendar.MONTH) >= firstMonth) || (cal.get(Calendar.MONTH) <= secondMonth));\n	}\n'),(10,'	public static java.sql.Date getSQLdateXyearsAgoFromNow(int years) {\n		return new java.sql.Date(getDateXyearsAgoFromNow(years).getTime());\n	}\n'),(11,'	public static Date getDateXyearsAgoFromNow(int years) {\n		Calendar cal = new GregorianCalendar();\n		cal.add(Calendar.YEAR, -years);\n		return cal.getTime();\n	}\n'),(12,'	public static java.sql.Date getSQLdateXDaysAgoFromNow(int days) {\n		return new java.sql.Date(getDateXDaysAgoFromNow(days).getTime());\n	}\n'),(13,'	public static Date getDateXDaysAgoFromNow(int days) {\n		Calendar cal = new GregorianCalendar();\n		cal.add(Calendar.DAY_OF_YEAR, -days);\n		return cal.getTime();\n	}\n'),(15,'	public Locale getCurrentLocale(){\n		return currentLocale;\n	}\n'),(16,'	public static boolean canObtainProductionInstance() {\n		try {\n			DAOFactory.getProductionInstance().getConnection().close();\n			return true;\n		} catch (SQLException e) {\n			System.out.println(e);\n			return false;\n		}\n	}\n'),(17,'	public static DAOFactory getProductionInstance() {\n		if (productionInstance == null)\n			productionInstance = new DAOFactory();\n		return productionInstance;\n	}\n'),(18,'	public Connection getConnection() throws SQLException {\n		return driver.getConnection();\n	}\n'),(20,'	public PersonnelDAO getPersonnelDAO() {\n		return new PersonnelDAO(this);\n	}\n'),(21,'	public HospitalsDAO getHospitalsDAO() {\n		return new HospitalsDAO(this);\n	}\n'),(22,'	public List<HospitalBean> getAvailableHospitals(String midString) throws iTrustException {\n		try {\n			long mid = Long.valueOf(midString);\n			List<HospitalBean> allHospitals = hospitalsDAO.getAllHospitals();\n			List<HospitalBean> ourHospitals = personnelDAO.getHospitals(mid);\n			while (!ourHospitals.isEmpty()) {\n				allHospitals.remove(ourHospitals.remove(0));\n			}\n			return allHospitals;\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"HCP\'s MID not a number\");\n		}\n	}\n'),(23,'	public List<HospitalBean> getAllHospitals() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM Hospitals ORDER BY HospitalName\");\n			ResultSet rs = ps.executeQuery();\n			return hospitalLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(24,'	public List<HospitalBean> getHospitals(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM HCPAssignedHos hah,Hospitals h \"\n					+ \"WHERE hah.HCPID=? AND hah.HosID=h.HospitalID ORDER BY HospitalName ASC\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			return hospitalBeanLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(26,'	public List<HospitalBean> getAssignedHospitals(String midString) throws iTrustException {\n		try {\n			long mid = Long.valueOf(midString);\n			return personnelDAO.getHospitals(mid);\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"HCP\'s MID not a number\");\n		}\n	}\n'),(27,'	public String assignHCPToHospital(String midString, String hospitalID) throws iTrustException {\n		try {\n			long hcpID = Long.valueOf(midString);\n			boolean confirm = hospitalsDAO.assignHospital(hcpID, hospitalID);\n			if (confirm) {/*\n				return \"HCP successfully assigned.\";\n			} else\n				return \"Assignment did not occur\";\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"HCP\'s MID not a number\");\n		}\n	}\n'),(28,'	public boolean assignHospital(long hcpID, String hospitalID) throws DBException, iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO HCPAssignedHos (HCPID, HosID) VALUES (?,?)\");\n			ps.setLong(1, hcpID);\n			ps.setString(2, hospitalID);\n			return (1 == ps.executeUpdate());\n		} catch (SQLException e) {\n			if (1062 == e.getErrorCode())\n				throw new iTrustException(\"HCP \" + hcpID + \" already assigned to hospital \" + hospitalID);\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(29,'	public String removeHCPAssignmentToHospital(String midString, String hospitalID) throws iTrustException {\n		try {\n			long hcpID = Long.valueOf(midString);\n			boolean confirm = hospitalsDAO.removeHospitalAssignment(hcpID, hospitalID);\n			if (confirm) {\n				return \"HCP successfully unassigned\";\n			} else\n				return \"HCP not unassigned\";\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"HCP\'s MID not a number\");\n		}\n	}\n'),(30,'	public boolean removeHospitalAssignment(long hcpID, String hospitalID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"DELETE FROM HCPAssignedHos WHERE HCPID = ? AND HosID = ?\");\n			ps.setLong(1, hcpID);\n			ps.setString(2, hospitalID);\n			return (1 == ps.executeUpdate());\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(31,'	public int removeAllAssignmentsFromHCP(String midString) throws iTrustException {\n		try {\n			long hcpID = Long.valueOf(midString);\n			int numAssignments = hospitalsDAO.removeAllHospitalAssignmentsFrom(hcpID);\n			return numAssignments;\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"HCP\'s MID not a number\");\n		}\n	}\n'),(32,'	public int removeAllHospitalAssignmentsFrom(long hcpID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"DELETE FROM HCPAssignedHos WHERE HCPID = ?\");\n			ps.setLong(1, hcpID);\n			return ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(33,'	public long checkHCPID(String hcpID) throws iTrustException {\n		try {\n			long pid = Long.valueOf(hcpID);\n			if (personnelDAO.checkPersonnelExists(pid))\n				return pid;\n			else\n				throw new iTrustException(\"HCP does not exist\");\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"HCP ID is not a number: \" + e.getMessage());\n		}\n	}\n'),(34,'	public boolean checkPersonnelExists(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM Personnel WHERE MID=?\");\n			ps.setLong(1, pid);\n			ResultSet rs = ps.executeQuery();\n			return rs.next();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(35,'	public boolean checkLTHospital(String hcpID) throws iTrustException{\n		try{\n			long pid = Long.valueOf(hcpID);\n			if(personnelDAO.getPersonnel(pid).getRole().toString().equals(\"LT\")){\n				if(hospitalsDAO.checkLTHasHospital(pid)){\n					return true;\n				}\n				return false;\n			}\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"LT ID is not a number: \" + e.getMessage());\n		}\n		return false;\n	}\n'),(36,'	public PersonnelBean getPersonnel(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM Personnel WHERE MID = ?\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next()) {\n				return personnelLoader.loadSingle(rs);\n			} else\n				return null;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(37,'	public Role getRole() {\n		return Role.parse(roleString);\n	}\n'),(39,'	public boolean checkLTHasHospital(long hcpID) throws DBException{\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try{\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM HCPAssignedHos WHERE HCPID = ?\");\n			ps.setLong(1, hcpID);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next()){\n				return true;\n			}\n			return false;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(41,'	public ApptDAO getApptDAO() {\n		return new ApptDAO(this);\n	}\n'),(42,'	public PatientDAO getPatientDAO() {\n		return new PatientDAO(this);\n	}\n'),(43,'	public List<ApptBean> getMyAppointments() throws SQLException {\n		return apptDAO.getApptsFor(loggedInMID);\n	}\n'),(44,'	public List<ApptBean> getApptsFor(long mid) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		conn = factory.getConnection();\n		if(mid >= 999999999){\n			ps = conn.prepareStatement(\"SELECT * FROM appointment WHERE doctor_id=? ORDER BY sched_date;\");\n		}\n		else {\n			ps = conn.prepareStatement(\"SELECT * FROM appointment WHERE patient_id=? ORDER BY sched_date;\");\n		}\n		ps.setLong(1, mid);\n		ResultSet rs = ps.executeQuery();\n		List<ApptBean> abList = this.abloader.loadList(rs);\n		DBUtil.closeConnection(conn, ps);\n		return abList;\n	}\n'),(45,'	public List<ApptBean> getAppointments(long MID) throws SQLException {\n		return apptDAO.getApptsFor(MID);\n	}\n'),(46,'	public String getName(long mid) throws iTrustException {\n		if(mid < 7000000000L)\n			return patientDAO.getName(mid);\n		else\n			return personnelDAO.getName(mid);\n	}\n'),(47,'	public String getName(long mid) throws iTrustException, DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT firstName, lastName FROM Patients WHERE MID=?\");\n			ps.setLong(1, mid);\n			ResultSet rs;\n			rs = ps.executeQuery();\n			if (rs.next()) {\n				return rs.getString(\"firstName\") + \" \" + rs.getString(\"lastName\");\n			} else {\n				throw new iTrustException(\"User does not exist\");\n			}\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(48,'	public String getName(long mid) throws iTrustException, DBException {\n		Connection conn = null;\n		PreparedStatement pstmt = null;\n		try {\n			conn = factory.getConnection();\n			pstmt = conn.prepareStatement(\"SELECT firstName, lastName FROM Personnel WHERE MID=?\");\n			pstmt.setLong(1, mid);\n			ResultSet rs;\n			rs = pstmt.executeQuery();\n			if (rs.next()) {\n				return rs.getString(\"firstName\") + \" \" + rs.getString(\"lastName\");\n			} else {\n				throw new iTrustException(\"User does not exist\");\n			}\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, pstmt);\n		}\n	}\n'),(50,'	public ReferralDAO getReferralDAO() {\n		return new ReferralDAO(this);\n	}\n'),(51,'	public OfficeVisitDAO getOfficeVisitDAO() {\n		return new OfficeVisitDAO(this);\n	}\n'),(53,'	public ReferralBean getReferral(long id) throws DBException {\n		return referralDAO.getReferral(id);\n	}\n'),(54,'	public ReferralBean getReferral(long id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM referrals WHERE id = ?\");\n			ps.setLong(1, id);\n			ResultSet rs = ps.executeQuery();\n			if(rs.next()){\n				return referralLoader.loadSingle(rs);\n			} else{\n				return null;\n			}\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(55,'	public void addReferral(ReferralBean bean) throws Exception {\n		if (bean.getSenderID() != hcpid) {\n			throw new iTrustException(\"New referrals must be from the current HCP.\");\n		}\n		long id = referralDAO.addReferral(bean);\n		bean = referralDAO.getReferral(id);\n		sendReferralCreatedMessages(bean);\n	}\n'),(56,'	public long getSenderID() {\n		return senderID;\n	}\n'),(57,'	public long addReferral(ReferralBean r) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO referrals (PatientID,SenderID,ReceiverID,\"\n					+ \"ReferralDetails,OVID,viewed_by_patient,viewed_by_HCP,PriorityCode,TimeStamp)  \"\n					+ \"VALUES (?,?,?,?,?,?,?,?,NOW())\");\n			ps = referralLoader.loadParameters(ps, r);\n			ps.executeUpdate();\n			return DBUtil.getLastInsert(conn);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(58,'	public void sendReferralCreatedMessages(ReferralBean bean) throws Exception {\n		StringBuilder body = new StringBuilder();\n		body.append(\"Referral information:\\n\");\n		String senderSpecialty = personnelDAO.getPersonnel(bean.getSenderID()).getSpecialty();\n		String receiverSpecialty = personnelDAO.getPersonnel(bean.getReceiverID()).getSpecialty();\n		senderSpecialty = senderSpecialty==null ? \"no specialty\" : senderSpecialty;\n		receiverSpecialty = receiverSpecialty==null ? \"no specialty\" : receiverSpecialty;\n		body.append(\"Sending HCP: \" + personnelDAO.getName(bean.getSenderID()) + \" (\" + \n								      senderSpecialty + \")\\n\");\n		body.append(\"Receiving HCP: \" + personnelDAO.getName(bean.getReceiverID()) + \" (\" + \n										receiverSpecialty + \")\\n\");\n		body.append(\"Patient: \" + getPatientName(bean) + \"\\n\");\n		body.append(\"Notes: \" + bean.getReferralDetails() + \"\\n\");\n		body.append(\"Created on: \" + bean.getTimeStamp() + \"\\n\");\n		MessageBean senderMsg = new MessageBean();\n		senderMsg.setFrom(bean.getSenderID());\n		senderMsg.setTo(bean.getSenderID());\n		senderMsg.setBody(body.toString());\n		senderMsg.setSubject(\"You Created a New Referral\");\n		senderMsg.setRead(0);\n		messageAction.sendMessage(senderMsg);\n		MessageBean receiverMsg = new MessageBean();\n		receiverMsg.setFrom(bean.getSenderID());\n		receiverMsg.setTo(bean.getReceiverID());\n		receiverMsg.setBody(body.toString());\n		receiverMsg.setSubject(\"You Received a New Referral\");\n		receiverMsg.setRead(0);\n		messageAction.sendMessage(receiverMsg);\n		MessageBean patientMsg = new MessageBean();\n		patientMsg.setFrom(bean.getSenderID());\n		patientMsg.setTo(bean.getPatientID());\n		patientMsg.setBody(body.toString());\n		patientMsg.setSubject(\"You Received a New Referral\");\n		patientMsg.setRead(0);\n		messageAction.sendMessage(patientMsg);\n	}\n'),(59,'	public void editReferral(ReferralBean bean) throws iTrustException {\n		if (bean.getSenderID() != hcpid) {\n			throw new iTrustException(\"Edited referrals must be from the current HCP.\");\n		}\n		referralDAO.editReferral(bean);\n	}\n'),(60,'	public void editReferral(ReferralBean r) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE referrals SET PatientID=?,SenderID=?,ReceiverID=?,\"\n					+ \"ReferralDetails=?,OVID=?,viewed_by_patient=?,viewed_by_HCP=?,PriorityCode=?  WHERE ID=?\");\n			referralLoader.loadParameters(ps, r);\n			ps.setLong(9, r.getId());\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(61,'	public void deleteReferral(ReferralBean bean) throws Exception {\n		if (bean.getSenderID() != hcpid) {\n			throw new iTrustException(\"Deleted referrals must be from the current HCP.\");\n		}\n		referralDAO.removeReferral(bean.getId());\n		sendReferralCancelledMessages(bean);\n	}\n'),(62,'	public long getId() {\n		return id;\n	}\n'),(63,'	public void removeReferral(long id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"DELETE FROM referrals WHERE ID=? \");\n			ps.setLong(1, id);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(64,'	public void sendReferralCancelledMessages(ReferralBean bean) throws Exception {\n		StringBuilder body = new StringBuilder();\n		body.append(\"The referral created on \"+bean.getTimeStamp()+\"has been deleted.\\n\\n\");\n		body.append(\"The referral is reproduced here for your convienence:\\n\");\n		body.append(\"Sending HCP: \" + personnelDAO.getName(bean.getSenderID()) + \" (\" + \n									  personnelDAO.getPersonnel(bean.getSenderID()).getSpecialty() + \")\\n\");\n		body.append(\"Receiving HCP: \" + personnelDAO.getName(bean.getReceiverID()) + \" (\" + \n				  						personnelDAO.getPersonnel(bean.getReceiverID()).getSpecialty() + \")\\n\");\n		body.append(\"Patient: \" + getPatientName(bean) + \"\\n\");\n		body.append(\"Notes: \" + bean.getReferralDetails() + \"\\n\");\n		body.append(\"Created on: \" + bean.getTimeStamp() + \"\\n\");\n		MessageBean receiverMsg = new MessageBean();\n		receiverMsg.setFrom(bean.getSenderID());\n		receiverMsg.setTo(bean.getReceiverID());\n		receiverMsg.setBody(body.toString());\n		receiverMsg.setSubject(\"Your Referral Was Cancelled\");\n		receiverMsg.setRead(0);\n		messageAction.sendMessage(receiverMsg);\n		MessageBean patientMsg = new MessageBean();\n		patientMsg.setFrom(bean.getSenderID());\n		patientMsg.setTo(bean.getPatientID());\n		patientMsg.setBody(body.toString());\n		patientMsg.setSubject(\"Your Referral Was Cancelled\");\n		patientMsg.setRead(0);\n		messageAction.sendMessage(patientMsg);\n	}\n'),(65,'	public String getPatientName(ReferralBean bean) throws iTrustException {\n		return patientDAO.getName(bean.getPatientID());\n	}\n'),(66,'	public long getPatientID() {\n		return patientID;\n	}\n'),(67,'	public String getReceivingHCPName(ReferralBean bean) throws iTrustException {\n		return personnelDAO.getName(bean.getReceiverID());\n	}\n'),(68,'	public long getReceiverID() {\n		return receiverID;\n	}\n'),(69,'	public String getReceivingHCPSpecialty(ReferralBean bean) throws iTrustException {\n		String s = personnelDAO.getPersonnel(bean.getReceiverID()).getSpecialty();\n		return s==null ? \"\" : s;\n	}\n'),(70,'	public String getSpecialty() {\n		return specialty;\n	}\n'),(71,'	public String getOfficeVisitDate(ReferralBean bean) throws iTrustException {\n		return ovDAO.getOfficeVisit(bean.getOvid()).getVisitDateStr();\n	}\n'),(72,'	public long getOvid() {\n		return ovid;\n	}\n'),(73,'	public OfficeVisitBean getOfficeVisit(long visitID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"Select * From OfficeVisits Where ID = ?\");\n			ps.setLong(1, visitID);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next())\n				return loadFullOfficeVist(rs, visitID);\n			else\n				return null;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(74,'	public String getVisitDateStr() {\n		return visitDateStr;\n	}\n'),(75,'	public String getReferralDetails() {\n		return referralDetails;\n	}\n'),(76,'	public String getTimeStamp() {\n		return timeStamp;\n	}\n'),(78,'	public void setFrom(long from) {\n		this.from = from;\n	}\n'),(79,'	public void setTo(long to) {\n		this.to = to;\n	}\n'),(80,'	public void setBody(String body) {\n		this.body = body;\n	}\n'),(81,'	public void setSubject(String subject) {\n		this.subject = subject;\n	}\n'),(82,'	public void setRead(int read) {\n		this.read = read;\n	}\n'),(83,'	public void sendMessage(MessageBean mBean) throws iTrustException, SQLException, FormValidationException {\n		messVal.validate(mBean);\n		emailVal.validate(mBean);\n		messageDAO.addMessage(mBean);\n		Email email = new Email();\n		String senderName;\n		String fromEmail;\n		email.setFrom(\"noreply@itrust.com\");\n		List<String> toList = new ArrayList<String>();\n		if (8999999999L < mBean.getFrom() && 8999999999L < mBean.getTo()){\n			PersonnelBean sender = personnelDAO.getPersonnel(loggedInMID);\n			PersonnelBean receiver = personnelDAO.getPersonnel(mBean.getTo());\n			toList.add(receiver.getEmail());\n			senderName = sender.getFullName();\n			fromEmail = sender.getEmail();\n		}else{\n			if (6999999999L < mBean.getFrom()) {\n				PersonnelBean sender = personnelDAO.getPersonnel(loggedInMID);\n				if (6999999999L < mBean.getTo()) {\n					PersonnelBean receiver = personnelDAO.getPersonnel(mBean.getTo());\n					toList.add(receiver.getEmail());\n				} else {\n					PatientBean receiver = patientDAO.getPatient(mBean.getTo());\n					toList.add(receiver.getEmail());\n				}\n				senderName = sender.getFullName();\n				fromEmail = sender.getEmail();\n			} else {\n				PatientBean sender = patientDAO.getPatient(loggedInMID);\n				if (6999999999L < mBean.getTo()) {\n					PersonnelBean receiver = personnelDAO.getPersonnel(mBean.getTo());\n					toList.add(receiver.getEmail());\n				} else {\n					PatientBean receiver = patientDAO.getPatient(mBean.getTo());\n					toList.add(receiver.getEmail());\n				}\n				senderName = sender.getFullName();\n				fromEmail = sender.getEmail();\n			}\n		}\n		email.setToList(toList);\n		email.setFrom(fromEmail);\n		email.setSubject(String.format(\"A new message from %s\", senderName));\n		email.setBody(String.format(\"You have received a new message from %s in iTrust. To view it, log in to iTrust and go to \\\"View My Messages\\\"\", senderName));\n		emailer.sendEmail(email);\n	}\n'),(85,'	public AccessDAO getAccessDAO() {\n		return new AccessDAO(this);\n	}\n'),(86,'	public void changeSessionTimeout(String minuteString) throws FormValidationException, DBException {\n		try {\n			Integer minutes = Integer.valueOf(minuteString);\n			if (minutes < 1)\n				throw new FormValidationException(\"Must be a number greater than 0\");\n			accessDAO.setSessionTimeoutMins(minutes);\n		} catch (NumberFormatException e) {\n			throw new FormValidationException(\"That is not a number\");\n		}\n	}\n'),(88,'	public void setSessionTimeoutMins(int mins) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE GlobalVariables SET Value=? WHERE Name=\'Timeout\'\");\n			ps.setInt(1, mins);\n			int numUpdated = ps.executeUpdate();\n			if (numUpdated == 0) // no value in the table\n				insertDefaultTimeout(conn, mins);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(89,'	public int getSessionTimeout() throws DBException {\n		return accessDAO.getSessionTimeoutMins();\n	}\n'),(90,'	public int getSessionTimeoutMins() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT Value FROM GlobalVariables WHERE Name=\'Timeout\'\");\n			ResultSet rs = ps.executeQuery();\n			if (rs.next())\n				return rs.getInt(\"Value\");\n			else {\n				insertDefaultTimeout(conn, 20);\n				return 20;\n			}\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(96,'	public VisitRemindersDAO getVisitRemindersDAO() {\n		return new VisitRemindersDAO(this);\n	}\n'),(97,'	public List<VisitReminderReturnForm> getVisitReminders(ReminderType type) throws iTrustException, FormValidationException {\n		if (null == type)\n			throw new iTrustException(\"Reminder Type DNE\");\n		switch (type) {\n			case DIAGNOSED_CARE_NEEDERS:\n				return visitReminderDAO.getDiagnosedVisitNeeders(loggedInMID);\n			case FLU_SHOT_NEEDERS:\n				return visitReminderDAO.getFluShotDelinquents(loggedInMID);\n			case IMMUNIZATION_NEEDERS:\n				return getImmunizationNeeders(loggedInMID);\n			default:\n				throw new iTrustException(\"Reminder Type DNE\");\n		}\n	}\n'),(100,'	public List<VisitReminderReturnForm> getDiagnosedVisitNeeders(long hcpid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		ResultSet rs = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\n					\"SELECT  hid, MID, lastName, firstName, phone1, phone2, phone3, ICDcode, visitDate FROM \" +\n					\"(SELECT DISTINCT \" +\n					\"  ? as hid, \" +\n					\"  p.MID as MID, \" +\n					\"  p.lastName, \" +\n					\"  p.firstName, \" +\n					\"  p.phone1, \" +\n					\"  p.phone2, \" +\n					\"  p.phone3, \" +\n					\"  ovd.ICDcode \" +\n					\" FROM \" +\n					\"  Patients p, \" +\n					\"  OfficeVisits ov, \" +\n					\"  OVDiagnosis ovd \" +\n					\" WHERE \" +\n					\"  p.MID = ov.PatientID \" +\n					\" AND \" +\n					\"  p.DateOfDeath is null \" +\n					\" AND \" +\n					\"  ov.ID = ovd.VisitID \" +\n					\" AND \" +\n					\"  (\" +\n					\"    ovd.ICDCode BETWEEN ? AND ? \" +\n					\"   OR \" +\n					\"    ovd.ICDCode BETWEEN ? AND ? \" +\n					\"   OR \" +\n					\"    ovd.ICDCode BETWEEN ? AND ? \" +\n					\"  ) \" +\n					\" AND \" +\n					\"  p.MID NOT IN \" +\n					\"   ( \" +\n					\"    SELECT p.MID FROM Patients p, OfficeVisits ov \" +\n					\"    WHERE \" +\n					\"     p.MID = ov.PatientID \" +\n					\"	 AND \" +\n					\"     ov.visitDate > DATE_SUB(CURDATE(), INTERVAL 1 YEAR) \" +\n					\"   ) \" +\n					\") a \" +\n					\" INNER JOIN \" +\n					\"  ( \" +\n					\"   SELECT p.MID, MAX(ov.visitDate) as visitDate FROM Patients p, OfficeVisits ov \" +\n					\"   WHERE \" +\n					\"    p.MID = ov.PatientID \" +\n					\"   GROUP BY \" +\n					\"    p.mid \" +\n					\"  ) b \" +\n					\" USING(MID) \" +\n					\"ORDER BY \" +\n					\" lastName, firstName, MID, ICDcode \");\n			ps.setLong(1, hcpid);\n			ps.setFloat(2, 250.0f);\n			ps.setFloat(3, 250.99f);\n			ps.setFloat(4, 390.0f);\n			ps.setFloat(5, 459.99f);\n			ps.setFloat(6, 493.0f);\n			ps.setFloat(7, 493.99f);\n			rs = ps.executeQuery();\n			List<VisitReminderReturnForm> patients = new ArrayList<VisitReminderReturnForm>();\n			VisitReminderReturnForm temp = null;\n			VisitReminderReturnFormLoader loader = new VisitReminderReturnFormLoader();\n			long lastId = -1;\n			while (rs.next()) {\n				if (lastId == rs.getLong(2)) {\n					patients.get(patients.size()-1).addVisitFlag(new VisitFlag(VisitFlag.DIAGNOSED, rs.getString(8)));\n				} else {\n					lastId = rs.getLong(2);\n					temp = loader.loadSingle(rs);\n					temp.addVisitFlag(new VisitFlag(VisitFlag.DIAGNOSED, rs.getString(8)));\n					temp.addVisitFlag(new VisitFlag(VisitFlag.LAST_VISIT, rs.getString(9)));\n					patients.add(temp);\n				}\n			}\n			return patients;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(101,'	public List<VisitReminderReturnForm> getFluShotDelinquents(long hcpid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		ResultSet rs = null;\n		boolean thisYear = DateUtil.currentlyInMonthRange(8, 11);\n		String flagType = thisYear ? VisitFlag.MISSING_MEDICATION : VisitFlag.MISSED_MEDICATION;\n		java.sql.Date september = new java.sql.Date(0l), december = new java.sql.Date(0l);\n		DateUtil.setSQLMonthRange(september, 8, thisYear ? 0 : 1, december, 11, thisYear ? 0 : 1);\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT DISTINCT \" +\n					\"? as hid, p.mid as patientid, p.lastname, p.firstname, p.phone1, p.phone2, p.phone3 \" +\n					\"FROM OfficeVisits ov, Patients p \" +\n					\"WHERE (ov.patientid=p.mid \" +\n					\"OR p.mid NOT IN (SELECT ov.patientid FROM OfficeVisits ov)) \" +\n					\"AND p.dateofdeath IS NULL \" +\n					\"AND p.dateofbirth < DATE_SUB(CURDATE(), INTERVAL 50 YEAR) \" +\n					\"AND p.mid NOT IN \" +\n					\"(SELECT patientid AS mid FROM OfficeVisits ov, OVProcedure op \" +\n					\"WHERE ov.id=op.visitid \" +\n					\"AND CPTCode IN (90656, 90658, 90660) \" +\n					\"AND ((ov.visitdate BETWEEN ? AND ?) \" +\n					\"OR (ov.visitdate BETWEEN ? AND ?))) \" +\n					\"ORDER BY lastname, firstname, p.mid\");\n			ps.setLong(1, hcpid);\n			ps.setDate(2, september);\n			ps.setDate(3, december);\n			ps.setDate(4, september);\n			ps.setDate(5, december);\n			rs = ps.executeQuery();\n			List<VisitReminderReturnForm> patients = new ArrayList<VisitReminderReturnForm>();\n			VisitReminderReturnForm temp;\n			VisitReminderReturnFormLoader loader = new VisitReminderReturnFormLoader();\n			while (rs.next()) {\n				temp = loader.loadSingle(rs);\n				temp.addVisitFlag(new VisitFlag(flagType, \"Flu Shot\"));\n				patients.add(temp);\n			}\n			return patients;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}	\n'),(102,'	private List<VisitReminderReturnForm> getImmunizationNeeders(long mid) throws iTrustException {\n		List<VisitReminderReturnForm> formList;\n		List<VisitReminderReturnForm> needList = new ArrayList<VisitReminderReturnForm>();\n		String reason = \"\";\n		formList = visitReminderDAO.getPatients(mid);\n		for (VisitReminderReturnForm r : formList) {\n			reason = checkImmunizations(r.getPatientID());\n			if (0 < reason.length()) {\n				needList.add(r);\n				r.addVisitFlag(new VisitFlag(VisitFlag.IMMUNIZATION, reason));\n			}\n		}	\n		return needList;\n	}\n'),(103,'	public List<VisitReminderReturnForm> getPatients(long hcpid) throws DBException {\n		VisitReminderReturnForm temp;\n		VisitReminderReturnFormLoader loader = new VisitReminderReturnFormLoader();\n		List<VisitReminderReturnForm> patients = new ArrayList<VisitReminderReturnForm>();\n		Connection conn = null;\n		PreparedStatement ps = null;\n		ResultSet rs = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\n					  \"SELECT DISTINCT\" \n					+ \"       ? as hid, \"\n					+ \"       dhcp.patientid, \"\n					+ \"       p.lastName, \"\n					+ \"       p.firstName, \"\n					+ \"       p.phone1, \"\n					+ \"       p.phone2, \"\n					+ \"       p.phone3 \"\n					+ \"  FROM \"\n					+ \"       Patients p, \"\n					+ \"       declaredhcp dhcp \"\n					+ \" WHERE \"\n					+ \"		dhcp.hcpid = ? \"\n					+ \" AND \"\n					+ \"     p.MID = dhcp.patientid \"\n					+ \" AND \"\n					+ \"		p.dateofdeath is null \"\n					+ \" AND \"\n					+ \"     p.dateofbirth > DATE_SUB(CURDATE(), INTERVAL 19 YEAR) \"\n					);\n			ps.setLong(1, hcpid);\n			ps.setLong(2, hcpid);\n			rs = ps.executeQuery();\n			while (rs.next()) {\n				temp = loader.loadSingle(rs);\n				patients.add(temp);\n			}\n		}\n		catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} \n		finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n		return patients;\n	}\n'),(104,'	public long getPatientID() {\n		return patientID;\n	}\n'),(105,'	private String checkImmunizations(long pid) throws iTrustException {\n		String reason = \"\";\n		List<ProcedureBean> procs = patientDAO.getProcedures(pid);\n		PatientBean patient = patientDAO.getPatient(pid);\n		Date patientDOB = patient.getDateOfBirth();\n		Gender gen = patient.getGender();\n		int hepB = 0;\n		long hepBTime = 0;\n		int rota = 0;\n		long rotaTime = 0;\n		int diptet = 0;\n		long deptetTime = 0;\n		int haemoflu = 0;\n		long haemofluTime = 0;\n		long haemofluTimeFirst = 0;\n		int pneumo = 0;\n		long pneumoTime = 0;\n		long pneumofluTimeFirst = 0;\n		int polio = 0;\n		long polioTime = 0;\n		int measles = 0;\n		long measlesTime = 0;\n		int varicella = 0;\n		long varicellaTime = 0;\n		int hepA = 0;\n		long hepATime = 0;\n		int hpv = 0;\n		long hpvTime = 0;\n		for (ProcedureBean proc: procs) {\n			String cpt = proc.getCPTCode();\n			if (cpt.equals(\"90371\")) {\n				hepB++;\n				hepBTime = proc.getDate().getTime();\n			}\n			else if (cpt.equals(\"90681\")) {\n				rota++;\n				rotaTime = proc.getDate().getTime();\n			}\n			else if (cpt.equals(\"90696\")) {\n				diptet++;\n				deptetTime = proc.getDate().getTime();\n			}\n			else if (cpt.equals(\"90645\")) {\n				if (0 == haemoflu)\n					haemofluTimeFirst = proc.getDate().getTime();\n				haemoflu++;\n				haemofluTime = proc.getDate().getTime();\n			}\n			else if (cpt.equals(\"90669\")) {\n				if (0 == pneumo)\n					pneumofluTimeFirst = proc.getDate().getTime();\n				pneumo++;\n				pneumoTime = proc.getDate().getTime();\n			}\n			else if (cpt.equals(\"90712\")) {\n				polio++;\n				polioTime = proc.getDate().getTime();\n			}\n			else if (cpt.equals(\"90707\")) {\n				measles++;\n				measlesTime = proc.getDate().getTime();\n			}\n			else if (cpt.equals(\"90396\")) {\n				varicella++;\n				varicellaTime = proc.getDate().getTime();\n			}\n			else if (cpt.equals(\"90633\")) {\n				hepA++;\n				hepATime = proc.getDate().getTime();\n			}\n			else if (cpt.equals(\"90649\")) {\n				hpv++;\n				hpvTime = proc.getDate().getTime();\n			}\n		}\n		if (3 > hepB) {\n			reason += testHepB(hepB, patientDOB, hepBTime);\n		}\n		if (3 > rota) {\n			reason += testRotaVirus(rota, patientDOB, rotaTime);\n		}\n		if (6 > diptet) {\n			reason += testDipTet(diptet, patientDOB, deptetTime);\n		}\n		if (3 > haemoflu) {\n			reason += testHaemoFlu(haemoflu, patientDOB, haemofluTime, haemofluTimeFirst);\n		}\n		if (4 > pneumo) {\n			reason += testPneumo(pneumo, patientDOB, pneumoTime, pneumofluTimeFirst);\n		}\n		if (3 > polio) {\n			reason += testPolio(polio, patientDOB, polioTime);\n		}\n		if (2 > measles) {\n			reason += testMeasles(measles, patientDOB, measlesTime);\n		}\n		if (2 > varicella) {\n			reason += testVaricella(varicella, patientDOB, varicellaTime);\n		}\n		if (2 > hepA) {\n			reason += testHepA(hepA, patientDOB, hepATime);\n		}\n		if (3 > hpv && gen.getName().equals(\"Female\")) {\n			reason += testHPV(hpv, patientDOB, hpvTime);\n		}\n		if(reason.length() > 2)\n			return reason.substring(0, reason.length() - 2);\n		return reason;\n	}\n'),(107,'	public void addVisitFlag(VisitFlag flag) {\n		if (null == visitFlags)\n			visitFlags = new ArrayList<VisitFlag>();\n		visitFlags.add(flag);\n	}\n'),(108,'	public List<ProcedureBean> getProcedures(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (pid == 0L) throw new SQLException(\"pid cannot be 0\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"Select * From OVProcedure ovp, OfficeVisits ov, CPTCodes cpt \"\n					+ \"Where ovp.VisitID=ov.ID and cpt.code=ovp.cptcode and ov.patientID=? \"\n					+ \"ORDER BY ov.visitDate desc\");\n			ps.setLong(1, pid);\n			ResultSet rs = ps.executeQuery();\n			return procedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(109,'	public PatientBean getPatient(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM Patients WHERE MID = ?\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next()) {\n				return patientLoader.loadSingle(rs);\n			} else\n				return null;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(110,'	public Date getDateOfBirth() {\n		try {\n			return new SimpleDateFormat(\"MM/dd/yyyy\").parse(dateOfBirthStr);\n		} catch (ParseException e) {\n			e.printStackTrace();\n			return null;\n		}\n	}\n'),(111,'	public Gender getGender() {\n		return gender;\n	}\n'),(112,'	public String getCPTCode() {\n		return CPTCode;\n	}\n'),(113,'	public Date getDate() {\n		return date;\n	}\n'),(114,'	public static String testHepB(int count, Date patientDOB, long time) {\n		String reason = \"\";\n		long weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\n		if (0 == count) {\n			if (olderThan(patientDOB, 0, 0, 0))\n				reason += \"90371 Hepatitis B (birth), \";\n		}\n		else if (1 == count) {\n			if (olderThan(patientDOB, 0, 1, 0) && 4 <= weeks)\n				reason += \"90371 Hepatitis B (1 month), \";\n		}\n		else if (2 == count) {\n			if (olderThan(patientDOB, 0, 6, 0) && 8 <= weeks)\n				reason += \"90371 Hepatitis B (6 months), \";				\n		}\n		return reason;\n	}\n'),(115,'	public static String testRotaVirus(int count, Date patientDOB, long time) {\n		String reason = \"\";\n		long weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\n		if (0 == count) {\n			if (olderThan(patientDOB, 0, 0, 6))\n				reason += \"90681 Rotavirus (6 weeks), \";\n		}\n		else if (1 == count) {\n			if (olderThan(patientDOB, 0, 4, 0) && 4 <= weeks)\n				reason += \"90681 Rotavirus (4 months), \";\n		}\n		else if (2 == count) {\n			if (olderThan(patientDOB, 0, 6, 0) && 4 <= weeks )\n				reason += \"90681 Rotavirus (6 months), \";				\n		}\n		return reason;\n	}\n'),(116,'	public static String testDipTet(int count, Date patientDOB, long time) {\n		String reason = \"\";\n		long weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\n		if (0 == count) {\n			if (olderThan(patientDOB, 0, 0, 6))\n				reason += \"90696 Diphtheria, Tetanus, Pertussis (6 weeks), \";\n		}\n		else if (1 == count) {\n			if (olderThan(patientDOB, 0, 4, 0) && 4 <= weeks )\n				reason += \"90696 Diphtheria, Tetanus, Pertussis (4 months), \";\n		}\n		else if (2 == count) {\n			if (olderThan(patientDOB, 0, 6, 0) && 4 <= weeks)\n				reason += \"90696 Diphtheria, Tetanus, Pertussis (6 months), \";				\n		}\n		else if (3 == count) {\n			if (olderThan(patientDOB, 0, 0, 15) && 26 <= weeks)\n				reason += \"90696 Diphtheria, Tetanus, Pertussis (15 weeks), \";\n		}\n		else if (4 == count) {\n			if (olderThan(patientDOB, 4, 0, 0) && 26 <= weeks)\n				reason += \"90696 Diphtheria, Tetanus, Pertussis (4 years), \";\n		}\n		else if (5 == count) {\n			if (olderThan(patientDOB, 11, 0, 0) && 260 <= weeks)\n				reason += \"90696 Diphtheria, Tetanus, Pertussis (11 years), \";				\n		}\n		return reason;\n	}\n'),(117,'	public static String testHaemoFlu(int count, Date patientDOB, long time, long firstDoseTime) {\n		String reason = \"\";\n		long weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\n		Date firstDose = new Date(firstDoseTime);\n		if (0 == count) {\n			if (olderThan(patientDOB, 0, 0, 6))\n				reason += \"90645 Haemophilus influenzae (6 weeks), \";\n		}\n		else if (1 == count) {\n			if (olderThan(patientDOB, 0, 4, 0) && !(firstDoseAfter(patientDOB, firstDose, 1, 0, 0)) && 4 <= weeks)\n				reason += \"90645 Haemophilus influenzae (4 months), \";\n			else if (olderThan(patientDOB, 0, 4, 0) && firstDoseAfter(patientDOB, firstDose, 1, 0, 0) && !(firstDoseAfter(patientDOB, firstDose, 1, 2, 0)) && 8 <= weeks)\n				reason += \"90645 Haemophilus influenzae (4 months), \";\n		}\n		else if (2 == count) {\n			if (olderThan(patientDOB, 0, 6, 0) && 4 <= weeks && !(firstDoseAfter(patientDOB, firstDose, 1, 0, 0)))\n				reason += \"90645 Haemophilus influenzae (6 months), \";\n		}\n		return reason;\n	}\n'),(118,'	public static String testPneumo(int count, Date patientDOB, long time, long firstDoseTime) {\n		String reason = \"\";\n		Date firstDose = new Date(firstDoseTime);\n		long weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\n		if (0 == count) {\n			if (olderThan(patientDOB, 0, 0, 6))\n				reason += \"90669 Pneumococcal (6 weeks), \";\n		}\n		else if (1 == count) {\n			if (olderThan(patientDOB, 0, 4, 0) && !(firstDoseAfter(patientDOB, firstDose, 1,0,0)) && 4 <= weeks)\n				reason += \"90669 Pneumococcal (4 months), \";\n			else if (olderThan(patientDOB, 0, 4, 0) && (firstDoseAfter(patientDOB, firstDose, 1,0,0)) && !(firstDoseAfter(patientDOB, firstDose, 1,2,0)) && 8 <= weeks)\n				reason += \"90669 Pneumococcal (4 months), \";\n		}\n		else if (2 == count) {\n			if (olderThan(patientDOB, 0, 6, 0) && 4 <= weeks && !(firstDoseAfter(patientDOB, firstDose, 1,0,0)))\n				reason += \"90669 Pneumococcal (6 months), \";				\n		}\n		else if (3 == count) {\n			if (olderThan(patientDOB, 1, 0, 0) && 8 <= weeks && !(firstDoseAfter(patientDOB, firstDose, 1,0,0)))\n				reason += \"90669 Pneumococcal (12 months), \";				\n		}\n		return reason;\n	}\n'),(119,'	public static String testPolio(int count, Date patientDOB, long time) {\n		String reason = \"\";\n		long weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\n		if (0 == count) {\n			if (olderThan(patientDOB, 0, 0, 6))\n				reason += \"90712 Poliovirus (6 weeks), \";\n		}\n		else if (1 == count) {\n			if (olderThan(patientDOB, 0, 4, 0) && 4 <= weeks)\n				reason += \"90712 Poliovirus (4 months), \";\n		}\n		else if (2 == count) {\n			if (olderThan(patientDOB, 0, 6, 0))\n				reason += \"90712 Poliovirus (6 months), \";				\n		}\n		return reason;	\n	}\n'),(120,'	public static String testMeasles(int count, Date patientDOB, long time) {\n		String reason = \"\";\n		long weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\n		if (0 == count) {\n			if (olderThan(patientDOB, 1, 0, 0))\n				reason += \"90707 Measles, Mumps, Rubekka (12 months), \";\n		}\n		else if (1 == count) {\n			if (olderThan(patientDOB, 4, 0, 0) && 12 <= weeks)\n				reason += \"90707 Measles, Mumps, Rubekka (4 years), \";\n		}\n		return reason;\n	}\n'),(121,'	public static String testVaricella(int count, Date patientDOB, long time) {\n		String reason = \"\";\n		long weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\n		if (0 == count) {\n			if (olderThan(patientDOB, 1, 0, 0))\n				reason += \"90396 Varicella (12 months), \";\n		}\n		else if (1 == count) {\n			if (olderThan(patientDOB, 4, 0, 0) && 12 <= weeks)\n				reason += \"90396 Varicella (4 years), \";\n		}\n		return reason;\n	}\n'),(122,'	public static String testHepA(int count, Date patientDOB, long time) {\n		String reason = \"\";\n		long weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\n		if (0 == count) {\n			if (olderThan(patientDOB, 1, 0, 0))\n				reason += \"90633 Hepatits A (12 months), \";\n		}\n		else if (1 == count) {\n			if (olderThan(patientDOB, 1, 6, 0) && 26 <= weeks)\n				reason += \"90633 Hepatits A (18 months), \";\n		}\n		return reason;	\n	}\n'),(124,'	public static String testHPV(int count, Date patientDOB, long time) {\n		String reason = \"\";\n		long weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\n		new Date();\n		if (0 == count) {\n			if (olderThan(patientDOB, 9, 0, 0))\n				reason += \"90649 Human Papillomavirus (9 years), \";\n		}\n		else if (1 == count) {\n			if (olderThan(patientDOB, 9, 2, 0) && 8 <= weeks)\n				reason += \"90649 Human Papillomavirus (9 years, 2 months), \";\n		}\n		else if (2 == count) {\n			if (olderThan(patientDOB, 9, 6, 0) && 16 <= weeks)\n				reason += \"90649 Human Papillomavirus (9 years, 6 months), \";\n		}\n		return reason;\n	}\n'),(125,'	private static boolean olderThan(Date patientDOB, int years, int months, int weeks) {\n		return endBefore(patientDOB, new Date(), years, months, weeks);\n	}\n'),(126,'	private static boolean firstDoseAfter(Date patientDOB, Date ageFirst, int years, int months, int weeks) {\n		return endBefore(patientDOB, ageFirst, years, months, weeks);\n	}\n'),(127,'	private static boolean endBefore(Date startTime, Date endTime, int years, int months, int weeks) {\n		Calendar cal = Calendar.getInstance();\n		cal.setTime(startTime);\n		cal.add(Calendar.YEAR, years);\n		cal.add(Calendar.MONTH, months);\n		cal.add(Calendar.HOUR, weeks*7*24);\n		startTime = cal.getTime();\n		return (startTime.compareTo(endTime) <= 0); //startTime.before(endTime);\n	}\n'),(129,'	public AuthDAO getAuthDAO() {\n		return new AuthDAO(this);\n	}\n'),(130,'	public long add(PersonnelBean p) throws FormValidationException, iTrustException {\n		new AddPersonnelValidator().validate(p);\n		long newMID = personnelDAO.addEmptyPersonnel(Role.ER);\n		p.setMID(newMID);\n		personnelDAO.editPersonnel(p);\n		String pwd = authDAO.addUser(newMID, Role.ER, RandomPassword.getRandomPassword());\n		p.setPassword(pwd);\n		return newMID;\n	}\n'),(132,'	public void validate(PersonnelBean p) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"First name\", p.getFirstName(), ValidationFormat.NAME, false));\n		errorList.addIfNotNull(checkFormat(\"Last name\", p.getLastName(), ValidationFormat.NAME, false));\n		errorList.addIfNotNull(checkFormat(\"Email\", p.getEmail(), ValidationFormat.EMAIL, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(133,'	public long addEmptyPersonnel(Role role) throws DBException, iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		long nextID = getNextID(role);\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO Personnel(MID, Role) VALUES(?,?)\");\n			ps.setString(1, \"\"+nextID);\n			ps.setString(2, role.name());\n			ps.executeUpdate();\n			return nextID;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(134,'	public void setMID(long mid) {\n		MID = mid;\n	}\n'),(135,'	public void editPersonnel(PersonnelBean p) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE Personnel SET AMID=?,firstName=?,lastName=?,\"\n					+ \"phone1=?,phone2=?,phone3=?, address1=?,address2=?,city=?, state=?, zip=?, zip1=?, zip2=?, specialty=?, email=?, MessageFilter=?\"\n					+ \" WHERE MID=?\");\n			personnelLoader.loadParameters(ps, p);\n			ps.setLong(17, p.getMID());\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(136,'	public static String getRandomPassword() {\n		String str = \"\";\n		for (int i = 0; i < 10; i++) {\n			str += (char) (rand.nextInt(26) + \'a\');\n		}\n		return str;\n	}\n'),(137,'	public String addUser(Long mid, Role role, String password) throws DBException {\n		Connection conn = null;\n		PreparedStatement pstmt = null;\n		try {\n			conn = factory.getConnection();\n			pstmt = conn\n					.prepareStatement(\"INSERT INTO Users (MID, PASSWORD, ROLE, sQuestion, sAnswer) VALUES (?,?,?,?,?)\");\n			pstmt.setLong(1, mid);\n			pstmt.setString(2, password);\n			pstmt.setString(3, role.toString());\n			pstmt.setString(4, \"Enter the random password given in your account email\");\n			String pwd = RandomPassword.getRandomPassword();\n			pstmt.setString(5, pwd);\n			pstmt.executeUpdate();\n			return pwd;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, pstmt);\n		}\n	}\n'),(138,'	public void setPassword(String password) {\n		this.password = password;\n	}\n'),(140,'	public PersonnelBean getPersonnel(String input) throws iTrustException {\n		try {\n			long mid = Long.valueOf(input);\n			PersonnelBean personnel = personnelDAO.getPersonnel(mid);\n			if (personnel != null) {\n				return personnel;\n			} else\n				throw new iTrustException(Messages.getString(\"ViewPersonnelAction.1\")); //$NON-NLS-1$\n		} catch (NumberFormatException e) {\n			e.printStackTrace();\n			throw new iTrustException(Messages.getString(\"ViewPersonnelAction.2\")); //$NON-NLS-1$\n		}\n	}\n'),(141,'	public static String getString(String key) {\n		try {\n			return RESOURCE_BUNDLE.getString(key);\n		} catch (MissingResourceException e) {\n			return \'!\' + key + \'!\';\n		}\n	}\n'),(142,'	public List<Email> getEmailHistory() throws iTrustException {\n		return emailDAO.getEmailsByPerson(personnelDAO.getPersonnel(loggedInMID).getEmail());\n	}\n'),(143,'	public String getEmail() {\n		return email;\n	}\n'),(144,'	public List<Email> getEmailsByPerson(String email) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM FakeEmail WHERE ToAddr LIKE ? ORDER BY AddedDate DESC\");\n			ps.setString(1, \"%\" + email + \"%\");\n			ResultSet rs = ps.executeQuery();\n			return emailBeanLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(147,'	public ApptTypeDAO getApptTypeDAO() {\n		return new ApptTypeDAO(this);\n	}\n'),(148,'	public List<ApptTypeBean> getApptTypes() throws SQLException {\n		return apptTypeDAO.getApptTypes();\n	}\n'),(149,'	public List<ApptTypeBean> getApptTypes() throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		conn = factory.getConnection();\n		ps = conn.prepareStatement(\"SELECT * FROM appointmenttype\");\n		ResultSet rs = ps.executeQuery();\n		List<ApptTypeBean> atList = this.atLoader.loadList(rs);\n		DBUtil.closeConnection(conn, ps);\n		return atList;\n	}\n'),(150,'	public String addApptType(ApptTypeBean apptType) throws SQLException, FormValidationException {\n		validator.validate(apptType);\n		List<ApptTypeBean> list = this.getApptTypes();\n		for(ApptTypeBean a : list) {\n			if(a.getName().equals(apptType.getName()))\n				return \"Appointment Type: \"+apptType.getName()+\" already exists.\";\n		}\n		try {\n			if (apptTypeDAO.addApptType(apptType)) {\n				return \"Success: \" + apptType.getName() + \" - Duration: \" + apptType.getDuration() + \" added\";\n			} else\n				return \"The database has become corrupt. Please contact the system administrator for assistance.\";\n		} catch (SQLException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		} \n	}\n'),(151,'	public void validate(ApptTypeBean a) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"Appointment Type Name\", a.getName(), ValidationFormat.APPT_TYPE_NAME, false));\n		errorList.addIfNotNull(checkFormat(\"Appointment Type Duration\", a.getDuration()+\"\", ValidationFormat.APPT_TYPE_DURATION, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(152,'	public String getName() {\n		return name;\n	}\n'),(153,'	public boolean addApptType(ApptTypeBean apptType) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		conn = factory.getConnection();\n		ps = conn.prepareStatement(\n				\"INSERT INTO appointmenttype (appt_type, duration) \"\n			  + \"VALUES (?, ?)\");\n		this.atLoader.loadParameters(ps, apptType);\n		int x = ps.executeUpdate();\n		DBUtil.closeConnection(conn, ps);\n		if(x > 0)\n			return true;\n		else\n			return false;\n	}\n'),(154,'	public int getDuration() {\n		return duration;\n	}\n'),(155,'	public String editApptType(ApptTypeBean apptType) throws SQLException, FormValidationException {\n		validator.validate(apptType);\n		List<ApptTypeBean> list = this.getApptTypes();\n		int flag = 0;\n		for(ApptTypeBean a : list) {\n			if(a.getName().equals(apptType.getName())) {\n				flag = 1;\n				if(a.getDuration() == apptType.getDuration())\n					return \"Appointment Type: \"+apptType.getName()+\" already has a duration of \"+apptType.getDuration()+\" minutes.\";\n				break;\n			}\n		}\n		if(flag == 0) {\n			return \"Appointment Type: \"+apptType.getName()+\" you are trying to update does not exist.\";\n		}\n		try {\n			if (apptTypeDAO.editApptType(apptType)) {\n				return \"Success: \" + apptType.getName() + \" - Duration: \" + apptType.getDuration() + \" updated\";\n			} else\n				return \"The database has become corrupt. Please contact the system administrator for assistance.\";\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		}\n	}\n'),(156,'	public boolean editApptType(ApptTypeBean apptType) throws SQLException, DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		conn = factory.getConnection();\n		ps = conn.prepareStatement(\"UPDATE appointmenttype SET duration=? WHERE appt_type=?\");\n		ps.setInt(1, apptType.getDuration());\n		ps.setString(2, apptType.getName());\n		int x = ps.executeUpdate();\n		DBUtil.closeConnection(conn, ps);\n		if(x > 0)\n			return true;\n		else\n			return false;\n	}\n'),(159,'	public int getDurationByType(String at) throws SQLException {\n		List<ApptTypeBean> list = this.getApptTypes();\n		for(ApptTypeBean a : list) {\n			if(a.getName().equals(at))\n				return a.getDuration();\n		}\n		return 0;\n	}\n'),(162,'	public LabProcedureDAO getLabProcedureDAO() {\n		return new LabProcedureDAO(this);\n	}\n'),(164,'	public List<LabProcedureBean> sortByLOINC(long id) throws DBException {\n		return lpDAO.getAllLabProceduresLOINC(id);\n	}\n'),(165,'	public List<LabProcedureBean> getAllLabProceduresLOINC(long id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (id == 0L) throw new SQLException(\"PatientMID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure WHERE PatientMID = ? ORDER BY LaboratoryProcedureCode ASC\");\n			ps.setLong(1, id);\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(166,'	public List<LabProcedureBean> getLabProcForNextMonth() throws DBException {\n		List<LabProcedureBean> listLabProc = new ArrayList<LabProcedureBean>(0);\n		List<OfficeVisitBean> listOV = ovDAO.getAllOfficeVisitsForLHCP(loggedInMID);\n		for (OfficeVisitBean ov : listOV) {\n			if (listLabProc.isEmpty() == true) {\n				listLabProc = lpDAO.getLabProceduresForLHCPForNextMonth(ov.getID());\n			}\n			else {\n				for (LabProcedureBean lb : lpDAO.getLabProceduresForLHCPForNextMonth(ov.getID())) {\n					listLabProc.add(lb);\n				}\n			}\n		}\n		return listLabProc;\n	}\n'),(167,'	public List<OfficeVisitBean> getAllOfficeVisitsForLHCP(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (mid == 0L) throw new SQLException(\"HCPID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"SELECT * FROM OfficeVisits WHERE HCPID=? ORDER BY VisitDate DESC\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			return officeVisitLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(168,'	public long getID() {\n		return visitID;\n	}\n'),(169,'	public List<LabProcedureBean> getLabProceduresForLHCPForNextMonth(long ovid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (ovid == 0L) throw new SQLException(\"OfficeVisitID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure WHERE OfficeVisitID = ? AND Status = ? AND (DateDiff(SYSDATE(),UpdatedDate) <= 30) ORDER BY UpdatedDate DESC\");\n			ps.setLong(1, ovid);\n			ps.setString(2, LabProcedureBean.Completed);\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(170,'	public void changePrivacy(long x) throws DBException, FormValidationException {\n		LabProcedureBean pb = lpDAO.getLabProcedure(x);\n		if (checkAccess(x)) {\n			if (pb.getRights().equals(LabProcedureBean.Restrict)) {\n				pb.allow();\n			} else {\n				pb.restrict();\n			}\n			validator.validate(pb);\n			lpDAO.updateRights(pb);\n		}\n	}\n'),(171,'	public LabProcedureBean getLabProcedure(long id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure WHERE LaboratoryProcedureID = ?\");\n			ps.setLong(1, id);\n			ResultSet rs = ps.executeQuery();\n			rs.next();\n			return labProcedureLoader.loadSingle(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(172,'	public boolean checkAccess(long x) throws DBException, FormValidationException {\n		LabProcedureBean pb = lpDAO.getLabProcedure(x);\n		OfficeVisitBean ovbean = ovDAO.getOfficeVisit(pb.getOvID());\n		return (loggedInMID == ovbean.getHcpID());\n	}\n'),(173,'	public String getRights() {\n		return rights;\n	}\n'),(174,'	 public void allow(){\n		 this.rights = Allow;\n	 }\n'),(175,'	 public void restrict(){\n		 this.rights = Restrict;\n	 }\n'),(176,'	public void validate(LabProcedureBean b) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"LOINC\", b.getLoinc(), ValidationFormat.LOINC, false));\n		errorList.addIfNotNull(checkFormat(\"Commentary\", b.getCommentary(), ValidationFormat.LABPROCEDURE_COMMENTS, true));\n		errorList.addIfNotNull(checkFormat(\"Results\", b.getResults(), ValidationFormat.LABPROCEDURE_COMMENTS, true));\n		errorList.addIfNotNull(checkFormat(\"Status\", b.getStatus(), ValidationFormat.LAB_STATUS, false));\n		errorList.addIfNotNull(checkFormat(\"Rights\", b.getRights(), ValidationFormat.LAB_RIGHTS, false));\n		if (b.getNumericalResult()!=null && b.getNumericalResult().length() > 0) {\n			errorList.addIfNotNull(checkFormat(\"Numerical Result\", b.getNumericalResult(), \n											   ValidationFormat.LABPROCEDURE_NUMRESULT_CONTENT, \n											   false));\n			errorList.addIfNotNull(checkFormat(\"Numerical Result\", b.getNumericalResult(), \n											   ValidationFormat.LABPROCEDURE_NUMRESULT_LENGTH, \n											   false));\n		}\n		if (b.getUpperBound()!=null && b.getUpperBound().length() > 0) {\n			errorList.addIfNotNull(checkFormat(\"Upper Bound\", b.getUpperBound(), \n											   ValidationFormat.LABPROCEDURE_NUMRESULT_CONTENT, \n											   false));\n			errorList.addIfNotNull(checkFormat(\"Upper Bound\", b.getUpperBound(), \n											   ValidationFormat.LABPROCEDURE_NUMRESULT_LENGTH, \n											   false));\n		}\n		if (b.getLowerBound()!=null && b.getLowerBound().length() > 0) {\n			errorList.addIfNotNull(checkFormat(\"Lower Bound\", b.getLowerBound(), \n											   ValidationFormat.LABPROCEDURE_NUMRESULT_CONTENT, \n											   false));\n			errorList.addIfNotNull(checkFormat(\"Lower Bound\", b.getLowerBound(), \n											   ValidationFormat.LABPROCEDURE_NUMRESULT_LENGTH, \n											   false));\n		}\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(177,'	public void updateRights(LabProcedureBean b) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (b.getPid() == 0L) throw new SQLException(\"PatientMID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE LabProcedure SET Rights = ?, UpdatedDate = ? WHERE LaboratoryProcedureID=?\");\n			ps.setString(1, b.getRights());\n			ps.setTimestamp(2, new java.sql.Timestamp(System.currentTimeMillis()));\n			ps.setLong(3, b.getProcedureID());\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(178,'	public long getOvID() {\n		return ovID;\n	}\n'),(179,'	public long getHcpID() {\n		return this.hcpID;\n	}\n'),(180,'	public int getPendingCount() throws DBException {\n		return lpDAO.getHCPPendingCount(loggedInMID);\n	}\n'),(181,'	public int getHCPPendingCount(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			int count = 0;\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\n					\"SELECT COUNT(*) FROM LabProcedure WHERE Status = ? AND LabProcedure.OfficeVisitID IN \" +\n					    \"(SELECT OfficeVisits.ID FROM OfficeVisits WHERE OfficeVisits.HCPID = ?)\"\n					);\n			ps.setString(1, LabProcedureBean.Pending);\n			ps.setLong(2, mid);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next()) {\n				count = rs.getInt(1);\n			}\n			return count;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(182,'	public List<LabProcedureBean> viewProceduresByHCP() throws DBException {\n		return lpDAO.getHCPLabProcedures(loggedInMID);\n	}\n'),(183,'	public List<LabProcedureBean> getHCPLabProcedures(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (mid == 0L) throw new SQLException(\"HCP id cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\n					\"SELECT * FROM LabProcedure WHERE LabProcedure.OfficeVisitID IN \" +\n					    \"(SELECT OfficeVisits.ID FROM OfficeVisits WHERE OfficeVisits.HCPID = ?)\"\n					);\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(186,'	private HCPVisitBean makeHCPVisitBean(PersonnelBean pb, String visitDate) throws DBException {\n		long hcpid = pb.getMID();\n		HCPVisitBean visitBean = new HCPVisitBean();\n		visitBean.setHCPMID(hcpid);\n		visitBean.setHCPName(pb.getFullName());\n		visitBean.setOVDate(visitDate);\n		visitBean.setHCPSpecialty(pb.getSpecialty());\n		visitBean.setHCPAddr(pb.getStreetAddress1() +\" \"+ pb.getStreetAddress2() +\" \"\n						   + pb.getCity() +\", \"+ pb.getState() +\" \"+ pb.getZip());\n		visitBean.setDesignated(patientDAO.checkDeclaredHCP(patientMID, hcpid));\n		return visitBean;\n	}\n'),(187,'	public long getMID() {\n		return MID;\n	}\n'),(189,'	public void setHCPMID(long mid) {\n		hcpMID = mid;\n	}\n'),(190,'	public String getFullName() {\n		return getFirstName() + \" \" + getLastName();\n	}\n'),(191,'	public void setHCPName(String name) {\n		if (null != name) {\n			HCPName = name;\n		}\n	}\n'),(192,'	public void setOVDate(String date) {\n		if (null != date) {\n			OVDate = date;\n		}\n	}\n'),(193,'	public void setHCPSpecialty(String specialty) {\n		if (null != specialty) {\n			HCPSpecialty = specialty;\n		}\n		else {\n			HCPSpecialty = \"none\";\n		}\n	}\n'),(194,'	public String getStreetAddress1() {\n		return streetAddress1;\n	}\n'),(195,'	public String getStreetAddress2() {\n		return streetAddress2;\n	}\n'),(196,'	public String getCity() {\n		return city;\n	}\n'),(197,'	public String getState() {\n		return state;\n	}\n'),(198,'	public String getZip() {\n		if (getZip2() != null && !\"\".equals(getZip2()))\n			return getZip1() + \"-\" + getZip2();\n		else\n			return getZip1();\n	}\n'),(199,'	public void setHCPAddr(String addr) {\n		if (null != addr) {\n			HCPAddr = addr;\n		}\n	}\n'),(200,'	public boolean checkDeclaredHCP(long pid, long hcpid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM DeclaredHCP WHERE PatientID=? AND HCPID=?\");\n			ps.setLong(1, pid);\n			ps.setLong(2, hcpid);\n			return ps.executeQuery().next();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(201,'	public void setDesignated(boolean val) {\n		designated = val;\n	}\n'),(202,'	private boolean matchPersonnel(PersonnelBean pb, String lastName, String specialty, String zip) {\n		if (lastName != null && !lastName.equals(\"\") && !pb.getLastName().startsWith(lastName))\n			return false;\n		if (specialty != null && !specialty.equals(\"\") && !specialty.equals(pb.getSpecialty()))\n			return false;\n		if (zip != null && !zip.equals(\"\") && !zip.equals(pb.getZip()))\n			return false;\n		return true;\n	}\n'),(203,'	public String getLastName() {\n		return lastName;\n	}\n'),(205,'	public List<OfficeVisitBean> getAllOfficeVisits(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"SELECT * FROM OfficeVisits WHERE PatientID=? ORDER BY VisitDate DESC\");\n			ps.setLong(1, pid);\n			ResultSet rs = ps.executeQuery();\n			return officeVisitLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(206,'	public Date getVisitDate() {\n		Date d = null; \n		try {\n			d = new SimpleDateFormat(\"MM/dd/yyyy\").parse(visitDateStr);\n		} catch (ParseException e) {\n			System.out.println(e.toString());\n		}\n		return d;\n	}\n'),(207,'	public List<PersonnelBean> getDeclaredHCPs(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (pid == 0L) throw new SQLException(\"pid cannot be 0\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM DeclaredHCP, Personnel \"\n					+ \"WHERE PatientID=? AND Personnel.MID=DeclaredHCP.HCPID\");\n			ps.setLong(1, pid);\n			ResultSet rs = ps.executeQuery();\n			return personnelLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(208,'	public long getHCPMID() {\n		return hcpMID;\n	}\n'),(209,'	public List<HCPVisitBean> getVisitedHCPs() {\n		List<HCPVisitBean> visits;\n		try {\n			visits = getAllVisitedHCPs(null, null, null);\n		}\n		catch (iTrustException ie) {\n			visits = new ArrayList<HCPVisitBean>();\n		}\n		return visits;\n	}\n'),(210,'	public HCPVisitBean getNamedHCP(String name) {\n		HCPVisitBean r = new HCPVisitBean();\n		for (HCPVisitBean bean : getVisitedHCPs()) {\n			if (name.equals(bean.getHCPName())) {\n				r = bean;\n				break;\n			}\n		}\n		return r;\n	}\n'),(211,'	public String getHCPName() {\n		return HCPName;\n	}\n'),(212,'	public String undeclareHCP(String name) throws iTrustException {\n		for (HCPVisitBean visit: getVisitedHCPs()) {\n			if (0 == visit.getHCPName().toLowerCase().compareTo(name.toLowerCase())) {\n				Long mid = Long.valueOf(visit.getHCPMID());\n				declareAction.undeclareHCP(mid.toString());\n				visit.setDesignated(false);\n			}\n		}\n		return \"\";\n	}\n'),(213,'	public String undeclareHCP(String input) throws iTrustException {\n		try {\n			long hcpID = Long.valueOf(input);\n			boolean confirm = patientDAO.undeclareHCP(loggedInMID, hcpID);\n			if (confirm) {\n				return \"HCP successfully undeclared\";\n			} else\n				return \"HCP not undeclared\";\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"HCP\'s MID not a number\");\n		} \n	}\n'),(214,'	public String declareHCP(String name) throws iTrustException {\n		boolean match = false;\n		for (HCPVisitBean visit: getVisitedHCPs()) {\n			if (0 == visit.getHCPName().toLowerCase().compareTo(name.toLowerCase())) {\n				match = true;\n				Long mid = Long.valueOf(visit.getHCPMID());\n				if (!patientDAO.checkDeclaredHCP(patientMID, visit.getHCPMID())) {\n					declareAction.declareHCP(mid.toString());\n				}\n				visit.setDesignated(true);\n			}\n		}\n		if (!match) {\n				List<PersonnelBean> doclist = docDAO.getAllPersonnel();\n				for (PersonnelBean ele: doclist) {\n					if (0 == name.compareTo(ele.getFullName())) {\n						HCPVisitBean visitBean;\n						visitBean = new HCPVisitBean();\n						visitBean.setHCPMID(ele.getMID());\n						visitBean.setHCPName(ele.getFullName());\n						visitBean.setOVDate(\"\");\n						visitBean.setHCPSpecialty(ele.getSpecialty());\n						visitBean.setHCPAddr(ele.getStreetAddress1() +\" \"+ ele.getStreetAddress2() +\" \"+ ele.getCity() +\", \"+ ele.getState() +\" \"+ ele.getZip());\n						visitBean.setDesignated(true);\n						Long mid = Long.valueOf(ele.getMID());\n						if (!patientDAO.checkDeclaredHCP(patientMID, mid)) {\n							declareAction.declareHCP(mid.toString());\n						}\n					}\n				}\n		}\n		return \"\";\n	}\n'),(215,'	public String declareHCP(String hcpStr) throws iTrustException {\n		try {\n			long hcpID = Long.valueOf(hcpStr);\n			if (authDAO.getUserRole(hcpID) != Role.HCP)\n				throw new iTrustException(\"This user is not a licensed healthcare professional!\");\n			boolean confirm = patientDAO.declareHCP(loggedInMID, hcpID);\n			if (confirm) {\n				return \"HCP successfully declared\";\n			} else\n				return \"HCP not declared\";\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"HCP\'s MID not a number\");\n		} \n	}\n'),(216,'	public List<PersonnelBean> getAllPersonnel() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM personnel where role in (\'hcp\',\'uap\',\'er\') \");\n			ResultSet rs = ps.executeQuery();\n			return personnelLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(217,'	public boolean checkDeclared(long mid) throws DBException {\n		return patientDAO.checkDeclaredHCP(patientMID, mid);\n	}\n'),(218,'	public List<HCPVisitBean> filterHCPList(String lastName, String specialty, String zip) {\n		List<HCPVisitBean> visits;\n		try {\n			visits = getAllVisitedHCPs(lastName, specialty, zip);\n		}\n		catch (iTrustException ie) {\n			visits = new ArrayList<HCPVisitBean>();\n		}\n		return visits;\n	}\n'),(220,'	public long add(PersonnelBean p) throws FormValidationException, iTrustException {\n		new AddPersonnelValidator().validate(p);\n		long newMID = personnelDAO.addEmptyPersonnel(Role.UAP);\n		p.setMID(newMID);\n		personnelDAO.editPersonnel(p);\n		String pwd = authDAO.addUser(newMID, Role.UAP, RandomPassword.getRandomPassword());\n		p.setPassword(pwd);\n		return newMID;\n	}\n'),(223,'	public ICDCodesDAO getICDCodesDAO() {\n		return new ICDCodesDAO(this);\n	}\n'),(224,'	public String addICDCode(DiagnosisBean diagn) throws FormValidationException {\n		validator.validate(diagn);\n		try {\n			if (icdDAO.addICDCode(diagn)) {\n				return \"Success: \" + diagn.getICDCode() + \" - \" + diagn.getDescription() + \" added\";\n			} else\n				return \"The database has become corrupt. Please contact the system administrator for assistance.\";\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		} catch (iTrustException e) {\n			return e.getMessage();\n		}\n	}\n'),(225,'	public void validate(DiagnosisBean d) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"ICD9CM Code\", d.getICDCode(), ValidationFormat.ICD9CM, false));\n		errorList.addIfNotNull(checkFormat(\"Description\", d.getDescription(),\n				ValidationFormat.ICD_CODE_DESCRIPTION, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(226,'	public boolean addICDCode(DiagnosisBean diag) throws DBException, iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO ICDCodes (Code, Description, Chronic) \" + \"VALUES (?,?,?)\");\n			ps.setString(1, diag.getICDCode());\n			ps.setString(2, diag.getDescription());\n			ps.setString(3, diag.getClassification());\n			return (1 == ps.executeUpdate());\n		} catch (SQLException e) {\n			e.printStackTrace();\n			if (1062 == e.getErrorCode())\n				throw new iTrustException(\"Error: Code already exists.\");\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(227,'	public String getICDCode() {\n		return icdCode;\n	}\n'),(228,'	public String getDescription() {\n		return description;\n	}\n'),(229,'	public String getMessage() {\n		if (message == null)\n			return \"An error has occurred. Please see log for details.\";\n		return message;\n	}\n'),(230,'	public String updateInformation(DiagnosisBean diagn) throws FormValidationException {\n		validator.validate(diagn);\n		try {\n			int rows = icdDAO.updateCode(diagn);\n			if (0 == rows) {\n				return \"Error: Code not found.\";\n			} else {\n				return \"Success: \" + rows + \" row(s) updated\";\n			}\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		}\n	}\n'),(231,'	public int updateCode(DiagnosisBean diag) throws DBException {\n		int rows;\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE ICDCodes SET Description = ?, Chronic = ? WHERE Code = ?\");\n			ps.setString(1, diag.getDescription());\n			ps.setString(2, diag.getClassification());\n			ps.setString(3, diag.getICDCode());\n			rows = ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n		return rows;\n	}\n'),(234,'	public PatientBean getPatient(long patientID) throws iTrustException {\n		return patientDAO.getPatient(patientID);\n	}\n'),(235,'	public List<PatientBean> getRepresentees() throws iTrustException {\n		return patientDAO.getRepresented(loggedInMID);\n	}\n'),(236,'	public List<PatientBean> getRepresented(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT Patients.* FROM Representatives, Patients \"\n					+ \"WHERE RepresenterMID=? AND RepresenteeMID=Patients.MID\");\n			ps.setLong(1, pid);\n			ResultSet rs = ps.executeQuery();\n			return patientLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(237,'	public PersonnelBean getPrescribingDoctor(PrescriptionBean prescription) throws iTrustException {\n		return personnelDAO.getPrescribingDoctor(prescription);\n	}\n'),(238,'	public PersonnelBean getPrescribingDoctor(PrescriptionBean prescription) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM Personnel WHERE MID IN (SELECT HCPID FROM OfficeVisits WHERE ID=?)\");\n			ps.setLong(1, prescription.getVisitID());\n			ResultSet rs = ps.executeQuery();\n			return personnelLoader.loadList(rs).get(0);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(239,'	public List<PrescriptionBean> getPrescriptionsForPatient(long patientID) throws iTrustException {\n		PatientBean patient = patientDAO.getPatient(patientID);\n		if (loggedInMID == patientID) {\n			return patientDAO.getPrescriptions(patientID);\n		}\n		List<String> toList = new ArrayList<String>();\n		toList.add(patient.getEmail());\n		List<PatientBean> representatives = patientDAO.getRepresenting(patientID);\n		for(PatientBean representative : representatives) {\n			if (loggedInMID == representative.getMID()) {\n				return patientDAO.getPrescriptions(patientID);\n			}\n			toList.add(representative.getEmail());\n		}\n		List<PersonnelBean> dlhcps = patientDAO.getDeclaredHCPs(patientID);\n		for(PersonnelBean dlhcp : dlhcps) {\n			if (loggedInMID == dlhcp.getMID()) {\n				return patientDAO.getPrescriptions(patientID);\n			}\n			List<PersonnelBean> uaps = personnelDAO.getUAPsForHCP(dlhcp.getMID());\n			for(PersonnelBean uap : uaps) {\n				if (loggedInMID == uap.getMID()) {\n					return patientDAO.getPrescriptions(patientID);\n				}\n			}\n		}\n		Email email = new Email();\n		email.setToList(toList);\n		email.setFrom(\"noreply@itrust.com\"); //$NON-NLS-1$\n		email.setSubject(Messages.getString(\"ViewPrescriptionRecordsAction.1\")); //$NON-NLS-1$\n		email.setBody(Messages.getString(\"ViewPrescriptionRecordsAction.2\")); //$NON-NLS-1$\n		emailer.sendEmail(email);\n		return patientDAO.getPrescriptions(patientID);\n	}\n'),(240,'	public List<PrescriptionBean> getPrescriptions(long patientID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (patientID == 0L) throw new SQLException(\"pid cannot be 0\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"Select * From OVMedication,NDCodes,OfficeVisits \"\n					+ \"Where OfficeVisits.PatientID = ? AND OVMedication.VisitID = \"\n					+ \"OfficeVisits.ID AND NDCodes.Code=OVMedication.NDCode \"\n					+ \"ORDER BY OfficeVisits.visitDate DESC, OVMedication.NDCode ASC;\");\n			ps.setLong(1, patientID);\n			ResultSet rs = ps.executeQuery();\n			return prescriptionLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(241,'	public String getEmail() {\n		return email;\n	}\n'),(242,'	public List<PatientBean> getRepresenting(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT Patients.* FROM Representatives, Patients \"\n					+ \"WHERE RepresenteeMID=? AND RepresenterMID=Patients.MID\");\n			ps.setLong(1, pid);\n			ResultSet rs = ps.executeQuery();\n			return patientLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(243,'	public long getMID() {\n		return MID;\n	}\n'),(244,'	public List<PersonnelBean> getUAPsForHCP(long hcpid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM Personnel WHERE MID IN (SELECT UAP FROM HCPRelations WHERE HCP=?)\");\n			ps.setLong(1, hcpid);\n			ResultSet rs = ps.executeQuery();\n			return personnelLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(247,'	public void setFrom(String from) {\n		this.from = from;\n	}\n'),(248,'	public void setSubject(String subject) {\n		this.subject = subject;\n	}\n'),(249,'	public void setBody(String body) {\n		this.body = body;\n	}\n'),(252,'	public NDCodesDAO getNDCodesDAO() {\n		return new NDCodesDAO(this);\n	}\n'),(253,'	public String addNDCode(MedicationBean med) throws FormValidationException {\n		validator.validate(med);\n		try {\n			if (ndDAO.addNDCode(med)) {\n				return \"Success: \" + med.getNDCode() + \" - \" + med.getDescription() + \" added\";\n			} else\n				return \"The database has become corrupt. Please contact the system administrator for assistance.\";\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		} catch (iTrustException e) {\n			return e.getMessage();\n		}\n	}\n'),(254,'	public void validate(MedicationBean m) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"ND Code\", m.getNDCode(), ValidationFormat.ND, false));\n		errorList.addIfNotNull(checkFormat(\"Description\", m.getDescription(),\n				ValidationFormat.ND_CODE_DESCRIPTION, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(255,'	public boolean addNDCode(MedicationBean med) throws DBException, iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO NDCodes (Code, Description) \" + \"VALUES (?,?)\");\n			ps.setString(1, med.getNDCode());\n			ps.setString(2, med.getDescription());\n			return (1 == ps.executeUpdate());\n		} catch (SQLException e) {\n			e.printStackTrace();\n			if (1062 == e.getErrorCode())\n				throw new iTrustException(\"Error: Code already exists.\");\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(256,'	public String getNDCode() {\n		return NDCode;\n	}\n'),(257,'	public String getDescription() {\n		return description;\n	}\n'),(258,'	public String updateInformation(MedicationBean med) throws FormValidationException {\n		validator.validate(med);\n		try {\n			int rows = updateCode(med);\n			if (0 == rows) {\n				return \"Error: Code not found.\";\n			} else {\n				return \"Success: \" + rows + \" row(s) updated\";\n			}\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		}\n	}\n'),(259,'	private int updateCode(MedicationBean med) throws DBException {\n		return ndDAO.updateCode(med);\n	}\n'),(260,'	public int updateCode(MedicationBean med) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE NDCodes SET Description = ? \" + \"WHERE Code = ?\");\n			ps.setString(1, med.getDescription());\n			ps.setString(2, med.getNDCode());\n			return ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(261,'	public String removeNDCode(MedicationBean med) throws DBException {\n		try {\n			if (ndDAO.getNDCode(med.getNDCode()) == null) {\n				return \"Drug does not exist or already has been removed from the database.\";\n			}\n		}\n		 catch (DBException e) {\n				e.printStackTrace();\n				return e.getMessage();\n		 }\n		try {\n			if (ndDAO.removeNDCode(med)) {\n				return \"Success: \" + med.getNDCode() + \" - \" + med.getDescription() + \" removed\";\n			} else\n				return \"The database has become corrupt. Please contact the system administrator for assistance.\";\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		} catch (iTrustException e) {\n			return e.getMessage();\n		}\n	}\n'),(262,'	public MedicationBean getNDCode(String code) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM NDCodes WHERE Code = ?\");\n			ps.setString(1, code);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next())\n				return medicationLoader.loadSingle(rs);\n			return null;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(263,'	public boolean removeNDCode(MedicationBean med) throws DBException, iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"DELETE FROM NDCodes WHERE Code=?\");\n			ps.setString(1, med.getNDCode());\n			return (1 == ps.executeUpdate());\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(266,'	public long addEmptyOfficeVisit(long loggedInMID) throws DBException {\n		OfficeVisitBean ov = new OfficeVisitBean();\n		ov.setHcpID(loggedInMID);\n		ov.setPatientID(pid);\n		long visitID = ovDAO.add(ov);\n		return visitID;\n	}\n'),(268,'	public void setHcpID(long hcpID) {\n		this.hcpID = hcpID;\n	}\n'),(269,'	public void setPatientID(long patientID) {\n		this.patientID = patientID;\n	}\n'),(270,'	public long add(OfficeVisitBean ov) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"INSERT INTO OfficeVisits (VisitDate, Notes, HCPID, PatientID, HospitalID) VALUES (?,?,?,?,?)\");\n			setValues(ps, ov);\n			ps.executeUpdate();\n			return DBUtil.getLastInsert(conn);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(271,'	public List<OfficeVisitBean> getAllOfficeVisits() throws iTrustException {\n		return ovDAO.getAllOfficeVisits(pid);\n	}\n'),(272,'	public String getUserName() throws DBException, iTrustException {\n		return factory.getAuthDAO().getUserName(pid);\n	}\n'),(273,'	public String getUserName(long mid) throws DBException, iTrustException {\n		Role role = getUserRole(mid);\n		switch (role) {\n			case HCP:\n			case PHA:\n			case ADMIN:\n			case UAP:\n			case ER:\n			case LT:\n				return factory.getPersonnelDAO().getName(mid);\n			case PATIENT:\n				return factory.getPatientDAO().getName(mid);\n			case TESTER:\n				return String.valueOf(mid);\n			default:\n				throw new iTrustException(\"Role \" + role + \" not supported\");\n		}\n	}\n'),(274,'	public TransactionDAO getTransactionDAO() {\n		return new TransactionDAO(this);\n	}\n'),(275,'	public void updateProcedure(LabProcedureBean b) throws DBException, FormValidationException{\n		validator.validate(b);\n		if(!b.getStatus().equals(lpDAO.getLabProcedure(b.getProcedureID()).getStatus())){\n			new EmailUtil(factory).sendEmail(makeEmail(b));\n		}\n		lpDAO.updateLabProcedure(b);\n	}\n'),(276,'	public String getStatus() {\n		return status;\n	}\n'),(277,'	public long getProcedureID() {\n		return procedureID;\n	}\n'),(278,'	private Email makeEmail(LabProcedureBean b) throws DBException{\n		PatientBean p = new PatientDAO(factory).getPatient(b.getPid());\n		Email email = new Email();\n		email.setFrom(\"no-reply@itrust.com\");\n		email.setToList(Arrays.asList(p.getEmail()));\n		email.setSubject(\"A Lab Procedure Was Updated\");\n		email.setBody(String.format(\"Dear %s, \\n Your Lab Procedure (%s) has a new updated status of %s. Log on to iTrust to view.\",  p.getFullName(),b.getLoinc(),b.getStatus()));\n		return email;\n	}\n'),(279,'	public void updateLabProcedure(LabProcedureBean b) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (b.getPid() == 0L) throw new SQLException(\"PatientMID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE LabProcedure SET \"+\n					\" Status = ?, Commentary = ?, Results = ?, UpdatedDate = ?, \"+\n					\" LabTechID = ?, PriorityCode = ? , NumericalResults = ?, \"+\n					\" LowerBound = ?, UpperBound = ? \"+\n					\" WHERE LaboratoryProcedureID=?\");\n			ps.setString(1, b.getStatus());\n			ps.setString(2, b.getCommentary());\n			ps.setString(3, b.getResults());\n			ps.setTimestamp(4, new java.sql.Timestamp(System.currentTimeMillis()));\n			ps.setLong(5, b.getLTID());\n			ps.setInt(6, b.getPriorityCode());\n			ps.setString(7, b.getNumericalResult());\n			ps.setString(8, b.getLowerBound());\n			ps.setString(9, b.getUpperBound());\n			ps.setLong(10, b.getProcedureID());\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(281,'	public long getPid() {\n		return pid;\n	}\n'),(282,'	public String getFullName() {\n		return getFirstName() + \" \" + getLastName();\n	}\n'),(283,'	public String getLoinc() {\n		return loinc;\n	}\n'),(284,'	public List<LabProcedureBean> viewProcedures(long id) throws DBException {\n		return lpDAO.getAllLabProceduresDate(id);\n	}\n'),(285,'	public List<LabProcedureBean> getAllLabProceduresDate(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (mid == 0L) throw new SQLException(\"PatientMID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure WHERE PatientMID = ? ORDER BY UpdatedDate DESC\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(286,'	public List<LabProcedureBean> viewPatientProcedures(long pid) throws DBException {\n		return lpDAO.getLabProcedures(loggedInMID, pid);\n	}\n'),(287,'	public List<LabProcedureBean> getLabProcedures(long mid, long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (mid == 0L) throw new SQLException(\"HCP id cannot be null\");\n			if (pid == 0L) throw new SQLException(\"HCP id cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\n					\"SELECT * FROM LabProcedure WHERE LabProcedure.OfficeVisitID IN \" +\n					    \"(SELECT OfficeVisits.ID FROM OfficeVisits WHERE \" +\n					    \" OfficeVisits.HCPID = ? AND OfficeVisits.PatientID = ?)\"\n					);\n			ps.setLong(1, mid);\n			ps.setLong(2, pid);\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(289,'	public MessageDAO getMessageDAO() {\n		return new MessageDAO(this);\n	}\n'),(290,'	public List<MessageBean> getAllMyMessages() throws SQLException {\n		return messageDAO.getMessagesFor(loggedInMID);\n	}\n'),(291,'	public List<MessageBean> getMessagesFor(long mid) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		conn = factory.getConnection();\n		ps = conn.prepareStatement(\"SELECT * FROM message WHERE to_id = ? ORDER BY sent_date DESC\");\n		ps.setLong(1, mid);\n		ResultSet rs = ps.executeQuery();\n		List<MessageBean> mbList = this.mbLoader.loadList(rs);\n		DBUtil.closeConnection(conn, ps);\n		return mbList;\n	}\n'),(292,'	public List<MessageBean> getAllMyMessagesTimeAscending() throws SQLException {\n		return messageDAO.getMessagesTimeAscending(loggedInMID);\n	}\n'),(293,'	public List<MessageBean> getMessagesTimeAscending(long mid) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		conn = factory.getConnection();\n		ps = conn.prepareStatement(\"SELECT * FROM message WHERE to_id = ? ORDER BY sent_date ASC\");\n		ps.setLong(1, mid);\n		ResultSet rs = ps.executeQuery();\n		List<MessageBean> mbList = this.mbLoader.loadList(rs);\n		DBUtil.closeConnection(conn, ps);\n		return mbList;\n	}\n'),(294,'	public List<MessageBean> getAllMyMessagesNameAscending() throws SQLException {\n		return messageDAO.getMessagesNameAscending(loggedInMID);\n	}\n'),(295,'	public List<MessageBean> getMessagesNameAscending(long mid) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		ResultSet rs;\n		conn = factory.getConnection();\n		if(mid >= 999999999){\n			ps = conn.prepareStatement(\"SELECT message.* FROM message, patients WHERE message.from_id=patients.mid AND message.to_id=? ORDER BY patients.lastName ASC, patients.firstName ASC, message.sent_date ASC\");\n			ps.setLong(1, mid);\n			rs = ps.executeQuery();\n		}\n		else{\n			ps = conn.prepareStatement(\"SELECT message.* FROM message, personnel WHERE message.from_id=personnel.mid AND message.to_id=? ORDER BY personnel.lastName ASC, personnel.firstName ASC, message.sent_date ASC\");\n			ps.setLong(1, mid);\n			rs = ps.executeQuery();\n		}\n		List<MessageBean> mbList = this.mbLoader.loadList(rs);\n		DBUtil.closeConnection(conn, ps);\n		return mbList;\n	}\n'),(296,'	public List<MessageBean> getAllMyMessagesNameDescending() throws SQLException {\n		return messageDAO.getMessagesNameDescending(loggedInMID);\n	}\n'),(297,'	public List<MessageBean> getMessagesNameDescending(long mid) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		ResultSet rs;\n		conn = factory.getConnection();\n		if(mid >= 999999999){\n			ps = conn.prepareStatement(\"SELECT message.* FROM message, patients WHERE message.from_id=patients.mid AND message.to_id=? ORDER BY patients.lastName DESC, patients.firstName DESC, message.sent_date DESC\");\n			ps.setLong(1, mid);\n			rs = ps.executeQuery();\n		}\n		else{\n			ps = conn.prepareStatement(\"SELECT message.* FROM message, personnel WHERE message.from_id=personnel.mid AND message.to_id=? ORDER BY personnel.lastName DESC, personnel.firstName DESC, message.sent_date DESC\");\n			ps.setLong(1, mid);\n			rs = ps.executeQuery();\n		}\n		List<MessageBean> mbList = this.mbLoader.loadList(rs);\n		DBUtil.closeConnection(conn, ps);\n		return mbList;\n	}\n'),(298,'	public List<MessageBean> getAllMySentMessages() throws SQLException {\n		return messageDAO.getMessagesFrom(loggedInMID);\n	}\n'),(299,'	public List<MessageBean> getMessagesFrom(long mid) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		conn = factory.getConnection();\n		ps = conn.prepareStatement(\"SELECT * FROM message WHERE from_id = ? ORDER BY sent_date DESC\");\n		ps.setLong(1, mid);\n		ResultSet rs = ps.executeQuery();\n		List<MessageBean> mbList = this.mbLoader.loadList(rs);\n		DBUtil.closeConnection(conn, ps);\n		return mbList;\n	}\n'),(300,'	public List<MessageBean> getAllMySentMessagesTimeAscending() throws SQLException {\n		return messageDAO.getMessagesFromTimeAscending(loggedInMID);\n	}\n'),(301,'	public List<MessageBean> getMessagesFromTimeAscending(long mid) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		conn = factory.getConnection();\n		ps = conn.prepareStatement(\"SELECT * FROM message WHERE from_id = ? ORDER BY sent_date ASC\");\n		ps.setLong(1, mid);\n		ResultSet rs = ps.executeQuery();\n		List<MessageBean> mbList = this.mbLoader.loadList(rs);\n		DBUtil.closeConnection(conn, ps);\n		return mbList;\n	}\n'),(302,'	public List<MessageBean> getAllMySentMessagesNameAscending() throws SQLException {\n		return messageDAO.getMessagesFromNameAscending(loggedInMID);\n	}\n'),(303,'	public List<MessageBean> getMessagesFromNameAscending(long mid) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		ResultSet rs;\n		conn = factory.getConnection();\n		if(mid >= 999999999){\n			ps = conn.prepareStatement(\"SELECT message.* FROM message, patients WHERE message.to_id=patients.mid AND message.from_id=? ORDER BY patients.lastName ASC, patients.firstName ASC, message.sent_date ASC\");\n			ps.setLong(1, mid);\n			rs = ps.executeQuery();\n		}\n		else{\n			ps = conn.prepareStatement(\"SELECT message.* FROM message, personnel WHERE message.to_id=personnel.mid AND message.from_id=? ORDER BY personnel.lastName ASC, personnel.firstName ASC, message.sent_date ASC\");\n			ps.setLong(1, mid);\n			rs = ps.executeQuery();\n		}\n		List<MessageBean> mbList = this.mbLoader.loadList(rs);\n		DBUtil.closeConnection(conn, ps);\n		return mbList;\n	}\n'),(304,'	public List<MessageBean> getAllMySentMessagesNameDescending() throws SQLException {\n		return messageDAO.getMessagesFromNameDescending(loggedInMID);\n	}\n'),(305,'	public List<MessageBean> getMessagesFromNameDescending(long mid) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		ResultSet rs;\n		conn = factory.getConnection();\n		if(mid >= 999999999){\n			ps = conn.prepareStatement(\"SELECT message.* FROM message, patients WHERE message.to_id=patients.mid AND message.from_id=? ORDER BY patients.lastName DESC, patients.firstName DESC, message.sent_date DESC\");\n			ps.setLong(1, mid);\n			rs = ps.executeQuery();\n		}\n		else{\n			ps = conn.prepareStatement(\"SELECT message.* FROM message, personnel WHERE message.to_id=personnel.mid AND message.from_id=? ORDER BY personnel.lastName DESC, personnel.firstName DESC, message.sent_date DESC\");\n			ps.setLong(1, mid);\n			rs = ps.executeQuery();\n		}\n		List<MessageBean> mbList = this.mbLoader.loadList(rs);\n		DBUtil.closeConnection(conn, ps);\n		return mbList;\n	}\n'),(307,'	public long getFrom() {\n		return from;\n	}\n'),(308,'	public String getName(long mid) throws iTrustException {\n		if(mid < 7000000000L)\n			return patientDAO.getName(mid);\n		else\n			return personnelDAO.getName(mid);\n	}\n'),(309,'	public String getSubject() {\n		return subject;\n	}\n'),(310,'	public String getBody() {\n		return body;\n	}\n'),(311,'	public Timestamp getSentDate() {\n		return this.timestamp;\n	}\n'),(312,'	public String getPersonnelName(long mid) throws iTrustException {\n		return personnelDAO.getName(mid);\n	}\n'),(313,'	public void setRead(MessageBean mBean) {\n		try {\n			messageDAO.updateRead(mBean);\n		} catch (DBException e) {\n			e.printStackTrace();\n		}\n	}\n'),(314,'	public void updateRead(MessageBean mBean) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE message SET been_read=1 WHERE message_id=?\");\n			ps.setLong(1, mBean.getMessageId());\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(315,'	public int getUnreadCount() throws SQLException {\n		List<MessageBean> messages = getAllMyMessages();\n		int count = 0;\n		for (MessageBean mb: messages) {\n			if (mb.getRead() == 0) {\n				count++;\n			}\n		}\n		return count;\n	}\n'),(316,'	public int getRead() {\n		return this.read;\n	}\n'),(317,'	public long linkedToReferral(long id) throws DBException {\n		return referralDAO.isReferralMessage(id);\n	}\n'),(318,'	public long isReferralMessage(long messageID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM ReferralMessage WHERE messageID = ?\");\n			ps.setLong(1, messageID);\n			ResultSet rs = ps.executeQuery();\n			if(rs.next()){\n				return rs.getLong(2);\n			} else{\n				return 0;\n			}\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(320,'	public AdverseEventDAO getAdverseEventDAO() {\n		return new AdverseEventDAO(this);\n	}\n'),(321,'	public AdverseEventBean getAdverseEvent(int id) throws DBException\n	{\n		return adEventDAO.getReport(id);\n	}\n'),(322,'	public AdverseEventBean getReport(int id) throws DBException{\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM AdverseEvents WHERE id=?\");\n			ps.setInt(1, id);\n			ResultSet rs = ps.executeQuery();\n			List<AdverseEventBean> aeList = aeLoader.loadList(rs);\n			return aeList.get(0);\n		} catch(SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);			\n		}\n	}\n'),(323,'	public List<AdverseEventBean> getUnremovedAdverseEventsByCode(String code) throws DBException\n	{\n		return adEventDAO.getUnremovedAdverseEventsByCode(code);\n	}\n'),(324,'	public List<AdverseEventBean> getUnremovedAdverseEventsByCode(String code) throws DBException\n	{\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM adverseevents WHERE code=? AND status=?\");\n			ps.setString(1, code);\n			ps.setString(2, \"Active\");\n			ResultSet rs;\n			rs = ps.executeQuery();\n			return aeLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(325,'	public String getNameForCode(String code) throws DBException\n	{\n		return adEventDAO.getNameForCode(code);\n	}\n'),(326,'	public String getNameForCode(String code) throws DBException\n	{\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT PresImmu FROM adverseevents WHERE code=?\");\n			ps.setString(1, code);\n			ResultSet rs;\n			rs = ps.executeQuery();\n			if(rs.next()) {\n				 return rs.getString(\"PresImmu\");\n			}\n			return \"Name not Found\";\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(329,'	public String addAppt(ApptBean appt) throws FormValidationException, SQLException {\n		validator.validate(appt);\n		if(appt.getDate().before(new Timestamp(System.currentTimeMillis()))) {\n			return \"The scheduled date of this Appointment (\"+appt.getDate()+\") has already passed.\";\n		}\n		try {\n			apptDAO.scheduleAppt(appt);\n			return \"Success: \" + appt.getApptType() + \" for \" + appt.getDate() + \" added\";\n		}\n		catch (SQLException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		} \n	}\n'),(330,'	public void validate(ApptBean bean) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		if(bean.getComment() == null)\n			return;\n		errorList.addIfNotNull(checkFormat(\"Appointment Comment\", bean.getComment(), ValidationFormat.APPT_COMMENT, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(331,'	public Timestamp getDate() {\n		return date;\n	}\n'),(332,'	public void scheduleAppt(ApptBean appt) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		conn = factory.getConnection();\n		ps = conn.prepareStatement(\n				\"INSERT INTO appointment (appt_type, patient_id, doctor_id, sched_date, comment) \"\n			  + \"VALUES (?, ?, ?, ?, ?)\");\n		ps = this.abloader.loadParameters(ps, appt);\n		ps.executeUpdate();\n		DBUtil.closeConnection(conn, ps);\n	}\n'),(333,'	public String getApptType() {\n		return apptType;\n	}\n'),(334,'	public String getName(long mid) throws iTrustException {\n		if(mid < 7000000000L)\n			return patientDAO.getName(mid);\n		else\n			return personnelDAO.getName(mid);\n	}\n'),(337,'	public ProceduresDAO getProceduresDAO() {\n		return new ProceduresDAO(this);\n	}\n'),(338,'	public CPTCodesDAO getCPTCodesDAO() {\n		return new CPTCodesDAO(this);\n	}\n'),(341,'	public List<ProcedureBean> getImmunizations() throws DBException {\n		if (isUnsaved()) {\n			return new ArrayList<ProcedureBean>();\n		} else {\n			return proceduresDAO.getImmunizationList(getOvID());\n		}\n	}\n'),(344,'	public List<ProcedureBean> getImmunizationList(long visitID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"Select * From OVProcedure,CPTCodes,OfficeVisits Where OVProcedure.VisitID = ? \"\n					+ \"AND OfficeVisits.ID=OVProcedure.VisitID AND CPTCodes.Code=OVProcedure.CPTCode AND CPTCodes.attribute=\'immunization\'\");\n			ps.setLong(1, visitID);\n			ResultSet rs = ps.executeQuery();\n			return loader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(345,'	public void addImmunization(ProcedureBean bean) throws iTrustException {\n		verifySaved();\n		proceduresDAO.add(bean);\n	}\n'),(347,'	public long add(ProcedureBean bean) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			String statement = \"INSERT INTO OVProcedure \" +\n				\"(VisitID,CPTCode) VALUES (?,?)\";\n			ps = conn.prepareStatement(statement);\n			ps.setLong(1, bean.getVisitID());\n			ps.setString(2, bean.getCPTCode());\n			ps.executeUpdate();\n			return DBUtil.getLastInsert(conn);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(348,'	public void editImmunization(ProcedureBean bean) throws iTrustException {\n		verifySaved();\n		proceduresDAO.edit(bean);\n	}\n'),(349,'	public long edit(ProcedureBean bean) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			String statement = \"UPDATE OVProcedure \" +\n				\"SET VisitID=?, CPTCode=?\" +\n				\"WHERE ID=?\";\n			ps = conn.prepareStatement(statement);\n			ps.setLong(1, bean.getVisitID());\n			ps.setString(2, bean.getCPTCode());\n			ps.setLong(3, bean.getOvProcedureID());\n			ps.executeUpdate();\n			return DBUtil.getLastInsert(conn);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(350,'	public void deleteImmunization(ProcedureBean bean) throws iTrustException {\n		verifySaved();\n		proceduresDAO.remove(bean.getOvProcedureID());\n	}\n'),(351,'	public long getOvProcedureID() {\n		return ovProcedureID;\n	}\n'),(352,'	public void remove(long ovProcedureID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"DELETE FROM OVProcedure WHERE ID=? \");\n			ps.setLong(1, ovProcedureID);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(353,'	public List<ProcedureBean> getImmunizationCodes() throws DBException {\n		return cptDAO.getImmunizationCPTCodes();\n	}\n'),(354,'	public List<ProcedureBean> getImmunizationCPTCodes() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"select * from cptcodes where attribute=\'immunization\' order by code\");\n			ResultSet rs = ps.executeQuery();\n			return procedureBeanLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(356,'	public AllergyDAO getAllergyDAO() {\n		return new AllergyDAO(this);\n	}\n'),(357,'	private Email makeEmail() throws DBException{\n		Email email = new Email();\n		List<PatientBean> reps = patientDAO.getRepresenting(pb.getMID());\n		List<String> toAddrs = new ArrayList<String>();\n		toAddrs.add(pb.getEmail());\n		for (PatientBean r: reps) {\n			toAddrs.add(r.getEmail());\n		}\n		email.setFrom(\"no-reply@itrust.com\");\n    	email.setToList(toAddrs); // patient and personal representative\n    	email.setSubject(String.format(\"Emergency Report Viewed Notification\"));\n    	email.setBody(\"Dear \" + pb.getFullName() + \",\\n An emergency report has been generated. \" + \n    			\"Please login to iTrust to see who has viewed your records.\");\n		return email;\n	}\n'),(358,'	public String getPatientName() {\n		return (pb.getFirstName() + \" \" + pb.getLastName());\n	}\n'),(359,'	public String getFirstName() {\n		return firstName;\n	}\n'),(360,'	public String getLastName() {\n		return lastName;\n	}\n'),(361,'	public String getPatientAge() {\n		return Integer.toString(pb.getAge());\n	}\n'),(362,'	public int getAge() {\n		try {\n			long ageInMs = System.currentTimeMillis()\n					- new SimpleDateFormat(\"MM/dd/yyyy\").parse(dateOfBirthStr).getTime();\n			long age = ageInMs / (1000L * 60L * 60L * 24L * 365L);\n			return (int) age;\n		} catch (ParseException e) {\n			e.printStackTrace();\n			return -1;\n		}\n	}\n'),(363,'	public String getPatientGender() {\n		return pb.getGender().toString();\n	}\n'),(365,'	public String getPatientEmergencyContact() {\n		return pb.getEmergencyName() + \" \" + pb.getEmergencyPhone();\n	}\n'),(366,'	public String getEmergencyName() {\n		return emergencyName;\n	}\n'),(367,'	public String getEmergencyPhone() {\n		return getEmergencyPhone1() + \"-\" + getEmergencyPhone2() + \"-\" + getEmergencyPhone3();\n	}\n'),(368,'	public String getBloodType() {\n		return pb.getBloodType() + \"\";\n	}\n'),(369,'	public BloodType getBloodType() {\n		return bloodType;\n	}\n'),(370,'	public List<AllergyBean> getAllergies() throws iTrustException {\n		return allergyDAO.getAllergies(this.pid);\n	}\n'),(371,'	public List<AllergyBean> getAllergies(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM Allergies WHERE PatientID=? ORDER BY FirstFound DESC\");\n			ps.setLong(1, pid);\n			ResultSet rs = ps.executeQuery();\n			return allergyBeanLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(372,'	public List<PrescriptionBean> getCurrentPrescriptions() throws iTrustException {\n		List<PrescriptionBean> allPrescriptions = patientDAO.getCurrentPrescriptions(this.pid);\n		ArrayList<PrescriptionBean> warningList = new ArrayList<PrescriptionBean>();\n		for (int i = 0; i < allPrescriptions.size(); i++) {\n			if (PrescriptionAlerts.isAlert(allPrescriptions.get(i).getMedication().getNDCode()))\n				warningList.add(allPrescriptions.get(i));\n		}\n		return warningList;\n	}\n'),(373,'	public List<PrescriptionBean> getCurrentPrescriptions(long patientID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (patientID == 0L) throw new SQLException(\"pid cannot be 0\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"Select * From OVMedication,NDCodes,OfficeVisits \"\n					+ \"Where OfficeVisits.PatientID = ? AND OVMedication.VisitID = \"\n					+ \"OfficeVisits.ID AND NDCodes.Code=OVMedication.NDCode AND \"\n					+ \"OVMedication.EndDate >= ?\" + \"ORDER BY OVMedication.ID DESC;\");\n			ps.setLong(1, patientID);\n			ps.setDate(2, DateUtil.getSQLdateXDaysAgoFromNow(91));\n			ResultSet rs = ps.executeQuery();\n			return prescriptionLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(374,'	public MedicationBean getMedication() {\n		return medication;\n	}\n'),(376,'	public List<DiagnosisBean> getWarningDiagnoses() throws iTrustException {\n		try {\n			boolean dup = false;\n			List<DiagnosisBean> allDiagnoses = patientDAO.getDiagnoses(this.pid);\n			ArrayList<DiagnosisBean> warningList = new ArrayList<DiagnosisBean>();\n			for (DiagnosisBean bean: allDiagnoses) {\n				OfficeVisitBean ovb = ovDAO.getOfficeVisit(bean.getVisitID());\n				if(ovb == null){\n					continue;\n				}\n				if (\"yes\".equals(bean.getClassification()) || (ovb.getVisitDate().getTime() > Calendar.getInstance().getTimeInMillis() - 30 * 24 * 60 * 60 * 1000))  {\n					for (DiagnosisBean wbean: warningList) {\n						if (bean.getDescription().equals(wbean.getDescription())) {\n							dup = true;\n						}\n					}\n					if (!dup) {\n						warningList.add(bean);\n					}\n				}\n			}\n			return warningList;\n		} catch (DBException dbe) {\n			throw new iTrustException(dbe.getMessage());\n		}\n	}\n'),(377,'	public List<DiagnosisBean> getDiagnoses(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (pid == 0L) throw new SQLException(\"pid cannot be 0\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM OVDiagnosis ovd, OfficeVisits ov, ICDCodes icd \"\n					+ \"WHERE ovd.VisitID=ov.ID and icd.Code=ovd.ICDCode and ov.PatientID=? \"\n					+ \"ORDER BY ov.visitDate DESC\");\n			ps.setLong(1, pid);\n			ResultSet rs = ps.executeQuery();\n			return diagnosisLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(378,'	public long getVisitID() {\n		return visitID;\n	}\n'),(379,'	public String getClassification() {\n		return classification;\n	}\n'),(380,'	public List<ProcedureBean> getImmunizations() throws iTrustException {\n		List<ProcedureBean> allImmunizations = patientDAO.getImmunizationProcedures(this.pid);\n		return allImmunizations;\n	}\n'),(381,'	public List<ProcedureBean> getImmunizationProcedures(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (pid == 0L) throw new SQLException(\"pid cannot be 0\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"Select * From OVProcedure ovp, OfficeVisits ov, CPTCodes cpt \"\n					+ \"Where ovp.VisitID=ov.ID and cpt.code=ovp.cptcode and ov.patientID=? and cpt.attribute=\'immunization\'\"\n					+ \"ORDER BY ov.visitDate desc\");\n			ps.setLong(1, pid);\n			ResultSet rs = ps.executeQuery();\n			return procedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(383,'	public List<TransactionBean> getAccesses(String lowerDate, String upperDate, String logMID, boolean getByRole) throws iTrustException, DBException,\n			FormValidationException {\n		List<TransactionBean> accesses; //stores the log entries\n		List<PersonnelBean> dlhcps; \n		List<PatientBean> patientRelatives = getRepresented(loggedInMID); \n		long mid = loggedInMID;\n		try {\n			mid = Long.parseLong(logMID);\n		} catch (Exception e) {		\n		}\n		dlhcps = patientDAO.getDeclaredHCPs(mid);\n		boolean midInScope = false;\n		for (PatientBean pb : patientRelatives) {\n			if (pb.getMID() == mid) \n				midInScope = true;\n		}\n		if (mid != loggedInMID && !midInScope) { //the selected user in the form is out of scope and can\'t be shown to the user\n			throw new FormValidationException(\"Log to View.\");\n		}\n		long dlhcpID = -1;\n		if(!dlhcps.isEmpty())\n			dlhcpID = dlhcps.get(0).getMID();\n		if (lowerDate == null || upperDate == null)\n			return transDAO.getAllRecordAccesses(mid, dlhcpID, getByRole);\n		try {\n			Date lower = new SimpleDateFormat(\"MM/dd/yyyy\").parse(lowerDate);\n			Date upper = new SimpleDateFormat(\"MM/dd/yyyy\").parse(upperDate);\n			if (lower.after(upper))\n				throw new FormValidationException(\"Start date must be before end date!\");\n			accesses = transDAO.getRecordAccesses(mid, dlhcpID, lower, upper, getByRole);\n		} catch (ParseException e) {\n			throw new FormValidationException(\"Enter dates in MM/dd/yyyy\");\n		} \n		return accesses;\n	}\n'),(384,'	public List<PatientBean> getRepresented(long pid) throws iTrustException {\n		return patientDAO.getRepresented(pid);\n	}\n'),(385,'	public List<TransactionBean> getAllRecordAccesses(long patientID, long dlhcpID, boolean getByRole) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"SELECT * FROM TransactionLog WHERE secondaryMID=? AND transactionCode \"\n							+ \"IN(\" + TransactionType.patientViewableStr + \") AND loggedInMID!=? ORDER BY timeLogged DESC\");\n			ps.setLong(1, patientID);\n			ps.setLong(2, dlhcpID);\n			ResultSet rs = ps.executeQuery();\n			List<TransactionBean> tbList = loader.loadList(rs);\n			tbList = addAndSortRoles(tbList, patientID, getByRole);\n			return tbList;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(386,'	public List<TransactionBean> getRecordAccesses(long patientID, long dlhcpID, java.util.Date lower, java.util.Date upper, boolean getByRole) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"SELECT * FROM TransactionLog WHERE secondaryMID=? AND transactionCode IN (\"\n							+ TransactionType.patientViewableStr\n							+ \") \"\n							+ \"AND timeLogged >= ? AND timeLogged <= ? \"\n							+ \"AND loggedInMID!=? \"\n							+ \"ORDER BY timeLogged DESC\");\n			ps.setLong(1, patientID);\n			ps.setTimestamp(2, new Timestamp(lower.getTime()));\n			ps.setTimestamp(3, new Timestamp(upper.getTime() + 1000L * 60L * 60 * 24L));\n			ps.setLong(4, dlhcpID);\n			ResultSet rs = ps.executeQuery();\n			List<TransactionBean> tbList = loader.loadList(rs);\n			tbList = addAndSortRoles(tbList, patientID, getByRole);\n			return tbList;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(388,'	public Timestamp getTimeLogged() {\n		return timeLogged;\n	}\n'),(391,'	public RemoteMonitoringDAO getRemoteMonitoringDAO() {\n		return new RemoteMonitoringDAO(this);\n	}\n'),(392,'	public List<RemoteMonitoringDataBean> getPatientsData() throws DBException {\n		return rmDAO.getPatientsData(loggedInMID);\n	}\n'),(393,'	public List<RemoteMonitoringDataBean> getPatientsData(long loggedInMID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM RemoteMonitoringLists WHERE HCPMID=? ORDER BY PatientMID\");\n			ps.setLong(1, loggedInMID);\n			ResultSet patientRS = ps.executeQuery();\n			ps = conn.prepareStatement(\"SELECT * FROM RemoteMonitoringData WHERE timelogged >= CURRENT_DATE ORDER BY PatientID, timeLogged DESC\");\n			ResultSet dataRS = ps.executeQuery();\n			List<String> patientList = new ArrayList<String>();\n			while(patientRS.next()) {\n				patientList.add(patientRS.getLong(\"PatientMID\") + \"\");\n			}\n			List<RemoteMonitoringDataBean> dataList = loader.loadList(dataRS);			\n			int i, j;\n			for(i = 0; i < dataList.size(); i++) {\n				if(!patientList.contains(dataList.get(i).getPatientMID() + \"\")) {\n					dataList.remove(i);\n					i--;\n				}\n			}\n			boolean itsThere;\n			for(i = 0; i < patientList.size(); i++) {\n				itsThere = false;\n				for(j = 0; j < dataList.size(); j++) {\n					if((dataList.get(j).getPatientMID() + \"\").equals(patientList.get(i))) {\n						itsThere = true;\n						break;\n					}\n				}\n				if(!itsThere) {\n					dataList.add(new RemoteMonitoringDataBean(Long.parseLong(patientList.get(i))));\n				}\n			}\n			return dataList;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(394,'	public List<RemoteMonitoringDataBean> getPatientDataByDate(long patientMID, String startDate, String endDate) throws DBException,FormValidationException {\n		Date lower;\n		Date upper;\n		try {\n			lower = new SimpleDateFormat(\"MM/dd/yyyy\").parse(startDate);\n			upper = new SimpleDateFormat(\"MM/dd/yyyy\").parse(endDate);\n			if (lower.after(upper))\n				throw new FormValidationException(\"Start date must be before end date!\");\n		} catch (ParseException e) {\n			throw new FormValidationException(\"Enter dates in MM/dd/yyyy\");\n		}		\n		return rmDAO.getPatientDataByDate(patientMID, lower, upper);\n	}\n'),(395,'	public List<RemoteMonitoringDataBean> getPatientDataByDate(long patientMID, Date lower, Date upper) throws DBException{\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try{\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM remotemonitoringdata WHERE PatientID=? AND timeLogged >= ? AND timeLogged <= ? ORDER BY timeLogged DESC\");\n			ps.setLong(1, patientMID);\n			ps.setTimestamp(2, new Timestamp(lower.getTime()));\n			ps.setTimestamp(3, new Timestamp(upper.getTime() + 1000L * 60L * 60 * 24L));\n			ResultSet rs = ps.executeQuery();\n			List<RemoteMonitoringDataBean> dataList = loader.loadList(rs);\n			return dataList;\n		}catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(396,'	public List<RemoteMonitoringDataBean> getPatientDataByType(long patientMID, String dataType) throws DBException,FormValidationException {\n		String types[] = {\"weight\", \"systolicBloodPressure\", \"diastolicBloodPressure\", \"glucoseLevel\",\n				\"pedometerReading\"};\n		boolean valid = false;\n		for (String dType : types) {\n			if (dType.equals(dataType)) {\n				valid = true;\n				break;\n			}\n		}\n		if (!valid) {\n			throw new FormValidationException(\"Input must be a valid telemedicine data type!\");\n		}\n		return rmDAO.getPatientDataByType(patientMID, dataType);\n	}\n'),(397,'	public List<RemoteMonitoringDataBean> getPatientDataByType(long patientMID, String dataType) throws DBException{\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try{\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM remotemonitoringdata WHERE PatientID=? AND \"+dataType+\" != -1 ORDER BY timeLogged ASC\");\n			ps.setLong(1, patientMID);\n			ResultSet rs = ps.executeQuery();\n			List<RemoteMonitoringDataBean> dataList = loader.loadList(rs);\n			return dataList;\n		}catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(398,'	public List<RemoteMonitoringDataBean> getPatientDataWithoutLogging() throws DBException {\n		return rmDAO.getPatientsData(loggedInMID);\n	}\n'),(399,'	public String getPatientName(long pid) throws DBException, iTrustException {\n		return authDAO.getUserName(pid);\n	}\n'),(400,'	public List<PersonnelBean> getMonitoringHCPs() throws DBException, iTrustException {\n		return rmDAO.getMonitoringHCPs(loggedInMID);\n	}\n'),(401,'	public List<PersonnelBean> getMonitoringHCPs(long patientMID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM Personnel, RemoteMonitoringLists \"\n					+ \"WHERE RemoteMonitoringLists.PatientMID=? AND RemoteMonitoringLists.HCPMID=Personnel.MID\");\n			ps.setLong(1, patientMID);\n			ResultSet rs = ps.executeQuery();\n			return personnelLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(404,'	public List<TelemedicineBean> getTelemedicineBean(long patientMID) throws DBException {\n		return rmDAO.getTelemedicineBean(patientMID);\n	}\n'),(405,'	public List<TelemedicineBean> getTelemedicineBean(long patientMID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM RemoteMonitoringLists WHERE PatientMID=?\");\n			ps.setLong(1, patientMID);\n			ResultSet rs = ps.executeQuery();\n			return rmListLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(406,'	public void addRemoteMonitoringData(RemoteMonitoringDataBean rmdBean)\n	  throws DBException, FormValidationException,iTrustException {\n		validator.validate(rmdBean);\n		String role;\n		if (loggedInMID == patientMID){\n			role = \"self-reported\";\n		} else if (authDAO.getUserRole(loggedInMID).getUserRolesString().equals(\"uap\")){\n			role = \"case-manager\";\n		} else {\n			role = \"patient representative\";\n		}		\n		rmDAO.storePatientData(patientMID, rmdBean, role, loggedInMID);\n	}\n'),(407,'	public void validate(RemoteMonitoringDataBean m) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		if (!(m.getSystolicBloodPressure() == 0 || m.getSystolicBloodPressure() == -1))\n			errorList.addIfNotNull(checkFormat(\"Systolic Blood Pressure\", \"\" + m.getSystolicBloodPressure(),\n					ValidationFormat.SYSTOLIC_BLOOD_PRESSURE, true));\n		if (!(m.getDiastolicBloodPressure() == 0 || m.getDiastolicBloodPressure() == -1))\n			errorList.addIfNotNull(checkFormat(\"Diastolic Blood Pressure\", \"\" + m.getDiastolicBloodPressure(),\n					ValidationFormat.DIASTOLIC_BLOOD_PRESSURE, true));\n		if (!(m.getGlucoseLevel() == 0 || m.getGlucoseLevel() == -1))\n			errorList.addIfNotNull(checkFormat(\"Glucose Level\", \"\" + m.getGlucoseLevel(),\n					ValidationFormat.GLUCOSE_LEVEL, true));\n		if (!(m.getPedometerReading() == 0 || m.getPedometerReading() == -1))\n			errorList.addIfNotNull(checkFormat(\"Pedometer Reading\", \"\" + m.getPedometerReading(),\n					ValidationFormat.PEDOMETER_READING, true));\n		if (!(m.getHeight() == 0 || m.getHeight() == -1))\n			errorList.addIfNotNull(checkFormat(\"Height\", \"\" + m.getHeight(),\n					ValidationFormat.HEIGHT, true));\n		if (!(m.getWeight() == 0 || m.getWeight() == -1))\n			errorList.addIfNotNull(checkFormat(\"Weight\", \"\" + m.getWeight(),\n					ValidationFormat.WEIGHT, true));\n		if (errorList.hasErrors()){\n			throw new FormValidationException(errorList);\n		}\n	}\n'),(408,'	public Role getUserRole(long mid) throws DBException, iTrustException {\n		Connection conn = null;\n		PreparedStatement pstmt = null;\n		try {\n			conn = factory.getConnection();\n			pstmt = conn.prepareStatement(\"SELECT role FROM Users WHERE MID=?\");\n			pstmt.setLong(1, mid);\n			ResultSet rs;\n			rs = pstmt.executeQuery();\n			if (rs.next()) {\n				return Role.parse(rs.getString(\"role\"));\n			} else {\n				throw new iTrustException(\"User does not exist\");\n			}\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, pstmt);\n		}\n	}\n'),(410,'	public void storePatientData(long patientMID, RemoteMonitoringDataBean bean, String reporterRole, long reporterMID)\n	throws DBException, iTrustException {\n		float height = bean.getHeight();\n		float weight = bean.getWeight();\n		int pedometer = bean.getPedometerReading();\n		int sbp = bean.getSystolicBloodPressure();\n		int dbp = bean.getDiastolicBloodPressure();\n		int glucose = bean.getGlucoseLevel();\n		if (height == 0)	height		= -1;\n		if (weight == 0)	weight		= -1;\n		if (pedometer == 0)	pedometer	= -1;\n		if (sbp == 0)		sbp			= -1;\n		if (dbp == 0)		dbp			= -1;\n		if (glucose == 0)	glucose		= -1;\n		if (getNumberOfDailyEntries(patientMID, \"height\") >= 1 && height != -1)\n			throw new iTrustException(\"Patient height entries for today cannot exceed 1.\");\n		if (getNumberOfDailyEntries(patientMID, \"weight\") >= 1 && weight != -1)\n			throw new iTrustException(\"Patient weight entries for today cannot exceed 1.\");\n		if (getNumberOfDailyEntries(patientMID, \"pedometerReading\") >= 1 && pedometer != -1)\n			throw new iTrustException(\"Patient pedometer reading entries for today cannot exceed 1.\");\n		if (getNumberOfDailyEntries(patientMID, \"glucoseLevel\") >= 10 && glucose != -1)\n			throw new iTrustException(\"Patient glucose level entries for today cannot exceed 10.\");\n		if (getNumberOfDailyEntries(patientMID, \"systolicBloodPressure\") >= 10 && sbp != -1)\n			throw new iTrustException(\"Patient systolic blood pressure entries for today cannot exceed 10.\");\n		if (getNumberOfDailyEntries(patientMID, \"diastolicBloodPressure\") >= 10 && dbp != -1)\n			throw new iTrustException(\"Patient diastolic blood pressure entries for today cannot exceed 10.\");\n		if(reporterRole.equals(\"patient representative\"))\n			validatePR(reporterMID, patientMID);\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO RemoteMonitoringData(PatientID, height, weight, \"\n					+ \"pedometerReading, systolicBloodPressure, diastolicBloodPressure, glucoseLevel, ReporterRole, ReporterID) VALUES(?,?,?,?,?,?,?,?,?)\");\n			ps.setLong(1, patientMID);\n			ps.setFloat(2, height);\n			ps.setFloat(3, weight);\n			ps.setInt(4, pedometer);\n			ps.setInt(5, sbp);\n			ps.setInt(6, dbp);\n			ps.setInt(7, glucose);\n			ps.setString(8, reporterRole);\n			ps.setLong(9, reporterMID);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(411,'	public String getPatientName(long pid) throws DBException, iTrustException {\n		return authDAO.getUserName(pid);\n	}\n'),(413,'	public DiagnosesDAO getDiagnosesDAO() {\n		return new DiagnosesDAO(this);\n	}\n'),(414,'	public List<DiagnosisBean> getDiagnosisCodes() throws DBException, iTrustException  {\n		return icdDAO.getAllICDCodes();\n	}\n'),(415,'	public List<DiagnosisBean> getAllICDCodes() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM ICDCodes ORDER BY CODE\");\n			ResultSet rs = ps.executeQuery();\n			return diagnosisLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(416,'	public DiagnosisStatisticsBean getDiagnosisStatistics(String lowerDate, String upperDate, String icdCode, String zip) throws FormValidationException, DBException, iTrustException {\n		DiagnosisStatisticsBean dsBean;\n		try {\n			if (lowerDate == null || upperDate == null || icdCode == null)\n				return null;\n			Date lower = new SimpleDateFormat(\"MM/dd/yyyy\").parse(lowerDate);\n			Date upper = new SimpleDateFormat(\"MM/dd/yyyy\").parse(upperDate);\n			if (lower.after(upper))\n				throw new FormValidationException(\"Start date must be before end date!\");\n			if (!zip.matches(\"[0-9]{5}\"))\n				throw new FormValidationException(\"Zip Code must be 5 digits!\");\n			boolean validCode = false;\n			for(DiagnosisBean diag : getDiagnosisCodes()) {\n					if (diag.getICDCode().equals(icdCode))\n						validCode = true;\n			}\n			if (validCode == false) {\n				throw new FormValidationException(\"ICDCode must be valid diagnosis!\");\n			}\n			dsBean = diagnosesDAO.getDiagnosisCounts(icdCode, zip, lower, upper);\n		} catch (ParseException e) {\n			throw new FormValidationException(\"Enter dates in MM/dd/yyyy\");\n		} \n		return dsBean;\n	}\n'),(417,'	public DiagnosisStatisticsBean getDiagnosisCounts(String icdCode, String zipCode, java.util.Date lower, java.util.Date upper) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		DiagnosisStatisticsBean dsBean = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM ovdiagnosis INNER JOIN officevisits ON ovdiagnosis.VisitID=officevisits.ID INNER JOIN patients ON officevisits.PatientID=patients.MID WHERE ICDCode=? AND zip1=? AND visitDate >= ? AND visitDate <= ? \");\n			ps.setString(1, icdCode);\n			ps.setString(2, zipCode);\n			ps.setTimestamp(3, new Timestamp(lower.getTime()));\n			ps.setTimestamp(4, new Timestamp(upper.getTime() + 1000L * 60L * 60 * 24L));\n			ResultSet rs = ps.executeQuery();\n			rs.last();\n			int local = rs.getRow();\n			ps = conn.prepareStatement(\"SELECT * FROM ovdiagnosis INNER JOIN officevisits ON ovdiagnosis.VisitID=officevisits.ID INNER JOIN patients ON officevisits.PatientID=patients.MID WHERE ICDCode=? AND zip1 LIKE ? AND visitDate >= ? AND visitDate <= ? \");\n			ps.setString(1, icdCode);\n			ps.setString(2, zipCode.substring(0, 3) + \"%\");\n			ps.setTimestamp(3, new Timestamp(lower.getTime()));\n			ps.setTimestamp(4, new Timestamp(upper.getTime() + 1000L * 60L * 60 * 24L));\n			rs = ps.executeQuery();\n			rs.last();\n			int region = rs.getRow();\n			dsBean = new DiagnosisStatisticsBean(zipCode, local, region, lower, upper);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n		return dsBean;\n	}\n'),(418,'	public ArrayList<DiagnosisStatisticsBean> getEpidemicStatistics(String startDate, String icdCode, String zip) throws FormValidationException, DBException {\n		if (startDate == null || icdCode == null)\n			return null;\n		if (! (icdCode.equals(\"84.50\") || icdCode.equals(\"487.00\")) ) {\n			throw new FormValidationException(\"Exception\");\n		}\n		Date lower;  //lower, which is parsed to startDate\n		try {\n			lower = new SimpleDateFormat(\"MM/dd/yyyy\").parse(startDate);\n		} catch (ParseException e) {\n			throw new FormValidationException(\"Enter dates in MM/dd/yyyy\");\n		}\n		if (!zip.matches(\"[0-9]{5}\"))\n			throw new FormValidationException(\"Zip Code must be 5 digits!\");\n		DiagnosisStatisticsBean dbWeek = diagnosesDAO.getCountForWeekOf(icdCode, zip, lower);\n		DiagnosisStatisticsBean dbAvg = new DiagnosisStatisticsBean(zip, 0, 0, lower, lower);\n		Calendar cal = Calendar.getInstance();\n		Date start = diagnosesDAO.findEarliestIncident(icdCode); //start, which is set to earliest incident\n		Calendar startCal = Calendar.getInstance();\n		startCal.setTime(start);\n		ArrayList<DiagnosisStatisticsBean> ret = new ArrayList<DiagnosisStatisticsBean>();\n		if (start == null) {\n			ret.add(dbWeek);\n			ret.add(dbAvg);\n			return ret;\n		}\n		cal.setTime(lower); //cal, which is set to lower\n		Calendar lowerCal = Calendar.getInstance();\n		lowerCal.setTime(lower);\n		int weekOfYr = cal.get(Calendar.WEEK_OF_YEAR);\n		cal.set(Calendar.YEAR, startCal.get(Calendar.YEAR));  //cal\'s year then gets set to start\'s year\n		ArrayList<DiagnosisStatisticsBean> dbList = new ArrayList<DiagnosisStatisticsBean>();\n		while( cal.getTime().before(lower) && cal.get(Calendar.YEAR) != lowerCal.get(Calendar.YEAR)) {\n			dbList.add( diagnosesDAO.getCountForWeekOf(icdCode, zip, cal.getTime()) );\n			cal.add(Calendar.YEAR, 1);\n			cal.set(Calendar.WEEK_OF_YEAR, weekOfYr);\n			cal.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);\n		}\n		long avg = 0;\n		long avgRegion = 0;\n		if (dbList.size() > 0) {\n			for (DiagnosisStatisticsBean d : dbList) {\n				avg += d.getZipStats();\n				avgRegion += d.getRegionStats();\n			}\n			avg /= dbList.size();\n			avgRegion /= dbList.size();\n		}\n		dbAvg.setRegionStats(avgRegion);\n		dbAvg.setZipStats(avg);\n		ret.add(dbWeek);\n		ret.add(dbAvg);\n		return ret;\n	}\n'),(419,'	public DiagnosisStatisticsBean getCountForWeekOf(String icdCode, String zipCode, java.util.Date lower) throws DBException {\n		Calendar cal = Calendar.getInstance();\n		cal.setTime(lower);\n		cal.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);\n		Date lowerDate = cal.getTime();\n		cal.add(Calendar.HOUR, 24*6);\n		Date upperDate = cal.getTime();\n		return  getDiagnosisCounts(icdCode, zipCode, lowerDate, upperDate);\n	}\n'),(421,'	public Date findEarliestIncident(String icdCode) throws DBException{\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT MIN(visitDate) AS visitDate FROM ovdiagnosis d INNER JOIN officevisits o \" +\n										\" ON d.VisitID=o.ID \" + \n										\" WHERE ICDCode LIKE ?\");\n			ps.setString(1, icdCode + \"%\");\n			ResultSet rs = ps.executeQuery();\n			if (rs.next()) {\n				Date date = rs.getDate(\"visitDate\");\n				return date;\n			} \n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n		return null;\n	}\n'),(422,'	public long getZipStats() {\n		return zipStats;\n	}\n'),(423,'	public long getRegionStats() {\n		return regionStats;\n	}\n'),(424,'	public void setRegionStats(long regionStats) {\n		this.regionStats = regionStats;\n	}\n'),(425,'	public void setZipStats(long zipStats) {\n		this.zipStats = zipStats;\n	}\n'),(426,'	public boolean isFluEpidemic(String curDateStr, String zip) throws ParseException, DBException {\n		new SimpleDateFormat(\"MM/dd/yyyy\").parse(\"01/04/1998\");\n		Date curDate = new SimpleDateFormat(\"MM/dd/yyyy\").parse(curDateStr);\n		Calendar cal = Calendar.getInstance();\n		cal.setTime(curDate);\n		int weekOfYr = cal.get(Calendar.WEEK_OF_YEAR);\n		double threshold = calcThreshold(weekOfYr);\n		double thresholdL = calcThreshold(weekOfYr-1);\n		double thresholdN = calcThreshold(weekOfYr+1); \n		DiagnosisStatisticsBean dbNow = diagnosesDAO.getCountForWeekOf(ICD_INFLUENZA, zip, cal.getTime());\n		cal.add(Calendar.HOUR, -12*7);\n		DiagnosisStatisticsBean dbLast = diagnosesDAO.getCountForWeekOf(ICD_INFLUENZA, zip, cal.getTime());\n		cal.add(Calendar.HOUR, 2*12*7);\n		DiagnosisStatisticsBean dbNext =  diagnosesDAO.getCountForWeekOf(ICD_INFLUENZA, zip, cal.getTime());\n		double weekNow = (double) dbNow.getRegionStats();\n		double weekL = (double) dbLast.getRegionStats();\n		double weekN = (double) dbNext.getRegionStats();\n		if ( weekNow > threshold && (weekL > thresholdL || weekN > thresholdN) ) {\n			return true;\n		} else {\n			return false;		\n		}\n	}\n'),(427,'	private double calcThreshold(double weekNumber) {\n		return 5.34 + 0.271 * weekNumber + 3.45 * Math.sin(2 * Math.PI * weekNumber / 52.0) + 8.41 * Math.cos(2 * Math.PI * weekNumber / 52.0);\n	}\n'),(428,'	public boolean isMalariaEpidemic(String weekDate, String zip, String thresholdStr) throws DBException, ParseException {\n		Date wkDate = new SimpleDateFormat(\"MM/dd/yyyy\").parse(weekDate);\n		ArrayList<DiagnosisStatisticsBean> dbList = new ArrayList<DiagnosisStatisticsBean>();\n		ArrayList<DiagnosisStatisticsBean> dbListL = new ArrayList<DiagnosisStatisticsBean>();\n		ArrayList<DiagnosisStatisticsBean> dbListN = new ArrayList<DiagnosisStatisticsBean>();\n		int threshold = Integer.parseInt(thresholdStr);\n		DiagnosisStatisticsBean current = diagnosesDAO.getCountForWeekOf(ICD_MALARIA, zip, wkDate);\n		long weekTotal = current.getRegionStats();\n		Calendar cal = Calendar.getInstance();\n		cal.setTime(wkDate);\n		cal.add(Calendar.HOUR, -7*24);\n		DiagnosisStatisticsBean last = diagnosesDAO.getCountForWeekOf(ICD_MALARIA, zip, cal.getTime());\n		long weekTotalL = last.getRegionStats();\n		cal.add(Calendar.HOUR, 2*7*24);\n		DiagnosisStatisticsBean next = diagnosesDAO.getCountForWeekOf(ICD_MALARIA, zip, cal.getTime());\n		long weekTotalN = next.getRegionStats();\n		cal.setTime(wkDate);\n		int weekOfYr = cal.get(Calendar.WEEK_OF_YEAR);\n		Date startData = diagnosesDAO.findEarliestIncident(ICD_MALARIA);\n		if (startData == null) {\n			if (current.getRegionStats() > 0) {\n				return true;\n			}\n			return false;\n		}\n		Calendar startDateCal = Calendar.getInstance();\n		startDateCal.setTime(startData);\n		Calendar wkDateCal = Calendar.getInstance();\n		wkDateCal.setTime(wkDate);\n		cal.set(Calendar.YEAR, startDateCal.get(Calendar.YEAR));\n		while( cal.getTime().before(wkDate) && cal.get(Calendar.YEAR) != wkDateCal.get(Calendar.YEAR)) {\n			dbList.add( diagnosesDAO.getCountForWeekOf(ICD_MALARIA, zip, cal.getTime()) );\n			cal.add(Calendar.HOUR, -7*24);\n			dbListL.add( diagnosesDAO.getCountForWeekOf(ICD_MALARIA, zip, cal.getTime()) );\n			cal.add(Calendar.HOUR, 2*7*24);\n			dbListN.add( diagnosesDAO.getCountForWeekOf(ICD_MALARIA, zip, cal.getTime()) );\n			cal.add(Calendar.YEAR, 1);\n			cal.set(Calendar.WEEK_OF_YEAR, weekOfYr);\n			cal.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);\n		}\n		long total = 0;\n		for (DiagnosisStatisticsBean d : dbList) {\n			total += d.getRegionStats();\n		}\n		for (DiagnosisStatisticsBean d : dbListL) {\n			d.getRegionStats();\n		}\n		for (DiagnosisStatisticsBean d : dbListN) {\n			d.getRegionStats();\n		}\n		long avg = 0;\n		long avgL = 0;\n		long avgN = 0;\n		if (dbList.size() != 0) {\n			avg = total / dbList.size();\n			avgL = total/ dbListL.size();\n			avgN = total/ dbListN.size();\n		} \n		if ( weekTotal != 0 && (weekTotal*100/threshold) > avg && \n				(	( weekTotalL != 0 && (weekTotalL*100/threshold) > avgL ) || \n					( weekTotalN != 0 && (weekTotalN*100/threshold) > avgN ) ) ) {\n			return true;\n		} else {\n			return false;\n		}\n	}\n'),(430,'	public long addPatient(PatientBean p) throws DBException, FormValidationException {\n		new AddPatientValidator().validate(p);\n		long newMID = patientDAO.addEmptyPatient();\n		p.setMID(newMID);\n		String pwd = authDAO.addUser(newMID, Role.PATIENT, RandomPassword.getRandomPassword());\n		p.setPassword(pwd);\n		patientDAO.editPatient(p, loggedInMID);\n		return newMID;\n	}\n'),(432,'	public void validate(PatientBean p) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"First name\", p.getFirstName(), ValidationFormat.NAME, false));\n		errorList.addIfNotNull(checkFormat(\"Last name\", p.getLastName(), ValidationFormat.NAME, false));\n		errorList.addIfNotNull(checkFormat(\"Email\", p.getEmail(), ValidationFormat.EMAIL, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(433,'	public long addEmptyPatient() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO Patients(MID) VALUES(NULL)\");\n			ps.executeUpdate();\n			return DBUtil.getLastInsert(conn);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(434,'	public void setMID(long mid) {\n		MID = mid;\n	}\n'),(435,'	public void setPassword(String password) {\n		this.password = password;\n	}\n'),(436,'	public void editPatient(PatientBean p, long hcpid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE Patients SET firstName=?,lastName=?,email=?,\"\n					+ \"address1=?,address2=?,city=?,state=?,zip1=?, zip2=?,phone1=?,phone2=?,phone3=?,\"\n					+ \"eName=?,ePhone1=?,ePhone2=?,ePhone3=?,iCName=?,iCAddress1=?,iCAddress2=?,iCCity=?,\"\n					+ \"ICState=?,iCZip1=?, iCZip2=?, iCPhone1=?,iCPhone2=?,iCPhone3=?,iCID=?,DateOfBirth=?,\"\n					+ \"DateOfDeath=?,CauseOfDeath=?,MotherMID=?,FatherMID=?,\"\n					+ \"BloodType=?,Ethnicity=?,Gender=?,TopicalNotes=?, CreditCardType=?, CreditCardNumber=?, \"\n					+ \"MessageFilter=?, DirectionsToHome=?, Religion=?, Language=?, SpiritualPractices=?, \"\n					+ \"AlternateName=? WHERE MID=?\");\n			patientLoader.loadParameters(ps, p);\n			ps.setLong(45, p.getMID());\n			ps.executeUpdate();\n			addHistory(p.getMID(), hcpid);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(439,'	public void validate(MessageBean mBean) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"body\", mBean.getBody(), ValidationFormat.MESSAGES_BODY, false));\n		errorList.addIfNotNull(checkFormat(\"subject\", mBean.getSubject(), ValidationFormat.MESSAGES_SUBJECT, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(440,'	public void validate(MessageBean m) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"body\", m.getBody(), ValidationFormat.EMAILS,\n				false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(441,'	public void addMessage(MessageBean mBean) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		conn = factory.getConnection();\n		if (mBean.getParentMessageId() == 0L) {\n			ps = conn.prepareStatement(\n					\"INSERT INTO message (from_id, to_id, sent_date, message, subject, been_read) \"\n				  + \"VALUES (?, ?, NOW(), ?, ?, ?)\");\n			this.mbLoader.loadParameters(ps, mBean);\n		} else {\n			ps = conn.prepareStatement(\n					\"INSERT INTO message (from_id, to_id, sent_date, message, subject, been_read, parent_msg_id) \"\n				  + \"  VALUES (?, ?, NOW(), ?, ?, ?, ?)\");\n			this.mbLoader.loadParameters(ps, mBean);\n		}\n		ps.executeUpdate();\n		DBUtil.closeConnection(conn, ps);\n	}\n'),(442,'	public long getTo() {\n		return to;\n	}\n'),(443,'	public String getPatientName(long mid) throws iTrustException {\n		return patientDAO.getName(mid);\n	}\n'),(444,'	public String getPersonnelName(long mid) throws iTrustException {\n		return personnelDAO.getName(mid);\n	}\n'),(445,'	public List<PatientBean> getMyRepresentees() throws iTrustException {\n		List<PatientBean> representees = new ArrayList<PatientBean>();\n		try {\n			representees = patientDAO.getRepresented(loggedInMID);\n		} catch (DBException e) {\n			e.printStackTrace();\n		}\n		return representees;\n	}\n'),(446,'	public List<PersonnelBean> getMyDLHCPs() throws iTrustException {\n		return getDLHCPsFor(loggedInMID);\n	}\n'),(447,'	public List<PersonnelBean> getDLHCPsFor(long pid) throws iTrustException {\n		List<PersonnelBean> dlhcps = new ArrayList<PersonnelBean>();\n		try {\n			dlhcps = patientDAO.getDeclaredHCPs(pid);\n		} catch (DBException e) {\n			e.printStackTrace();\n		}\n		return dlhcps;		\n	}\n'),(450,'	public void updateInformation(PatientBean p) throws iTrustException, FormValidationException {\n		p.setMID(pid); // for security reasons\n		validator.validate(p);\n		patientDAO.editPatient(p, loggedInMID);\n		emailutil.sendEmail(makeEmail());\n	}\n'),(452,'	private Email makeEmail() throws DBException{\n		Email email = new Email();\n		List<PatientBean> reps = patientDAO.getRepresenting(pid);\n		PatientBean pb = patientDAO.getPatient(pid);\n		List<String> toAddrs = new ArrayList<String>();\n		toAddrs.add(pb.getEmail());\n		for (PatientBean r: reps) {\n			toAddrs.add(r.getEmail());\n		}\n		email.setFrom(\"no-reply@itrust.com\");\n    	email.setToList(toAddrs); // patient and personal representative\n    	email.setSubject(String.format(\"Patient Information Updated\"));\n    	email.setBody(\"Dear \" + pb.getFullName() + \",\\n\\tYour patient record information has been updated. \" + \n    			\"Please login to iTrust to see who has viewed your records.\");\n		return email;\n	}\n'),(453,'	public PatientBean getPatient() throws DBException {\n		return patientDAO.getPatient(this.getPid());\n	}\n'),(455,'	public void editMessageFilter(String filter) throws iTrustException, FormValidationException {\n		PatientBean b = this.getPatient();\n		b.setMessageFilter(filter);\n		this.updateInformation(b);\n	}\n'),(456,'	public void setMessageFilter(String messageFilter) {\n		this.messageFilter = messageFilter;\n	}\n'),(457,'	public boolean hasHistory() throws DBException {\n		return patientDAO.hasHistory(this.getPid());\n	}\n'),(458,'	public boolean hasHistory(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		boolean hasHistory = false;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM historypatients WHERE mid=?\");\n			ps.setLong(1, pid);\n			ResultSet rs;\n			rs = ps.executeQuery();\n			hasHistory = rs.next();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n		return hasHistory;\n	}\n'),(459,'	public List<PatientHistoryBean> getHistory() throws DBException {\n		return patientDAO.getPatientHistory(this.getPid());\n	}\n'),(460,'	public List<PatientHistoryBean> getPatientHistory(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		ArrayList<PatientHistoryBean> pList;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM HistoryPatients WHERE MID = ?\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			pList = new ArrayList<PatientHistoryBean>();\n			while (rs.next()) {\n				pList.add(patientLoader.loadSingleHistory(rs));\n			}\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n		return pList;\n	}\n'),(461,'	public String getEmployeeName(long mid) throws DBException, iTrustException {\n		return personnelDAO.getName(mid);\n	}\n'),(464,'	public String addCPTCode(ProcedureBean proc) throws FormValidationException {\n		validator.validate(proc);\n		try {\n			if (cptDAO.addCPTCode(proc)) {\n				return \"Success: \" + proc.getCPTCode() + \" - \" + proc.getDescription() + \" added\";\n			} else\n				return \"The database has become corrupt. Please contact the system administrator for assistance.\";\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		} catch (iTrustException e) {\n			return e.getMessage();\n		}\n	}\n'),(465,'	public void validate(ProcedureBean p) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"CPT Code\", p.getCPTCode(), ValidationFormat.CPT, false));\n		errorList.addIfNotNull(checkFormat(\"Description\", p.getDescription(),\n				ValidationFormat.CPT_CODE_DESCRIPTION, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(466,'	public boolean addCPTCode(ProcedureBean proc) throws DBException, iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO CPTCodes (Code, Description, Attribute) \" + \"VALUES (?,?,?)\");\n			ps.setString(1, proc.getCPTCode());\n			ps.setString(2, proc.getDescription());\n			ps.setString(3, proc.getAttribute());\n			return (1 == ps.executeUpdate());\n		} catch (SQLException e) {\n			e.printStackTrace();\n			if (1062 == e.getErrorCode())\n				throw new iTrustException(\"Error: Code already exists.\");\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(467,'	public String getDescription() {\n		return description;\n	}\n'),(468,'	public String updateInformation(ProcedureBean proc) throws FormValidationException {\n		validator.validate(proc);\n		try {\n			int rows = updateCode(proc);\n			if (0 == rows) {\n				return \"Error: Code not found. To edit an actual code, \"\n						+ \"change the description and add a new code with the old description\";\n			} else {\n				return \"Success: \" + rows + \" row(s) updated\";\n			}\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		}\n	}\n'),(469,'	private int updateCode(ProcedureBean proc) throws DBException {\n		return cptDAO.updateCode(proc);\n	}\n'),(470,'	public int updateCode(ProcedureBean proc) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE CPTCodes SET Description = ?, Attribute = ? WHERE Code = ?\");\n			ps.setString(1, proc.getDescription());\n			ps.setString(2, proc.getAttribute());\n			ps.setString(3, proc.getCPTCode());\n			return ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(472,'	public List<PatientBean> getRenewalNeedsPatients() {\n		try {	\n			return patientDAO.getRenewalNeedsPatients(loggedInMID);\n		}\n		catch (DBException e) {\n			System.out.println(Messages.getString(\"ViewPrescriptionRenewalNeedsAction.1\")); //$NON-NLS-1$\n			System.out.println(e);\n			return null;\n		}\n	}\n'),(473,'	public List<PatientBean> getRenewalNeedsPatients(long hcpMID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n				ps = conn.prepareStatement(\"SELECT * FROM ( \" + \n				\"SELECT DISTINCT patients.* From patients, declaredhcp, ovdiagnosis, officevisits, ovmedication \" + \n				\"Where \" + \n				\"declaredHCP.HCPID = ? AND \" + \n				\"patients.MID = declaredhcp.PatientID AND \" + \n				\"( \" + \n				\"ovdiagnosis.VisitID = officevisits.ID AND officevisits.PatientID = declaredhcp.PatientID \" + \n				\"AND \" + \n				\"((ovdiagnosis.ICDCode >= ? AND ovdiagnosis.ICDCode < ?) \" + \n				\"OR (ovdiagnosis.ICDCode >= ? AND ovdiagnosis.ICDCode < ?) \" + \n				\"OR (ovdiagnosis.ICDCode >= ? AND ovdiagnosis.ICDCode < ?)) \" + \n				\") \" + \n				\"UNION ALL \" + \n				\"SELECT DISTINCT patients.* From patients, declaredhcp, ovdiagnosis, officevisits, ovmedication \" + \n				\"Where \" + \n				\"declaredHCP.HCPID = ? AND \" + \n				\"patients.MID = declaredhcp.PatientID AND \" + \n				\"( \" + \n				\"declaredhcp.PatientID = officevisits.PatientID AND officevisits.ID = ovmedication.VisitID \" + \n				\"AND \" + \n				\"ovmedication.EndDate BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) \" + \n				\") \" + \n				\") AS final \" + \n				\"GROUP BY final.MID HAVING COUNT(*) = 2 \" + \n				\"ORDER BY final.lastname ASC, final.firstname ASC\"); \n			ps.setLong(1, hcpMID);\n			ps.setFloat(2, 250.0f);\n			ps.setFloat(3, 251.0f);\n			ps.setFloat(4, 493.0f);\n			ps.setFloat(5, 494.0f);\n			ps.setFloat(6, 390.0f);\n			ps.setFloat(7, 460.99f);\n			ps.setLong(8, hcpMID);\n			ResultSet rs = ps.executeQuery();\n			return patientLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(475,'	public List<VerboseReferralBean> getReferrals(String field, SortDirection dir) throws DBException {\n		return referralDAO.getSenderQuery(hcpid).query(field, dir);\n	}\n'),(476,'	public ReferralListQuery getSenderQuery(long mid) {\n		return new SenderReferralListQuery(this.factory, mid);\n	}\n'),(478,'	public ReferralBean getReferral(long id) throws DBException {\n		return referralDAO.getReferral(id);\n	}\n'),(479,'	public String getPatientName(ReferralBean bean) throws iTrustException {\n		return patientDAO.getName(bean.getPatientID());\n	}\n'),(480,'	public String getReceivingHCPName(ReferralBean bean) throws iTrustException {\n		return personnelDAO.getName(bean.getReceiverID());\n	}\n'),(482,'	public long add(PersonnelBean p) throws FormValidationException, iTrustException {\n		new AddPersonnelValidator().validate(p);\n		long newMID = personnelDAO.addEmptyPersonnel(Role.HCP);\n		p.setMID(newMID);\n		personnelDAO.editPersonnel(p);\n		String pwd = authDAO.addUser(newMID, Role.HCP, RandomPassword.getRandomPassword());\n		p.setPassword(pwd);\n		return newMID;\n	}\n'),(484,'	public List<LabProcedureBean> getLabProcedures() throws DBException {\n		return labProcedureDAO.getLabProceduresForPatient(patient);\n	}\n'),(485,'	public List<LabProcedureBean> getLabProceduresForPatient(long id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (id == 0L) throw new SQLException(\"PatientMID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure WHERE PatientMID = ? AND Rights = ? ORDER BY UpdatedDate DESC\");\n			ps.setLong(1, id);\n			ps.setString(2, LabProcedureBean.Allow);\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(486,'	public int getUnviewedCount() throws DBException {\n		return labProcedureDAO.getPatientUnviewedCount(patient);\n	}\n'),(487,'	public int getPatientUnviewedCount(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (pid == 0L) throw new SQLException(\"PatientMID cannot be null\");\n			int count = 0;\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT COUNT(*) FROM LabProcedure WHERE PatientMID = ? AND Rights = ? AND Status = ? AND ViewedByPatient = FALSE \");\n			ps.setLong(1, pid);\n			ps.setString(2, LabProcedureBean.Allow);\n			ps.setString(3, LabProcedureBean.Completed);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next()) {\n				count = rs.getInt(1);\n			}\n			return count;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(489,'	public void logEvent(TransactionType type, long loggedInMID, long secondaryMID, String addedInfo)\n			throws DBException {\n		this.transDAO.logTransaction(type, loggedInMID, secondaryMID, addedInfo);\n	}\n'),(490,'	public void logTransaction(TransactionType type, long loggedInMID, long secondaryMID, String addedInfo)\n			throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO TransactionLog(loggedInMID, secondaryMID, \"\n					+ \"transactionCode, addedInfo) VALUES(?,?,?,?)\");\n			ps.setLong(1, loggedInMID);\n			ps.setLong(2, secondaryMID);\n			ps.setInt(3, type.getCode());\n			ps.setString(4, addedInfo);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(492,'	public List<ReferralBean> getReferralsForReceivingHCP() throws DBException{\n		return referralDAO.getReferralsForReceivingHCP(hcpID);\n	}\n'),(493,'	public List<ReferralBean> getReferralsForReceivingHCP(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM referrals WHERE ReceiverID = ? ORDER BY PriorityCode ASC\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			return referralLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(494,'	public int getReferralsForReceivingHCPUnread() throws DBException{\n		return referralDAO.getReferralsForReceivingHCPUnread(hcpID).size();\n	}\n'),(495,'	public List<ReferralBean> getReferralsForReceivingHCPUnread(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM referrals WHERE ReceiverID = ? AND viewed_by_HCP = false\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			return referralLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(496,'	public ReferralBean getReferralByID(int id) throws DBException{\n		return referralDAO.getReferral(id);\n	}\n'),(497,'	public boolean updateReferral(ReferralBean bean) throws DBException {\n		referralDAO.editReferral(bean);\n		return true;\n	}\n'),(498,'	public OfficeVisitBean getOVDate(long id) throws DBException {\n		return ovDAO.getOfficeVisit(id);\n	}\n'),(500,'	public String addHospital(HospitalBean hosp) throws FormValidationException {\n		new HospitalBeanValidator().validate(hosp);\n		try {\n			if (hospDAO.addHospital(hosp)) {\n				return \"Success: \" + hosp.getHospitalID() + \" - \" + hosp.getHospitalName() + \" added\";\n			} else\n				return \"The database has become corrupt. Please contact the system administrator for assistance.\";\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		} catch (iTrustException e) {\n			return e.getMessage();\n		}\n	}\n'),(502,'	public void validate(HospitalBean h) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"Hospital ID\", h.getHospitalID(), ValidationFormat.HOSPITAL_ID,\n				false));\n		errorList.addIfNotNull(checkFormat(\"Hospital Name\", h.getHospitalName(),\n				ValidationFormat.HOSPITAL_NAME, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(503,'	public boolean addHospital(HospitalBean hosp) throws DBException, iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO Hospitals (HospitalID, HospitalName) \" + \"VALUES (?,?)\");\n			ps.setString(1, hosp.getHospitalID());\n			ps.setString(2, hosp.getHospitalName());\n			return (1 == ps.executeUpdate());\n		} catch (SQLException e) {\n			e.printStackTrace();\n			if (1062 == e.getErrorCode())\n				throw new iTrustException(\"Error: Hospital already exists.\");\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(504,'	public String getHospitalID() {\n		return hospitalID;\n	}\n'),(505,'	public String getHospitalName() {\n		return hospitalName;\n	}\n'),(506,'	public String updateInformation(HospitalBean hosp) throws FormValidationException {\n		new HospitalBeanValidator().validate(hosp);\n		try {\n			int rows = 0;\n			return ((0 == (rows = updateHospital(hosp))) ? \"Error: Hospital not found.\" : \"Success: \" + rows\n					+ \" row(s) updated\");\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		}\n	}\n'),(507,'	private int updateHospital(HospitalBean hosp) throws DBException {\n		return hospDAO.updateHospital(hosp);\n	}\n'),(508,'	public int updateHospital(HospitalBean hosp) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE Hospitals SET HospitalName = ? \" + \"WHERE HospitalID = ?\");\n			ps.setString(1, hosp.getHospitalName());\n			ps.setString(2, hosp.getHospitalID());\n			return ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(510,'	public long add(PersonnelBean p) throws FormValidationException, iTrustException {\n		new AddPersonnelValidator().validate(p);\n		long newMID = personnelDAO.addEmptyPersonnel(Role.LT);\n		p.setMID(newMID);\n		personnelDAO.editPersonnel(p);\n		String pwd = authDAO.addUser(newMID, Role.LT, RandomPassword.getRandomPassword());\n		p.setPassword(pwd);\n		return newMID;\n	}\n'),(513,'	public List<LabProcedureBean> getLabProceduresInTransitForLabTech(long id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (id == 0L) throw new SQLException(\"LabTechID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure WHERE LabTechID = ? AND Status = ? ORDER BY UpdatedDate ASC\");\n			ps.setLong(1, id);\n			ps.setString(2, LabProcedureBean.In_Transit);\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(515,'	public List<LabProcedureBean> getLabProceduresReceivedForLabTech(long id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (id == 0L) throw new SQLException(\"LabTechID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure WHERE LabTechID = ? AND Status = ? ORDER BY PriorityCode ASC, UpdatedDate DESC\");\n			ps.setLong(1, id);\n			ps.setString(2, LabProcedureBean.Received);\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(517,'	public List<LabProcedureBean> getLabProceduresTestingForLabTech(long id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (id == 0L) throw new SQLException(\"LabTechID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure WHERE LabTechID = ? AND Status = ? ORDER BY UpdatedDate DESC\");\n			ps.setLong(1, id);\n			ps.setString(2, LabProcedureBean.Testing);\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(521,'	public void setNumericalResult(String numericalResult) {\n		this.numericalResult = numericalResult;\n	}\n'),(522,'	public void setNumericalResultUnit(String numericalResultUnit) {\n		this.numericalResultUnit = numericalResultUnit;\n	}\n'),(523,'	public void setUpperBound(String upperBound) {\n		this.upperBound = upperBound;\n	}\n'),(524,'	public void setLowerBound(String lowerBound) {\n		this.lowerBound = lowerBound;\n	}\n'),(525,'	public void submitTestResults(long id, String numericalResult, String numericalResultUnit, String upper, String lower) throws DBException {	\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE LabProcedure SET NumericalResults = ?, NumericalResultsUnit = ?, UpperBound = ?, LowerBound = ?, Status = ?, UpdatedDate = ? WHERE LaboratoryProcedureID=?\");\n			ps.setString(1, numericalResult);\n			ps.setString(2, numericalResultUnit);\n			ps.setString(3, upper);\n			ps.setString(4, lower);\n			ps.setString(5, \"Pending\");\n			ps.setTimestamp(6, new java.sql.Timestamp(System.currentTimeMillis()));\n			ps.setLong(7, id);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(527,'	public void submitReceivedLP(long id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE LabProcedure SET Status = ?, UpdatedDate = ? WHERE LaboratoryProcedureID=?\");\n			ps.setString(1, \"Received\");\n			ps.setTimestamp(2, new java.sql.Timestamp(System.currentTimeMillis()));\n			ps.setLong(3, id);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(529,'	public void setLPToTesting(long id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE LabProcedure SET Status = ?, UpdatedDate = ? WHERE LaboratoryProcedureID=?\");\n			ps.setString(1, \"Testing\");\n			ps.setTimestamp(2, new java.sql.Timestamp(System.currentTimeMillis()));\n			ps.setLong(3, id);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(531,'	public boolean addToList(long patientMID, TelemedicineBean tBean) throws DBException {\n		return rmDAO.addPatientToList(patientMID, loggedInMID, tBean);\n	}\n'),(532,'	public boolean addPatientToList(long patientMID,\n									long HCPMID,\n									TelemedicineBean tBean) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM RemoteMonitoringLists WHERE PatientMID = ? AND HCPMID = ?\");\n			ps.setLong(1, patientMID);\n			ps.setLong(2, HCPMID);\n			ResultSet rs = ps.executeQuery();\n			if(rs.next())\n				return false;\n			String permissionPS = \"SystolicBloodPressure, DiastolicBloodPressure, GlucoseLevel, Height, Weight, PedometerReading\";\n			ps = conn.prepareStatement(\"INSERT INTO RemoteMonitoringLists(PatientMID, HCPMID, \" + permissionPS + \") VALUES(?,?,?,?,?,?,?,?)\");\n			ps.setLong(1, patientMID);\n			ps.setLong(2, HCPMID);\n			ps.setBoolean(3, tBean.isSystolicBloodPressureAllowed());\n			ps.setBoolean(4, tBean.isDiastolicBloodPressureAllowed());\n			ps.setBoolean(5, tBean.isGlucoseLevelAllowed());\n			ps.setBoolean(6, tBean.isHeightAllowed());\n			ps.setBoolean(7, tBean.isWeightAllowed());\n			ps.setBoolean(8, tBean.isPedometerReadingAllowed());\n			ps.executeUpdate();\n			return true;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(533,'	public boolean removeFromList(long patientMID) throws DBException {\n		return rmDAO.removePatientFromList(patientMID, loggedInMID);\n	}\n'),(534,'	public boolean removePatientFromList(long patientMID, long HCPMID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"DELETE FROM RemoteMonitoringLists WHERE PatientMID = ? AND HCPMID = ?\");\n			ps.setLong(1, patientMID);\n			ps.setLong(2, HCPMID);\n			if(ps.executeUpdate() == 0)\n				return false;\n			return true;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(535,'	public boolean isPatientInList(long patientMID) throws DBException {\n		List<RemoteMonitoringDataBean> dataset = rmDAO.getPatientsData(loggedInMID);\n		for(RemoteMonitoringDataBean d: dataset) {\n			if(d.getPatientMID() == patientMID)\n				return true;\n		}\n		return false;\n	}\n'),(536,'	public long getPatientMID() {\n		return patientMID;\n	}\n'),(537,'	public String getPatientName(long pid) throws DBException, iTrustException {\n		return authDAO.getUserName(pid);\n	}\n'),(539,'	public SurveyDAO getSurveyDAO() {\n		return new SurveyDAO(this);\n	}\n'),(540,'	public void addSurvey(SurveyBean surveyBean, long visitID) throws DBException {\n		surveyBean.setVisitID(visitID); //now set visit ID in the survey bean\n		surveyDAO.addCompletedSurvey(surveyBean, Calendar.getInstance().getTime());\n	}\n'),(541,'	public void setVisitID(long iD) {\n		visitID = iD;\n	}\n'),(542,'	public void addCompletedSurvey(SurveyBean surveyBean, Date date) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO OVSurvey (VisitID, SurveyDate) VALUES (?,?)\");\n			ps.setLong(1, surveyBean.getVisitID());\n			ps.setTimestamp(2, new java.sql.Timestamp(date.getTime()));\n			ps.executeUpdate();\n			if (surveyBean.getWaitingRoomMinutes() > 0) {\n				ps = conn.prepareStatement(\"update OVSurvey set WaitingRoomMinutes = ? where VisitID = ?\");\n				ps.setFloat(1, surveyBean.getWaitingRoomMinutes());\n				ps.setLong(2, surveyBean.getVisitID());\n				ps.executeUpdate();\n			}\n			if (surveyBean.getExamRoomMinutes() > 0) {\n				ps = conn.prepareStatement(\"update OVSurvey set ExamRoomMinutes = ? where VisitID = ?\");\n				ps.setFloat(1, surveyBean.getExamRoomMinutes());\n				ps.setLong(2, surveyBean.getVisitID());\n				ps.executeUpdate();\n			}\n			if (surveyBean.getVisitSatisfaction() > 0) {\n				ps = conn.prepareStatement(\"update OVSurvey set VisitSatisfaction = ? where VisitID = ?\");\n				ps.setFloat(1, surveyBean.getVisitSatisfaction());\n				ps.setLong(2, surveyBean.getVisitID());\n				ps.executeUpdate();\n			}\n			if (surveyBean.getTreatmentSatisfaction() > 0) {\n				ps = conn.prepareStatement(\"update OVSurvey set TreatmentSatisfaction = ? where VisitID = ?\");\n				ps.setFloat(1, surveyBean.getTreatmentSatisfaction());\n				ps.setLong(2, surveyBean.getVisitID());\n				ps.executeUpdate();\n			}\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(543,'	public long getPatientMID(long ovID) throws NumberFormatException, DBException\n	{\n		return ovDAO.getOfficeVisit(ovID).getPatientID();\n	}\n'),(544,'	public long getPatientID() {\n		return this.patientID;\n	}\n'),(547,'	public void setNDCode(String code) {\n		NDCode = code;\n	}\n'),(548,'	public void setDescription(String description) {\n		this.description = description;\n	}\n'),(550,'	public void LoadFile(InputStream fileContent) throws IOException, DBException {\n		strategy.LoadFile(fileContent, factory, loggingAction, loggedInMID);\n	}\n'),(554,'	public LOINCDAO getLOINCDAO() {\n		return new LOINCDAO(this);\n	}\n'),(555,'	public String add(LOINCbean diagn) throws FormValidationException, iTrustException {\n		validator.validate(diagn);\n		List<LOINCbean> lblist = lDAO.getAllLOINC();\n		boolean correctID = false;\n		for (int i = 0; i < lblist.size(); i++) {\n			if (lblist.get(i).getLabProcedureCode().equals(diagn.getLabProcedureCode())) {\n				correctID = true;\n				i = lblist.size();\n			}\n		}\n		if (correctID) {\n			throw new FormValidationException(\"Error: Code already exists.\");\n		}\n		lDAO.addLOINC(diagn);\n		return \"Success: \" + diagn.getLabProcedureCode() + \" added\";\n	}\n'),(556,'	public void validate(LOINCbean m) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		if(m.getLabProcedureCode()==null || m.getComponent()==null || m.getKindOfProperty()==null){\n			throw new FormValidationException(\"You must have a Lab Procedure Code, Component and Kind Of Property\");\n		}\n		errorList.addIfNotNull(checkFormat(\"LaboratoryProcedureCode\", m.getLabProcedureCode(), ValidationFormat.LOINC, false));\n		errorList.addIfNotNull(checkFormat(\"Component\", m.getComponent(), ValidationFormat.LOINC_ITEM, false));\n		errorList.addIfNotNull(checkFormat(\"KindOfProperty\", m.getKindOfProperty(), ValidationFormat.LOINC_ITEM, false));\n		errorList.addIfNotNull(checkFormat(\"TimeAspect\", m.getTimeAspect(), ValidationFormat.LOINC_ITEM, true));\n		errorList.addIfNotNull(checkFormat(\"System\", m.getSystem(), ValidationFormat.LOINC_ITEM, true));\n		errorList.addIfNotNull(checkFormat(\"ScaleType\",m.getScaleType(), ValidationFormat.LOINC_ITEM, true));\n		errorList.addIfNotNull(checkFormat(\"MethodType\", m.getMethodType(), ValidationFormat.LOINC_ITEM, true));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(557,'	public List<LOINCbean> getAllLOINC() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n			try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LOINC\");\n			ResultSet rs = ps.executeQuery();\n			return LOINCLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(558,'	public String getLabProcedureCode(){\n		return labProcedureCode;\n	}\n'),(559,'	public void addLOINC(LOINCbean hosp) throws DBException, iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO LOINC (LaboratoryProcedureCode, Component, KindOfProperty, TimeAspect, System, ScaleType, MethodType) \" + \"VALUES (?,?,?,?,?,?,?)\");\n			ps.setString(1, hosp.getLabProcedureCode());\n			ps.setString(2, hosp.getComponent());\n			ps.setString(3, hosp.getKindOfProperty());\n			ps.setString(4, hosp.getTimeAspect());\n			ps.setString(5, hosp.getSystem());\n			ps.setString(6, hosp.getScaleType());\n			ps.setString(7, hosp.getMethodType());\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			if (1062 == e.getErrorCode())\n				throw new iTrustException(\"Error: LOINC already exists.\");\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}	\n'),(560,'	public String updateInformation(LOINCbean diagn) throws FormValidationException {\n		validator.validate(diagn);\n		try {\n			int rows = lDAO.update(diagn);\n			if (0 == rows) {\n				return \"Error: Code not found.\";\n			} else {\n				return \"Success: \" + diagn.getLabProcedureCode() + \" updated\";\n			}\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		}\n	}\n'),(561,'	public int update(LOINCbean ov) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE LOINC SET Component=?, KindOfProperty=?, TimeAspect=?, System=?, ScaleType=?, MethodType=? WHERE LaboratoryProcedureCode=?\");\n			ps.setString(1, ov.getComponent());\n			ps.setString(2, ov.getKindOfProperty());\n			ps.setString(3, ov.getTimeAspect());\n			ps.setString(4, ov.getSystem());\n			ps.setString(5, ov.getScaleType());\n			ps.setString(6, ov.getMethodType());\n			ps.setString(7, ov.getLabProcedureCode());\n			return ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(563,'	private void processOfficeVisits() throws iTrustException {\n		try {\n			List<OfficeVisitBean> ovlist = officevisitDAO.getAllOfficeVisitsForLHCP(loggedInMID);\n			Iterator<OfficeVisitBean> it = ovlist.iterator();\n			OfficeVisitBean ov;\n			PatientVisitBean visitBean;\n			while (it.hasNext()) {\n				visitBean = new PatientVisitBean();\n				ov = it.next();\n				PatientBean pb;\n				pb = patientDAO.getPatient(ov.getPatientID());\n				visitBean.setPatient(pb);\n				visitBean.setPatientName(pb.getFullName());\n				String date = ov.getVisitDateStr();\n				Scanner sc = new Scanner(date);\n				sc.useDelimiter(\"/\");\n				String month = sc.next();\n				String day = sc.next();\n				String year = sc.next();\n				visitBean.setLastOVDateM(month);\n				visitBean.setLastOVDateD(day);\n				visitBean.setLastOVDateY(year);\n				visitBean.setLastOVDate(year +\"-\" + month +\"-\" + date);\n				visitBean.setAddress1(pb.getStreetAddress1() +\" \" + pb.getStreetAddress2());\n				visitBean.setAddress2(pb.getCity() + \" \" +pb.getState() +\" \" +pb.getZip());\n				boolean b = PatientInList(pb,date);\n				if(b == false)\n					visits.add(visitBean);\n			}\n		}\n		catch (DBException dbe) {\n			throw new iTrustException(dbe.getMessage());\n		}\n	}\n'),(565,'	public void setPatient(PatientBean patient) {\n		this.patient = patient;\n	}\n'),(566,'	public void setPatientName(String patientName) {\n		PatientName = patientName;\n	}\n'),(567,'	public void setLastOVDateM(String lastOVDateM) {\n		LastOVDateM = lastOVDateM;\n	}\n'),(568,'	public void setLastOVDateD(String lastOVDateD) {\n		LastOVDateD = lastOVDateD;\n	}\n'),(569,'	public void setLastOVDateY(String lastOVDateY) {\n		LastOVDateY = lastOVDateY;\n	}\n'),(570,'	public void setLastOVDate(String lastOVDate) {\n		LastOVDate = lastOVDate;\n	}\n'),(571,'	public String getStreetAddress1() {\n		return streetAddress1;\n	}\n'),(572,'	public String getStreetAddress2() {\n		return streetAddress2;\n	}\n'),(573,'	public void setAddress1(String address1) {\n		Address1 = address1;\n	}\n'),(574,'	public String getCity() {\n		return city;\n	}\n'),(575,'	public String getState() {\n		return state;\n	}\n'),(576,'	public String getZip() {\n		if (getZip2() != null && !\"\".equals(getZip2()))\n			return getZip1() + \"-\" + getZip2();\n		else\n			return getZip1();\n	}\n'),(577,'	public void setAddress2(String address2) {\n		Address2 = address2;\n	}\n'),(578,'	private boolean PatientInList(PatientBean pb, String date) {\n		Iterator<PatientVisitBean> it = visits.iterator();\n		PatientVisitBean visitBean;\n		while (it.hasNext()){\n			visitBean = it.next();\n		if(visitBean.getPatientName().equals(pb.getFullName())){\n				if(visitBean.getLastOVDateY().compareTo(date) < 0){\n					visitBean.setLastOVDate(date);\n				}\n					return true;\n				}\n		}		\n		return false;\n	}\n'),(579,'	public String getPatientName() {\n		return PatientName;\n	}\n'),(580,'	public String getLastOVDateY() {\n		return LastOVDateY;\n	}\n'),(581,'	public List<PatientVisitBean> getPatients() throws DBException {\n		try {\n			processOfficeVisits();\n		}\n		catch (iTrustException ie) {\n		}\n		return visits;\n	}\n'),(582,'	public PersonnelBean getPersonnel() throws iTrustException {\n		return personnelDAO.getPersonnel(loggedInMID);\n	}\n'),(585,'	public List<ReferralBean> getReferrals() throws DBException {\n		if (isUnsaved()) {\n			return new ArrayList<ReferralBean>();\n		} else {\n			return referralDAO.getReferralsFromOV(getOvID());\n		}\n	}\n'),(588,'	public List<ReferralBean> getReferralsFromOV(long ovid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM referrals WHERE ovID = ?\");\n			ps.setLong(1, ovid);\n			ResultSet rs = ps.executeQuery();\n			return referralLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(589,'	public ReferralBean getReferral(long id) throws DBException {\n		return referralDAO.getReferral(id);\n	}\n'),(590,'	public String getPatientName(ReferralBean bean) throws iTrustException {\n		return patientDAO.getName(bean.getPatientID());\n	}\n'),(591,'	public String getReceivingHCPName(ReferralBean bean) throws iTrustException {\n		return personnelDAO.getName(bean.getReceiverID());\n	}\n'),(594,'	public String getUserName() throws DBException, iTrustException {\n		return authDAO.getUserName(pid);\n	}\n'),(595,'	public List<RiskChecker> getDiseasesAtRisk() throws iTrustException, DBException {\n		return diseaseMediator.getDiseaseAtRisk();\n	}\n'),(596,'	public List<RiskChecker> getDiseaseAtRisk() {\n		List<RiskChecker> diseases = new ArrayList<RiskChecker>();\n		for (RiskChecker diseaseChecker : riskCheckers) {\n			if (diseaseChecker.isAtRisk())\n				diseases.add(diseaseChecker);\n		}\n		return diseases;\n	}\n'),(598,'	public PrescriptionsDAO getPrescriptionsDAO() {\n		return new PrescriptionsDAO(this);\n	}\n'),(599,'	public DrugInteractionDAO getDrugInteractionDAO() {\n		return new DrugInteractionDAO(this);\n	}\n'),(600,'	public PrescriptionReportDAO getPrescriptionReportDAO() {\n		return new PrescriptionReportDAO(this);\n	}\n'),(602,'	private void check(PrescriptionBean pres) throws iTrustException {\n		List<String> warnings = checkInteraction(pres);\n		warnings.addAll(checkAllergy(pres));\n		if (!warnings.isEmpty()) {\n			throw new PrescriptionWarningException(warnings);\n		}\n		if (\"\".equals(pres.getInstructions())) {\n			throw new PrescriptionFieldException(\"Instructions are required.\");\n		}\n	}\n'),(603,'	private List<String> checkInteraction(PrescriptionBean newPrescription) throws iTrustException {\n		ArrayList<String> warnings = new ArrayList<String>();\n		try {\n			SimpleDateFormat needed = new SimpleDateFormat(\"yyyy/MM/dd\");\n			String startdate = needed.format(newPrescription.getStartDate());\n			String enddate = needed.format(newPrescription.getEndDate());\n			String drug = newPrescription.getMedication().getNDCode();\n			startdate = startdate.replaceAll(\"/\", \"-\");\n			enddate = enddate.replaceAll(\"/\", \"-\");\n			List<PrescriptionReportBean> prBeanList = rptDAO.byDate(getPid(), startdate, enddate);\n			List<DrugInteractionBean> dBeanList = interactionsDAO.getInteractions(drug);\n			for (PrescriptionReportBean prBean : prBeanList) {\n				String oldDrug = prBean.getPrescription().getMedication().getNDCode();\n				PrescriptionBean oldPrescription = prBean.getPrescription();\n				for (DrugInteractionBean dBean : dBeanList) {\n					String intDrug1 = dBean.getFirstDrug();\n					String intDrug2 = dBean.getSecondDrug();\n					if (oldDrug.equals(intDrug1) && drug.equals(intDrug2)) {\n						if (!validOverride(newPrescription)) {\n							warnings.add(interactionWarning(newPrescription, oldPrescription, dBean));\n						} \n					} else if (oldDrug.equals(intDrug2) && drug.equals(intDrug1)) {\n						if (!validOverride(newPrescription)) {\n							warnings.add(interactionWarning(newPrescription, oldPrescription, dBean));\n						} \n					}\n				}\n			}\n		} catch (DBException e) {\n			e.printStackTrace();\n			throw new iTrustException(e.getMessage());\n		}\n		return warnings;\n	}\n'),(604,'	private List<String> checkAllergy(PrescriptionBean pres) throws iTrustException, PrescriptionWarningException {\n		ArrayList<String> warnings = new ArrayList<String>();\n		try {\n			List<AllergyBean> allergyList = allergyDAO.getAllergies(getPid());\n			MedicationBean medBean = pres.getMedication();\n			if (medBean != null) {\n				String newDrug = medBean.getNDCode();\n				for (AllergyBean allergyBean : allergyList) {\n					if (newDrug.equals(allergyBean.getDescription())) {\n						if (!validOverride(pres)) {\n							warnings.add(allergyWarning(allergyBean));\n						} \n					}\n				}\n			}\n		} catch (DBException e){\n			e.printStackTrace();\n			throw new iTrustException(e.getMessage());\n		}\n		return warnings;\n	}\n'),(606,'	public String getInstructions() {\n		return instructions;\n	}\n'),(608,'	private boolean validOverride(PrescriptionBean pres) {\n		return pres.getReason() != null && !\"\".equals(pres.getReason());\n	}\n'),(609,'	public String getReason() {\n		return orc;\n	}\n'),(610,'	private String interactionWarning(PrescriptionBean newPrescription, \n									  PrescriptionBean oldPrescription, \n									  DrugInteractionBean bean) \n	{\n		String startDate = new SimpleDateFormat(\"MM/dd/yyyy\").format(oldPrescription.getStartDate());\n		String endDate = new SimpleDateFormat(\"MM/dd/yyyy\").format(oldPrescription.getEndDate());\n		return String.format(\"Currently Prescribed: %s. Start Date: %s, End Date: %s. Interactions: %s - %s. Description: %s\", \n							 oldPrescription.getMedication().getDescription(),\n							 startDate, endDate,\n							 oldPrescription.getMedication().getDescription(),\n							 newPrescription.getMedication().getDescription(),\n							 bean.getDescription()\n							 );\n	}\n'),(611,'	public Date getStartDate() {\n		try {\n			return new SimpleDateFormat(\"MM/dd/yyyy\").parse(startDateStr);\n		} catch (ParseException e) {\n			return null;\n		}\n	}\n'),(612,'	public Date getEndDate() {\n		try {\n			return new SimpleDateFormat(\"MM/dd/yyyy\").parse(endDateStr);\n		} catch (java.text.ParseException e) {\n			return null;\n		}\n	}\n'),(613,'	public String getDescription() {\n		return description;\n	}\n'),(614,'	private String allergyWarning(AllergyBean bean) {\n		try {\n			return \"Allergy: \" + medDAO.getNDCode(bean.getDescription()).getDescription() + \". First Found: \" + \n				new SimpleDateFormat(\"MM/dd/yyyy\").format(bean.getFirstFound());\n		} catch (DBException e) {\n			e.printStackTrace();\n			return \"Warning: database error \";\n		}\n	}\n'),(615,'	public String getDescription() {\n		return description;\n	}\n'),(616,'	public Date getFirstFound() {\n		return (Date) firstFound.clone();\n	}\n'),(618,'	public List<PrescriptionReportBean> byDate(long patientID, String startDate, String endDate)\n			throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM NDCodes, OVMedication, OfficeVisits \"\n					+ \"WHERE NDCodes.Code=OVMedication.NDCode AND OVMedication.VisitID=OfficeVisits.ID \"\n					+ \"AND PatientID=? AND ((DATE(?) < OVMedication.EndDate AND DATE(?) > OVMedication.StartDate)\"\n					+ \"OR (DATE(?) > OVMedication.StartDate  AND DATE(?) < OVMedication.EndDate ) OR \"\n					+ \"(DATE(?) <= OVMedication.StartDate AND DATE(?) >= OVMedication.StartDate)) \"\n					+ \"ORDER BY VisitDate DESC\");\n			ps.setLong(1, patientID);\n			ps.setString(2, startDate);\n			ps.setString(3, startDate);\n			ps.setString(4, endDate);\n			ps.setString(5, endDate);\n			ps.setString(6, startDate);\n			ps.setString(7, endDate);\n			ResultSet rs = ps.executeQuery();\n			return loader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(619,'	public List<DrugInteractionBean> getInteractions(String drugCode) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM druginteractions WHERE FirstDrug = ? OR SecondDrug = ?\");\n			ps.setString(1, drugCode);\n			ps.setString(2, drugCode);\n			ResultSet rs = ps.executeQuery();\n			return interactionLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(620,'	public PrescriptionBean getPrescription() {\n		return prescription;\n	}\n'),(621,'	public String getFirstDrug() {\n		return firstDrug;\n	}\n'),(622,'	public String getSecondDrug() {\n		return secondDrug;\n	}\n'),(623,'	public void editPrescription(PrescriptionBean pres) throws iTrustException {\n		verifySaved();\n		check(pres);\n		psDAO.edit(pres);\n	}\n'),(625,'	public long edit(PrescriptionBean pres) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			String statement = \"UPDATE OVMedication \" +\n				\"SET VisitID=?, NDCode=?, StartDate=?, EndDate=?, Dosage=?, Instructions=? \" +\n				\"WHERE ID=?\";\n			ps = conn.prepareStatement(statement);\n			loader.loadParameters(ps, pres);\n			ps.setLong(7, pres.getId());\n			ps.executeUpdate();\n			return DBUtil.getLastInsert(conn);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(626,'	public List<PrescriptionBean> getPrescriptions() throws DBException {\n		if (isUnsaved()) {\n			return new ArrayList<PrescriptionBean>();\n		} else {\n			return psDAO.getList(getOvID());\n		}\n	}\n'),(629,'	public List<PrescriptionBean> getList(long visitID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"Select * From OVMedication,NDCodes Where OVMedication.VisitID = ? \"\n					+ \"AND NDCodes.Code=OVMedication.NDCode\");\n			ps.setLong(1, visitID);\n			ResultSet rs = ps.executeQuery();\n			return loader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(630,'	public void addPrescription(PrescriptionBean pres) throws iTrustException {\n		verifySaved();\n		check(pres);\n		psDAO.add(pres);\n	}\n'),(631,'	public long add(PrescriptionBean pres) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"INSERT INTO OVMedication (VisitID,NDCode,StartDate,EndDate,Dosage,Instructions) VALUES (?,?,?,?,?,?)\");\n			loader.loadParameters(ps, pres);\n			ps.executeUpdate();\n			return DBUtil.getLastInsert(conn);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(632,'	public void deletePrescription(PrescriptionBean pres) throws DBException, iTrustException {\n		verifySaved();\n		psDAO.remove(pres.getId());\n	}\n'),(633,'	public long getId() {\n		return id;\n	}\n'),(634,'	public void remove(long ovMedicationID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"DELETE FROM OVMedication WHERE ID=? \");\n			ps.setLong(1, ovMedicationID);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(635,'	public List<MedicationBean> getMedications() throws DBException, iTrustException {\n		return medDAO.getAllNDCodes();\n	}\n'),(636,'	public List<MedicationBean> getAllNDCodes() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM NDCodes ORDER BY CODE\");\n			ResultSet rs = ps.executeQuery();\n			return medicationLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(637,'	public PrescriptionBean formToBean(EditPrescriptionsForm form, String defaultInstructions) throws FormValidationException, DBException {\n		EditPrescriptionsValidator validator = new EditPrescriptionsValidator(defaultInstructions);\n		validator.validate(form);\n		PrescriptionBean bean = new PrescriptionBean();\n		bean.setVisitID(getOvID());\n		MedicationBean med = medDAO.getNDCode(form.getMedID());\n		bean.setMedication(med);\n		bean.setDosage(Integer.valueOf(form.getDosage()));\n		bean.setStartDateStr(form.getStartDate());\n		bean.setEndDateStr(form.getEndDate());\n		bean.setInstructions(form.getInstructions());\n		bean.setReason(form.getOverrideCode());\n		bean.setOverrideComment(form.getOverrideComment());\n		return bean;\n	}\n'),(639,'	public void validate(EditPrescriptionsForm form) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"Start Date\", form.getStartDate(), ValidationFormat.DATE,\n										   false));\n		errorList.addIfNotNull(checkFormat(\"End Date\", form.getEndDate(), ValidationFormat.DATE, false));\n		errorList.addIfNotNull(checkFormat(\"Instructions\", form.getInstructions(),\n										   ValidationFormat.NOTES, false));\n		errorList.addIfNotNull(form.getInstructions().equals(defaultInstructions) ? \n							    \"Instructions: \" + ValidationFormat.NOTES.getDescription() : \"\");\n		errorList.addIfNotNull(checkInt(\"Dosage\", form.getDosage(), 0, 9999, false));\n		if ((checkFormat(\"Start Date\", form.getStartDate(), ValidationFormat.DATE, false)) == \"\"\n				&& (checkFormat(\"End Date\", form.getEndDate(), ValidationFormat.DATE, false)) == \"\") {\n			Date sd = null;\n			Date ed = null;\n			try {\n				sd = new SimpleDateFormat(\"MM/dd/yyyy\").parse(form.getStartDate());\n				ed = new SimpleDateFormat(\"MM/dd/yyyy\").parse(form.getEndDate());\n				String dateError = null;\n				if (sd.after(ed)) {\n					dateError = \"The start date of the prescription must be before the end date.\";\n				}\n				errorList.addIfNotNull(dateError);\n			} catch (ParseException e) {\n				errorList.addIfNotNull(ValidationFormat.DATE.getDescription());\n			}\n		}\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(641,'	public void setVisitID(long visitID) {\n		this.visitID = visitID;\n	}\n'),(642,'	public String getMedID() {\n		return medID;\n	}\n'),(643,'	public void setMedication(MedicationBean medication) {\n		this.medication = medication;\n	}\n'),(644,'	public String getDosage() {\n		return dosage;\n	}\n'),(645,'	public void setDosage(int dosage) {\n		this.dosage = dosage;\n	}\n'),(646,'	public String getStartDate() {\n		return startDate;\n	}\n'),(647,'	public void setStartDateStr(String startDate) {\n		this.startDateStr = startDate;\n	}\n'),(648,'	public String getEndDate() {\n		return endDate;\n	}\n'),(649,'	public void setEndDateStr(String endDate) {\n		this.endDateStr = endDate;\n	}\n'),(650,'	public String getInstructions() {\n		return instructions;\n	}\n'),(651,'	public void setInstructions(String instruction) {\n		this.instructions = instruction;\n	}\n'),(652,'	public String getOverrideCode() {\n		return overrideCode;\n	}\n'),(653,'	public void setReason(String reason) {\n		this.orc = reason;\n	}\n'),(654,'	public String getOverrideComment() {\n		return overrideComment;\n	}\n'),(655,'	public void setOverrideComment(String overrideComment) {\n		this.overrideComment = overrideComment;\n	}\n'),(657,'	public String recordLoginFailure() {\n		try {\n			authDAO.recordLoginFailure(ipAddr);\n			int loginFailures = authDAO.getLoginFailures(ipAddr);\n			hasAttempts = true;\n			return \"Login failed, attempt \" + loginFailures;\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		}\n	}\n'),(658,'	public void recordLoginFailure(String ipAddr) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"UPDATE LoginFailures SET FailureCount=FailureCount+1, lastFailure=CURRENT_TIMESTAMP WHERE IPAddress=?\");\n			ps.setString(1, ipAddr);\n			int numUpdated = ps.executeUpdate();\n			if (numUpdated == 0) // if there wasn\'t an empty row to begin with\n				insertLoginFailureRow(ipAddr, 1, conn);// now they have a row AND a strike against\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(659,'	public int getLoginFailures(String ipAddr) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LoginFailures WHERE IPADDRESS=?\");\n			ps.setString(1, ipAddr);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next()) {\n				if (System.currentTimeMillis() - rs.getTimestamp(\"lastFailure\").getTime() > LOGIN_TIMEOUT) {\n					updateFailuresToZero(ipAddr, conn);\n					return 0;\n				} else {\n					return rs.getInt(\"failureCount\");\n				}\n			} else {\n				insertLoginFailureRow(ipAddr, 0, conn);\n				return 0;\n			}\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(660,'	public boolean isValidForLogin() {\n		try {\n			return authDAO.getLoginFailures(ipAddr) < 3 || validCaptcha;\n		} catch (DBException e) {\n			return false;\n		}\n	}\n'),(661,'	public boolean needsCaptcha() {\n		try {\n			return authDAO.getLoginFailures(ipAddr) >= 3;\n		} catch (DBException e) {\n			System.err.println(\"Denying access due to DBException\");\n			return false;\n		}\n	}\n'),(662,'	public void resetFailures() throws DBException,SQLException{\n		if(hasAttempts) {\n			authDAO.resetLoginFailuresToZero(ipAddr);\n			hasAttempts = false;\n		}\n	}\n'),(663,'	public void resetLoginFailuresToZero(String ipAddr) throws DBException, SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try{\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"UPDATE LoginFailures SET failureCount=0 WHERE IPAddress=?\");\n			ps.setString(1, ipAddr);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(664,'	public int getFailureCount() {\n		try {\n			return authDAO.getLoginFailures(ipAddr);\n		} catch (DBException e) {\n			return 0;\n		}\n	}\n'),(666,'	public long add(PersonnelBean p) throws FormValidationException, iTrustException {\n		new AddPersonnelValidator().validate(p);\n		long newMID = personnelDAO.addEmptyPersonnel(Role.PHA);\n		p.setMID(newMID);\n		personnelDAO.editPersonnel(p);\n		String pwd = authDAO.addUser(newMID, Role.PHA, RandomPassword.getRandomPassword());\n		p.setPassword(pwd);\n		return newMID;\n	}\n'),(668,'	public List<TransactionBean> getTransactions(Date time, int n) throws DBException,\n			FormValidationException {\n		List<PersonnelBean> dlhcps =  patientDAO.getDeclaredHCPs(loggedInMID);\n		long dlhcpID = -1;\n		if(!dlhcps.isEmpty())\n			dlhcpID = dlhcps.get(0).getMID();\n		List<TransactionBean> fullList = transDAO.getTransactionsAffecting(loggedInMID, dlhcpID, time, 20*n+1);\n		return fullList;\n	}\n'),(669,'	public List<TransactionBean> getTransactionsAffecting(long mid, long dlhcpID, java.util.Date start, int range) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"SELECT * FROM TransactionLog WHERE ((timeLogged < ?) \" +\n							\"AND  (secondaryMID=? AND transactionCode \" +\n								\"IN (\" + \n								TransactionType.patientViewableStr+ \")) \" +\n							\"OR (loggedInMID=? AND transactionCode=?) ) \" +\n							\"AND NOT (loggedInMID=? AND transactionCode IN (\" + //exclude if DLHCP as specified in UC43\n								TransactionType.dlhcpHiddenStr + \")) \" +\n							\"ORDER BY timeLogged DESC LIMIT 0,?\");\n			ps.setString(2, mid + \"\");\n			ps.setString(3, mid + \"\");\n			ps.setInt(4, TransactionType.LOGIN_SUCCESS.getCode());\n			ps.setTimestamp(1, new Timestamp(start.getTime()));\n			ps.setLong(5, dlhcpID);\n			ps.setInt(6, range);\n			ResultSet rs = ps.executeQuery();\n			List<TransactionBean> tbList = loader.loadList(rs);\n			return tbList;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(670,'	public String getMessageAsSentence(String actor, Timestamp timestamp, TransactionType code) {\n		String result = actor + \" \";\n		for (TransactionType type : TransactionType.values()) {\n			if (code.getCode() == type.getCode() && type.isPatientViewable())\n				result += type.getActionPhrase();\n		}\n		SimpleDateFormat formatter = new SimpleDateFormat(\"h:mma.\");\n		switch(recent(new Date(timestamp.getTime()))) {\n		case 0:\n			result += \" today\";\n			break;\n		case 1:\n			result += \" yesterday\";\n			break;\n		case 2:\n			DateFormat sdf = new SimpleDateFormat(\"MM/dd/yyyy\");\n			result += \" on \" + sdf.format(new Date(timestamp.getTime()));\n			break;\n		}\n		result += \" at \" + formatter.format(timestamp);\n		return replaceNameWithYou(result);\n	}\n'),(675,'	public static int recent(Date d) {\n		int oneDay = 24 * 60 * 60 * 1000;\n		DateFormat sdf = new SimpleDateFormat(\"MM/dd/yyyy\");\n		Date rightNow = new Date();\n		if (sdf.format(rightNow).equals(sdf.format(d)))\n			return 0;\n		d.setTime(d.getTime() + oneDay);\n		if (sdf.format(rightNow).equals(sdf.format(d)))\n			return 1;\n		return 2;\n	}\n'),(676,'	private String replaceNameWithYou(String activity)\n	{\n		try{\n			return activity.replace(authDAO.getUserName(loggedInMID), \"You\");\n		} catch(Exception e)\n		{\n			return activity;\n		}\n	}\n'),(678,'	public FamilyDAO getFamilyDAO() {\n		return new FamilyDAO(this);\n	}\n'),(679,'	public HealthRecordsDAO getHealthRecordsDAO() {\n		return new HealthRecordsDAO(this);\n	}\n'),(680,'	public ReportRequestDAO getReportRequestDAO() {\n		return new ReportRequestDAO(this);\n	}\n'),(681,'	public List<LOINCbean> getProcedureName(String labCode) throws DBException {\n		return loincDAO.getProcedures(labCode);\n	}\n'),(682,'	public List<LOINCbean> getProcedures(String visitID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"Select * From LOINC Where LaboratoryProcedureCode = ? \");\n			ps.setString(1, visitID);\n			ResultSet rs = ps.executeQuery();\n			return LOINCLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(683,'	public long representPatient(String input) throws iTrustException {\n		try {\n			long reppeeMID = Long.valueOf(input);\n			if (patientDAO.represents(loggedInMID, reppeeMID)) {\n				loggedInMID = reppeeMID;\n				return reppeeMID;\n			} else\n				throw new iTrustException(\"You do not represent patient \" + reppeeMID);\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"MID is not a number\");\n		}\n	}\n'),(684,'	public boolean represents(long representer, long representee) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"SELECT * FROM Representatives WHERE RepresenterMID=? AND RepresenteeMID=?\");\n			ps.setLong(1, representer);\n			ps.setLong(2, representee);\n			ResultSet rs = ps.executeQuery();\n			return rs.next();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(685,'	public PatientBean getPatient() throws iTrustException {\n		return patientDAO.getPatient(loggedInMID);\n	}\n'),(686,'	public PatientBean getPatient(long mid) throws iTrustException {\n		return patientDAO.getPatient(mid);\n	}\n'),(687,'	public PersonnelBean getPersonnel(long mid) throws iTrustException {\n		return personnelDAO.getPersonnel(mid);\n	}\n'),(688,'	public List<Email> getEmailHistory() throws iTrustException {\n		return emailDAO.getEmailsByPerson(getPatient().getEmail());\n	}\n'),(689,'	public List<AllergyBean> getAllergies() throws iTrustException {\n		return allergyDAO.getAllergies(loggedInMID);\n	}\n'),(690,'	public List<FamilyMemberBean> getFamily() throws iTrustException {\n		List<FamilyMemberBean> fam = new ArrayList<FamilyMemberBean>();\n		List<FamilyMemberBean> parents = null;\n		try {\n			parents = familyDAO.getParents(loggedInMID);\n			fam.addAll(parents);\n			fam.addAll(familyDAO.getSiblings(loggedInMID));\n			fam.addAll(familyDAO.getChildren(loggedInMID));\n		} catch (DBException e) {\n			throw new iTrustException(e.getMessage());\n		}\n		if(parents != null) {\n			List<FamilyMemberBean> grandparents = new ArrayList<FamilyMemberBean>();\n			for(FamilyMemberBean parent : parents) {\n				try {\n					grandparents.addAll(familyDAO.getParents(parent.getMid()));\n				} catch (DBException e) {\n					throw new iTrustException(e.getMessage());\n				}\n			}\n			fam.addAll(grandparents);\n			for(FamilyMemberBean gp : grandparents) {\n				gp.setRelation(\"Grandparent\");\n			}\n		}\n		return fam;\n	}\n'),(691,'	public List<FamilyMemberBean> getParents(long pid) throws DBException {\n		return getFamilyMembers(pid, \"Parent\",\n				\"SELECT p2.FirstName AS FirstName, p2.LastName AS LastName, p2.MID as MID \"\n						+ \"FROM Patients p1, Patients p2 \"\n						+ \"WHERE p1.MID=? AND (p1.MotherMID=p2.MID OR p1.FatherMID=p2.MID)\", false);\n	}\n'),(692,'	public List<FamilyMemberBean> getSiblings(long pid) throws DBException {\n		return getFamilyMembers(pid, \"Sibling\",\n				\"SELECT p2.FirstName AS FirstName, p2.LastName AS LastName, p2.MID as MID \"\n						+ \"FROM Patients p1, Patients p2 \" + \"WHERE p1.MID=? AND p1.MID<>p2.MID \"\n						+ \"AND( (p1.MotherMID=p2.MotherMID AND p2.MotherMID<>0)\"\n						+ \"  OR (p1.FatherMID=p2.FatherMID AND p1.FatherMID<>0))\", false);\n	}\n'),(693,'	public List<FamilyMemberBean> getChildren(long pid) throws DBException {\n		return getFamilyMembers(pid, \"Child\", \"SELECT FirstName, LastName, MID FROM Patients \"\n				+ \"WHERE MotherMID=? or FatherMID=?\", true);\n	}\n'),(694,'	public long getMid() {\n		return mid;\n	}\n'),(695,'	public void setRelation(String relation) {\n		this.relation = relation;\n	}\n'),(696,'	public List<FamilyMemberBean> getFamilyHistory() throws iTrustException {\n		List<FamilyMemberBean> fam = new ArrayList<FamilyMemberBean>();\n		List<FamilyMemberBean> parents = null;\n		try {\n			parents = familyDAO.getParents(loggedInMID);\n			fam.addAll(parents);\n			fam.addAll(familyDAO.getSiblings(loggedInMID));\n		} catch (DBException e) {\n			throw new iTrustException(e.getMessage());\n		}\n		if(parents != null) {\n			List<FamilyMemberBean> grandparents = new ArrayList<FamilyMemberBean>();\n			for(FamilyMemberBean parent : parents) {\n				try {\n					grandparents.addAll(familyDAO.getParents(parent.getMid()));\n				} catch (DBException e) {\n					throw new iTrustException(e.getMessage());\n				}\n			}\n			fam.addAll(grandparents);\n			for(FamilyMemberBean gp : grandparents) {\n				gp.setRelation(\"Grandparent\");\n			}\n		}\n		return fam;\n	}\n'),(697,'	public List<HealthRecord> getAllHealthRecords() throws iTrustException {\n		return hrDAO.getAllHealthRecords(loggedInMID);\n	}\n'),(698,'	public List<HealthRecord> getAllHealthRecords(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM PersonalHealthInformation \"\n					+ \"WHERE PatientID=? ORDER BY ASOFDATE DESC\");\n			ps.setLong(1, mid);\n			ResultSet rs;\n			rs = ps.executeQuery();\n			return loader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(699,'	public List<HealthRecord> getFamilyHealthRecords(long mid) throws iTrustException {\n		return hrDAO.getAllHealthRecords(mid);\n	}\n'),(700,'	public List<OfficeVisitBean> getAllOfficeVisits() throws iTrustException {\n		return ovDAO.getAllOfficeVisits(loggedInMID);\n	}\n'),(701,'	public OfficeVisitBean getCompleteOfficeVisit(long visitID) throws iTrustException {\n		return ovDAO.getOfficeVisit(visitID);\n	}\n'),(702,'	public List<ProcedureBean> getProcedures(long visitID) throws DBException {\n		return procDAO.getList(visitID);\n	}\n'),(703,'	public List<ProcedureBean> getList(long visitID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"Select * From OVProcedure,CPTCodes,OfficeVisits Where OVProcedure.VisitID = ? \"\n					+ \"AND OfficeVisits.ID=OVProcedure.VisitID AND CPTCodes.Code=OVProcedure.CPTCode\");\n			ps.setLong(1, visitID);\n			ResultSet rs = ps.executeQuery();\n			return loader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(704,'	public List<PatientBean> getRepresented() throws iTrustException {\n		return patientDAO.getRepresented(loggedInMID);\n	}\n'),(705,'	public List<PatientBean> getRepresenting() throws iTrustException {\n		return patientDAO.getRepresenting(loggedInMID);\n	}\n'),(706,'	public boolean isSurveyCompleted(long visitID) throws iTrustException {\n		return surveyDAO.isSurveyCompleted(visitID);\n	}\n'),(707,'	public boolean isSurveyCompleted(long visitID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT count(*) FROM OVSurvey WHERE VisitID = ?\");\n			ps.setLong(1, visitID);\n			ResultSet rs = ps.executeQuery();\n			rs.next();\n			return (rs.getInt(1) == 0) ? false : true;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(708,'	public List<LabProcedureBean> getLabs() throws iTrustException {\n		return labDAO.getLabProceduresForPatient(loggedInMID);\n	}\n'),(709,'	public List<LabProcedureBean> getSpecificLabs(long id, String loincID) throws DBException {\n		return labDAO.getAllLabProceduresLOINC(id, loincID);\n	}\n'),(710,'	public List<LabProcedureBean> getAllLabProceduresLOINC(long id, String loinc) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure WHERE PatientMID = ? AND LaboratoryProcedureCode = ? AND Status = ?\");\n			ps.setLong(1, id);\n			ps.setString(2, loinc);\n			ps.setString(3, \"Completed\");\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(712,'	public void setViewedByPatient(boolean viewedByPatient) {\n		if (status.equals(Completed)) {\n			this.viewedByPatient = viewedByPatient;\n		}\n	}\n'),(713,'	public void markViewed(LabProcedureBean b) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (b.getPid() == 0L) throw new SQLException(\"PatientMID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE LabProcedure SET ViewedByPatient = ? WHERE LaboratoryProcedureID=?\");\n			ps.setBoolean(1, b.isViewedByPatient());\n			ps.setLong(2, b.getProcedureID());\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(714,'	public List<ReportRequestBean> getReportRequests() throws iTrustException {\n		return reportRequestDAO.getAllReportRequestsForPatient(loggedInMID);\n	}\n'),(715,'	public List<ReportRequestBean> getAllReportRequestsForPatient(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (pid == 0L) throw new SQLException(\"PatientMID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM ReportRequests WHERE PatientMID = ?\");\n			ps.setLong(1, pid);\n			ResultSet rs = ps.executeQuery();\n			return loader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(716,'	public boolean doesFamilyMemberHaveHighBP(FamilyMemberBean member) throws iTrustException {\n		List<HealthRecord> records = hrDAO.getAllHealthRecords(member.getMid());\n		if(records.size() == 0)\n			return false;\n		for(HealthRecord record : records) {\n			if(record.getBloodPressureSystolic() > 240 || record.getBloodPressureDiastolic() > 120 )\n				return true;\n		}\n		return false;\n	}\n'),(717,'	public int getBloodPressureSystolic() {\n		return bloodPressureN;\n	}\n'),(718,'	public int getBloodPressureDiastolic() {\n		return bloodPressureD;\n	}\n'),(719,'	public boolean doesFamilyMemberHaveHighCholesterol(FamilyMemberBean member) throws iTrustException {\n		List<HealthRecord> records = hrDAO.getAllHealthRecords(member.getMid());\n		if(records.size() == 0)\n			return false;\n		for(HealthRecord record : records) {\n			if(record.getCholesterolHDL() < 35 || record.getCholesterolLDL() > 250 )\n				return true;\n		}\n		return false;\n	}\n'),(720,'	public int getCholesterolHDL() {\n		return cholesterolHDL;\n	}\n'),(721,'	public int getCholesterolLDL() {\n		return cholesterolLDL;\n	}\n'),(722,'	public boolean doesFamilyMemberHaveDiabetes(FamilyMemberBean member) throws iTrustException {\n		List<DiagnosisBean> diagnoses = patientDAO.getDiagnoses(member.getMid());\n		if(diagnoses.size() == 0)\n			return false;\n		for(DiagnosisBean diag : diagnoses) {\n			if(diag.getICDCode().startsWith(\"250\"))\n				return true;\n		}\n		return false;\n	}\n'),(723,'	public boolean doesFamilyMemberHaveCancer(FamilyMemberBean member) throws iTrustException {\n		List<DiagnosisBean> diagnoses = patientDAO.getDiagnoses(member.getMid());\n		if(diagnoses.size() == 0)\n			return false;\n		for(DiagnosisBean diag : diagnoses) {\n			if(diag.getICDCode().startsWith(\"199\"))\n				return true;\n		}\n		return false;\n	}\n'),(724,'	public boolean doesFamilyMemberHaveHeartDisease(FamilyMemberBean member) throws iTrustException {\n		List<DiagnosisBean> diagnoses = patientDAO.getDiagnoses(member.getMid());\n		if(diagnoses.size() == 0)\n			return false;\n		for(DiagnosisBean diag : diagnoses) {\n			if(diag.getICDCode().startsWith(\"402\"))\n				return true;\n		}\n		return false;\n	}\n'),(725,'	public boolean isFamilyMemberSmoker(FamilyMemberBean member) throws iTrustException {\n		List<HealthRecord> records = hrDAO.getAllHealthRecords(member.getMid());\n		if(records.size() == 0)\n			return false;\n		for(HealthRecord record : records) {\n			if(record.isSmoker())\n				return true;\n		}\n		return false;\n	}\n'),(726,'	public boolean isSmoker() {\n		return isSmoker;\n	}\n'),(727,'	public String getFamilyMemberCOD(FamilyMemberBean member) throws iTrustException {\n		PatientBean patient = patientDAO.getPatient(member.getMid());\n		if(patient.getCauseOfDeath() == null)\n			return \"\";\n		DiagnosisBean diag = icdDAO.getICDCode(patient.getCauseOfDeath());\n		if(diag == null)\n			return \"\";\n		return diag.getDescription();\n	}\n'),(728,'	public String getCauseOfDeath() {\n		return causeOfDeath;\n	}\n'),(729,'	public DiagnosisBean getICDCode(String code) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM ICDCodes WHERE Code = ?\");\n			ps.setString(1, code);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next())\n				return diagnosisLoader.loadSingle(rs);\n			return null;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(732,'	public String reportInteraction(String firstDrug, String secondDrug, String description) throws iTrustException,FormValidationException{\n		if (firstDrug.equals(secondDrug)){\n			return \"Interactions can only be recorded between two different drugs\";\n		}\n		DrugInteractionBean drugInt = new DrugInteractionBean();\n		drugInt.setFirstDrug(firstDrug);\n		drugInt.setSecondDrug(secondDrug);\n		drugInt.setDescription(description);\n		try {\n			validator.validate(drugInt);\n			if (drugDAO.reportInteraction(firstDrug,secondDrug,description)){\n				return \"Interaction recorded successfully\";\n			} else {\n				return \"Interaction could not be added\";\n			}\n		} catch (DBException e){\n			e.printStackTrace();\n			return e.getMessage();\n			}\n		}\n'),(734,'	public void setFirstDrug(String firstDrug) {\n		this.firstDrug = firstDrug;\n	}\n'),(735,'	public void setSecondDrug(String secondDrug) {\n		this.secondDrug = secondDrug;\n	}\n'),(736,'	public void setDescription(String description) {\n		this.description = description;\n	}\n'),(737,'	public void validate(DrugInteractionBean d) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"FirstDrug\", d.getFirstDrug(), ValidationFormat.ND,false));\n		errorList.addIfNotNull(checkFormat(\"SecondDrug\", d.getSecondDrug(), ValidationFormat.ND,false));\n		errorList.addIfNotNull(checkFormat(\"description\", d.getDescription(), ValidationFormat.DRUG_INT_COMMENTS,false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(738,'	public boolean reportInteraction(String firstDrug, String secondDrug, String description) throws DBException, iTrustException {\n		if(firstDrug.equals(secondDrug)) throw new iTrustException(\"Drug cannot interact with itself.\");\n		List<DrugInteractionBean> currentIntsDrug2 = getInteractions(secondDrug);\n		for(DrugInteractionBean dib : currentIntsDrug2){\n			if(dib.getSecondDrug().equals(firstDrug)){\n				throw new iTrustException(\"Error: Interaction between these drugs already exists.\");\n			}\n		}\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO druginteractions (FirstDrug, SecondDrug, Description) \" + \"VALUES (?,?,?)\");\n			ps.setString(1, firstDrug);\n			ps.setString(2, secondDrug);\n			ps.setString(3, description);\n			return (1 == ps.executeUpdate());\n		} catch (SQLException e) {\n			e.printStackTrace();\n			if (1062 == e.getErrorCode())\n				throw new iTrustException(\"Error: Interaction between these drugs already exists.\");\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(739,'	public String deleteInteraction(String firstDrug,String secondDrug) throws iTrustException, FormValidationException{\n		DrugInteractionBean drugInt = new DrugInteractionBean();\n		drugInt.setFirstDrug(firstDrug);\n		drugInt.setSecondDrug(secondDrug);\n		drugInt.setDescription(\"blank\");\n		try {\n			validator.validate(drugInt);\n			if (drugDAO.deleteInteraction(firstDrug,secondDrug)){\n				return \"Interaction deleted successfully\";\n			} else {\n				return \"Interaction could not be deleted\";\n			}\n		} catch (DBException e){\n			e.printStackTrace();\n			throw new iTrustException(e.getMessage());\n		}\n	}\n'),(740,'	public boolean deleteInteraction(String firstDrug,String secondDrug) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"DELETE FROM druginteractions WHERE (FirstDrug = ? OR SecondDrug = ?) AND (FirstDrug = ? OR SecondDrug = ?)\");\n			ps.setString(1, firstDrug);\n			ps.setString(2, firstDrug);\n			ps.setString(3, secondDrug);\n			ps.setString(4, secondDrug);\n			if(ps.executeUpdate() == 0)\n				return false;\n			return true;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(741,'	public List<DrugInteractionBean> getInteractions(String drugCode) throws iTrustException {\n		try {\n			return drugDAO.getInteractions(drugCode);\n		} catch (DBException e){\n			throw new iTrustException(e.getMessage());\n		}\n	}\n'),(746,'	public String getMID() {\n		return MID;\n	}\n'),(747,'	public String getDrug() {\n		return drug;\n	}\n'),(748,'	public String getCode() {\n		return code;\n	}\n'),(749,'	public String getDescription() {\n		return description;\n	}\n'),(750,'	public void setDescription(String description) {\n		this.description = description;\n	}\n'),(751,'	public String getPrescriber() {\n		return Prescriber;\n	}\n'),(752,'	public Email sendMail (AdverseEventBean aeBean)throws iTrustException, FormValidationException, DBException{\n		Email email = new Email();\n		String fromEmail;\n		email.setFrom(\"noreply@itrust.com\");\n		List<String> toList = new ArrayList<String>();\n		PatientBean sender = patientDAO.getPatient(loggedInMID);\n		PersonnelBean receiver = personnelDAO.getPersonnel(hcpID);\n		toList.add(receiver.getEmail());\n		fromEmail = sender.getEmail();\n		email.setToList(toList);\n		email.setFrom(fromEmail);\n		email.setSubject(String.format(\"Adverse Event Report (Immunization)\"));\n		email.setBody(String.format(\n				\" Patient: \" + patientDAO.getName(Long.parseLong(aeBean.getMID())) \n				+ \" (MID \" + aeBean.getMID() + \") Has Reported the following adverse event\" +\n				\" Drug: \" + aeBean.getDrug() + \"(\" + aeBean.getCode() + \") Description: \" + aeBean.getDescription()\n				));\n		emailer.sendEmail(email);\n		return email;\n	}\n'),(753,'	public String addReport(AdverseEventBean aeBean)throws iTrustException, FormValidationException, DBException {\n		try{\n			validator.validate(aeBean);\n		}catch (FormValidationException e){\n			e.printStackTrace();\n			return e.getMessage();\n			}\n		try{\n			adverseEventDAO.addReport(aeBean, hcpID);\n		}\n		catch( DBException e ){\n			throw new iTrustException(e.getMessage());\n		}\n		return \"\";\n	}\n'),(754,'	public void validate(AdverseEventBean b) throws FormValidationException {\n		ErrorList errorList = new ErrorList();errorList.addIfNotNull(checkFormat(\"comment\", b.getDescription(), ValidationFormat.ADVERSE_EVENT_COMMENTS,false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(756,'	public String getMessage() {\n		return \"This form has not been validated correctly. The following field are not properly filled in: \"\n				+ errorList.toString();\n	}\n'),(757,'	public void addReport(AdverseEventBean aeBean, long hcpmid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try{\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\n					\"INSERT INTO AdverseEvents (PatientMID, PresImmu, Code, Comment, Prescriber, Status) \"\n					  + \"VALUES (?, ?, ?, ?, ?, ?)\");\n			ps.setString(1, aeBean.getMID());\n			ps.setString(2, aeBean.getDrug());\n			ps.setString(3, aeBean.getCode());\n			ps.setString(4, aeBean.getDescription());\n			ps.setLong(5, hcpmid);\n			ps.setString(6,\"Active\");\n			ps.executeUpdate();\n		} catch(SQLException e){\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(759,'	public PatientBean getPatient(long patientID) throws iTrustException {\n		return patientDAO.getPatient(patientID);\n	}\n'),(760,'	public List<PatientBean> getRepresentees() throws iTrustException {\n		return patientDAO.getRepresented(loggedInMID);\n	}\n'),(761,'	public PersonnelBean getPrescribingDoctor(PrescriptionBean prescription) throws iTrustException {\n		return personnelDAO.getPrescribingDoctor(prescription);\n	}\n'),(762,'	public List<PrescriptionBean> getPrescriptionsForPatient(long patientID) throws iTrustException {\n		PatientBean patient = patientDAO.getPatient(patientID);\n		if (loggedInMID == patientID) {\n			return patientDAO.getExpiredPrescriptions(patientID);\n		}\n		List<String> toList = new ArrayList<String>();\n		toList.add(patient.getEmail());\n		List<PatientBean> representatives = patientDAO.getRepresenting(patientID);\n		for(PatientBean representative : representatives) {\n			if (loggedInMID == representative.getMID()) {\n				return patientDAO.getExpiredPrescriptions(patientID);\n			}\n			toList.add(representative.getEmail());\n		}\n		List<PersonnelBean> dlhcps = patientDAO.getDeclaredHCPs(patientID);\n		for(PersonnelBean dlhcp : dlhcps) {\n			if (loggedInMID == dlhcp.getMID()) {\n				return patientDAO.getExpiredPrescriptions(patientID);\n			}\n			List<PersonnelBean> uaps = personnelDAO.getUAPsForHCP(dlhcp.getMID());\n			for(PersonnelBean uap : uaps) {\n				if (loggedInMID == uap.getMID()) {\n					return patientDAO.getPrescriptions(patientID);\n				}\n			}\n		}\n		Email email = new Email();\n		email.setToList(toList);\n		email.setFrom(\"noreply@itrust.com\");\n		email.setSubject(\"Undesignated Personnel Have Accessed Your Prescription Records\");\n		email.setBody(\"An undesignated HCP or UAP has accessed your prescription records. For more information, please log in to iTrust.\");\n		emailer.sendEmail(email);\n		return patientDAO.getPrescriptions(patientID);\n	}\n'),(763,'	public List<PrescriptionBean> getExpiredPrescriptions (long patientID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (patientID == 0L) throw new SQLException(\"pid cannot be 0\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"Select * From OVMedication,NDCodes,OfficeVisits \"\n					+ \"Where OfficeVisits.PatientID = ? AND OVMedication.VisitID = \"\n					+ \"OfficeVisits.ID AND NDCodes.Code=OVMedication.NDCode AND \"\n					+ \"OVMedication.EndDate < ?\" + \"ORDER BY OVMedication.ID DESC;\");\n			ps.setLong(1, patientID);\n			ps.setDate(2, DateUtil.getSQLdateXDaysAgoFromNow(0));\n			ResultSet rs = ps.executeQuery();\n			return prescriptionLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(766,'	public List<ProcedureBean> getProcedures() throws DBException {\n		if (isUnsaved()) {\n			return new ArrayList<ProcedureBean>();\n		} else {\n			return proceduresDAO.getMedProceduresList(getOvID());\n		}\n	}\n'),(769,'	public List<ProcedureBean> getMedProceduresList(long visitID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"Select * From OVProcedure,CPTCodes,OfficeVisits Where OVProcedure.VisitID = ? \"\n					+ \"AND OfficeVisits.ID=OVProcedure.VisitID AND CPTCodes.Code=OVProcedure.CPTCode AND CPTCodes.attribute is NULL\");\n			ps.setLong(1, visitID);\n			ResultSet rs = ps.executeQuery();\n			return loader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(770,'	public void addProcedure(ProcedureBean bean) throws iTrustException {\n		verifySaved();\n		proceduresDAO.add(bean);\n	}\n'),(772,'	public void editProcedure(ProcedureBean bean) throws iTrustException {\n		verifySaved();\n		proceduresDAO.edit(bean);\n	}\n'),(773,'	public void deleteProcedure(ProcedureBean bean) throws iTrustException {\n		verifySaved();\n		proceduresDAO.remove(bean.getOvProcedureID());\n	}\n'),(774,'	public List<ProcedureBean> getProcedureCodes() throws DBException {\n		return cptDAO.getProcedureCPTCodes();\n	}\n'),(775,'	public List<ProcedureBean> getProcedureCPTCodes() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"select * from cptcodes where attribute is NULL order by code\");\n			ResultSet rs = ps.executeQuery();\n			return procedureBeanLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(777,'	public List<PatientBean> getRepresented(long pid) throws iTrustException {\n		return patientDAO.getRepresented(pid);\n	}\n'),(778,'	public String addRepresentative(String pidString) throws iTrustException {\n		try {\n			long representee = Long.valueOf(pidString);\n			if (authDAO.getUserRole(representee) != Role.PATIENT)\n				throw new iTrustException(\"This user is not a patient!\");\n			else if (super.pid == representee)\n				throw new iTrustException(\"This user cannot represent themselves.\");\n			boolean confirm = patientDAO.addRepresentative(pid, representee);\n			if (confirm) {\n				return \"Patient represented\";\n			} else\n				return \"No change made\";\n		} catch (NumberFormatException e) {\n			return \"MID not a number\";\n		}\n	}\n'),(779,'	public boolean addRepresentative(long representer, long representee) throws DBException, iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"INSERT INTO Representatives(RepresenterMID,RepresenteeMID) VALUES (?,?)\");\n			ps.setLong(1, representer);\n			ps.setLong(2, representee);\n			return 1 == ps.executeUpdate();\n		} catch (SQLException e) {\n			if (1062 == e.getErrorCode())\n				throw new iTrustException(\"Patient \" + representer + \" already represents patient \"\n						+ representee);\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(780,'	public String removeRepresentative(String input) throws iTrustException {\n		try {\n			long representee = Long.valueOf(input);\n			boolean confirm = patientDAO.removeRepresentative(pid, representee);\n			if (confirm) {\n				return \"Patient represented\";\n			} else\n				return \"No change made\";\n		} catch (NumberFormatException e) {\n			return \"MID not a number\";\n		}\n	}\n'),(781,'	public boolean removeRepresentative(long representer, long representee) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"DELETE FROM Representatives WHERE RepresenterMID=? AND RepresenteeMID=?\");\n			ps.setLong(1, representer);\n			ps.setLong(2, representee);\n			return 1 == ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(784,'	public List<DiagnosisBean> getDiagnoses() throws DBException {\n		if (isUnsaved()) {\n			return new ArrayList<DiagnosisBean>();\n		} else {\n			return diagnosesDAO.getList(getOvID());\n		}\n	}\n'),(787,'	public List<DiagnosisBean> getList(long visitID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"Select * From OVDiagnosis,ICDCodes Where OVDiagnosis.VisitID = ? \"\n					+ \"AND ICDCodes.Code=OVDiagnosis.ICDCode\");\n			ps.setLong(1, visitID);\n			ResultSet rs = ps.executeQuery();\n			return loader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(788,'	public void addDiagnosis(DiagnosisBean bean) throws iTrustException {\n		verifySaved();\n		diagnosesDAO.add(bean);\n	}\n'),(790,'	public long add(DiagnosisBean bean) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			String statement = \"INSERT INTO OVDiagnosis \" +\n				\"(VisitID,ICDCode) VALUES (?,?)\";\n			ps = conn.prepareStatement(statement);\n			ps.setLong(1, bean.getVisitID());\n			ps.setString(2, bean.getICDCode());\n			ps.executeUpdate();\n			return DBUtil.getLastInsert(conn);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(791,'	public void editDiagnosis(DiagnosisBean bean) throws iTrustException {\n		verifySaved();\n		diagnosesDAO.edit(bean);\n	}\n'),(792,'	public long edit(DiagnosisBean bean) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			String statement = \"UPDATE OVDiagnosis \" +\n				\"SET VisitID=?, ICDCode=?\" +\n				\"WHERE ID=?\";\n			ps = conn.prepareStatement(statement);\n			ps.setLong(1, bean.getVisitID());\n			ps.setString(2, bean.getICDCode());\n			ps.setLong(3, bean.getOvDiagnosisID());\n			ps.executeUpdate();\n			return DBUtil.getLastInsert(conn);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(793,'	public void deleteDiagnosis(DiagnosisBean bean) throws iTrustException {\n		verifySaved();\n		diagnosesDAO.remove(bean.getOvDiagnosisID());\n	}\n'),(794,'	public long getOvDiagnosisID() {\n		return ovDiagnosisID;\n	}\n'),(795,'	public void remove(long ovDiagnosisID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"DELETE FROM OVDiagnosis WHERE ID=? \");\n			ps.setLong(1, ovDiagnosisID);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(796,'	public List<DiagnosisBean> getDiagnosisCodes() throws DBException {\n		return icdDAO.getAllICDCodes();\n	}\n'),(799,'	public ReasonCodesDAO getORCodesDAO() {\n		return new ReasonCodesDAO(this);\n	}\n'),(800,'	public String addORCode(OverrideReasonBean orc) throws FormValidationException {\n		validator.validate(orc);\n		try {\n			if (orcDAO.addORCode(orc)) {\n				return \"Success: \" + orc.getORCode() + \" - \" + orc.getDescription() + \" added\";\n			} else\n				return \"The database has become corrupt. Please contact the system administrator for assistance.\";\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		} catch (iTrustException e) {\n			return e.getMessage();\n		}\n	}\n'),(801,'	public void validate(OverrideReasonBean orc) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"Reason Code\", orc.getORCode(), ValidationFormat.ORC, false));\n		errorList.addIfNotNull(checkFormat(\"Description\", orc.getDescription(),\n				ValidationFormat.OR_CODE_DESCRIPTION, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(802,'	public boolean addORCode(OverrideReasonBean orc) throws DBException, iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO DrugReactionOverrideCodes (Code, Description) \" + \"VALUES (?,?)\");\n			ps.setString(1, orc.getORCode());\n			ps.setString(2, orc.getDescription());\n			return (1 == ps.executeUpdate());\n		} catch (SQLException e) {\n			e.printStackTrace();\n			if (1062 == e.getErrorCode())\n				throw new iTrustException(\"Error: Code already exists.\");\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(803,'	public String getORCode() {\n		return reasonCode;\n	}\n'),(804,'	public String getDescription() {\n		return description;\n	}\n'),(805,'	public String updateInformation(OverrideReasonBean orc) throws FormValidationException {\n		validator.validate(orc);\n		try {\n			int rows = updateCode(orc);\n			if (0 == rows) {\n				return \"Error: Code not found.\";\n			} else {\n				return \"Success: \" + rows + \" row(s) updated\";\n			}\n		} catch (DBException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		}\n	}\n'),(806,'	private int updateCode(OverrideReasonBean orc) throws DBException {\n		return orcDAO.updateCode(orc);\n	}\n'),(807,'	public int updateCode(OverrideReasonBean orc) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE DrugReactionOverrideCodes SET Description = ? \" + \"WHERE Code = ?\");\n			ps.setString(1, orc.getDescription());\n			ps.setString(2, orc.getORCode());\n			return ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(809,'	public String updateAllergies(long pid, String description) throws FormValidationException, DBException {\n		AllergyBean bean = new AllergyBean();\n		bean.setDescription(description);\n		allergyDAO.addAllergy(pid, description);\n		emailutil.sendEmail(makeEmail());\n		return \"Allergy Added\";\n	}\n'),(811,'	public void setDescription(String description) {\n		this.description = description;\n	}\n'),(812,'	public void addAllergy(long pid, String description) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO Allergies(PatientID, Description) VALUES (?,?)\");\n			ps.setLong(1, pid);\n			ps.setString(2, description);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(813,'	private Email makeEmail() throws DBException{\n		Email email = new Email();\n		List<PatientBean> reps = patientDAO.getRepresenting(patient.getMID());\n		List<String> toAddrs = new ArrayList<String>();\n		toAddrs.add(patient.getEmail());\n		for (PatientBean r: reps) {\n			toAddrs.add(r.getEmail());\n		}\n		email.setFrom(\"no-reply@itrust.com\");\n    	email.setToList(toAddrs); // patient and personal representative\n    	email.setSubject(String.format(\"Your medical records have been altered\"));\n    	email.setBody(\"Health care professional \"+ HCPUAP.getFullName() +\" has altered your medical records. \" +\n    				\"She is not on your list of designated health care professionals.\");\n		return email;\n	}\n'),(814,'	public PatientBean getPatient() throws iTrustException {\n		return patientDAO.getPatient(pid);\n	}\n'),(815,'	public List<AllergyBean> getAllergies() throws iTrustException {\n		return allergyDAO.getAllergies(pid);\n	}\n'),(816,'	public List<FamilyMemberBean> getFamily() throws iTrustException {\n		List<FamilyMemberBean> fam = new ArrayList<FamilyMemberBean>();\n		List<FamilyMemberBean> parents = null;\n		parents = familyDAO.getParents(pid);\n		fam.addAll(parents);\n		fam.addAll(familyDAO.getSiblings(pid));\n		fam.addAll(familyDAO.getChildren(pid));\n		if(parents != null) {\n			List<FamilyMemberBean> grandparents = new ArrayList<FamilyMemberBean>();\n			for(FamilyMemberBean parent : parents) {\n				grandparents.addAll(familyDAO.getParents(parent.getMid()));\n			}\n			fam.addAll(grandparents);\n			for(FamilyMemberBean gp : grandparents) {\n				gp.setRelation(\"Grandparent\");\n			}\n		}\n		return fam;\n	}\n'),(817,'	public List<HealthRecord> getAllHealthRecords() throws iTrustException {\n		List<HealthRecord> allHealthRecords = hrDAO.getAllHealthRecords(pid);\n		return allHealthRecords;\n	}\n'),(818,'	public List<OfficeVisitBean> getAllOfficeVisits() throws iTrustException {\n		return ovDAO.getAllOfficeVisits(pid);\n	}\n'),(819,'	public OfficeVisitBean getCompleteOfficeVisit(long visitID) throws iTrustException {\n		return ovDAO.getOfficeVisit(visitID);\n	}\n'),(820,'	public List<ProcedureBean> getProcedures(long visitID) throws DBException {\n		return procDAO.getList(visitID);\n	}\n'),(821,'	public List<RiskChecker> getDiseasesAtRisk() throws NoHealthRecordsException,iTrustException,DBException {\n		this.diseaseMediator = new ChronicDiseaseMediator(factory, pid);\n		return diseaseMediator.getDiseaseAtRisk();\n	}\n'),(822,'	public boolean doesFamilyMemberHaveHighBP(FamilyMemberBean member) throws iTrustException {\n		List<HealthRecord> records = hrDAO.getAllHealthRecords(member.getMid());\n		if(records.size() == 0)\n			return false;\n		for(HealthRecord record : records) {\n			if(record.getBloodPressureSystolic() > 240 || record.getBloodPressureDiastolic() > 120 )\n				return true;\n		}\n		return false;\n	}\n'),(823,'	public boolean doesFamilyMemberHaveHighCholesterol(FamilyMemberBean member) throws iTrustException {\n		List<HealthRecord> records = hrDAO.getAllHealthRecords(member.getMid());\n		if(records.size() == 0)\n			return false;\n		for(HealthRecord record : records) {\n			if(record.getCholesterolHDL() < 35 || record.getCholesterolLDL() > 250 )\n				return true;\n		}\n		return false;\n	}\n'),(824,'	public boolean doesFamilyMemberHaveDiabetes(FamilyMemberBean member) throws iTrustException {\n		List<DiagnosisBean> diagnoses = patientDAO.getDiagnoses(member.getMid());\n		if(diagnoses.size() == 0)\n			return false;\n		for(DiagnosisBean diag : diagnoses) {\n			if(diag.getICDCode().startsWith(\"250\"))\n				return true;\n		}\n		return false;\n	}\n'),(825,'	public boolean doesFamilyMemberHaveCancer(FamilyMemberBean member) throws iTrustException {\n		List<DiagnosisBean> diagnoses = patientDAO.getDiagnoses(member.getMid());\n		if(diagnoses.size() == 0)\n			return false;\n		for(DiagnosisBean diag : diagnoses) {\n			if(diag.getICDCode().startsWith(\"199\"))\n				return true;\n		}\n		return false;\n	}\n'),(826,'	public boolean doesFamilyMemberHaveHeartDisease(FamilyMemberBean member) throws iTrustException {\n		List<DiagnosisBean> diagnoses = patientDAO.getDiagnoses(member.getMid());\n		if(diagnoses.size() == 0)\n			return false;\n		for(DiagnosisBean diag : diagnoses) {\n			if(diag.getICDCode().startsWith(\"402\"))\n				return true;\n		}\n		return false;\n	}\n'),(827,'	public boolean isFamilyMemberSmoker(FamilyMemberBean member) throws iTrustException {\n		List<HealthRecord> records = hrDAO.getAllHealthRecords(member.getMid());\n		if(records.size() == 0)\n			return false;\n		for(HealthRecord record : records) {\n			if(record.isSmoker())\n				return true;\n		}\n		return false;\n	}\n'),(828,'	public String getFamilyMemberCOD(FamilyMemberBean member) throws iTrustException {\n		PatientBean patient = patientDAO.getPatient(member.getMid());\n		if(patient.getCauseOfDeath() == null)\n			return \"\";\n		DiagnosisBean diag = icdDAO.getICDCode(patient.getCauseOfDeath());\n		if(diag == null)\n			return \"\";\n		return diag.getDescription();\n	}\n'),(830,'	public SurveyResultDAO getSurveyResultDAO() {\n		return new SurveyResultDAO(this);\n	}\n'),(832,'	public List<SurveyResultBean> getSurveyResultsForHospital(SurveyResultBean bean) throws iTrustException, FormValidationException {\n		return surveyResultDAO.getSurveyResultsForHospital(bean.getHCPhospital(), bean.getHCPspecialty());\n	}\n'),(833,'	public String getHCPhospital() {\n		return hcpHospitalID;\n	}\n'),(834,'	public String getHCPspecialty() {\n		return hcpSpecialty;\n	}\n'),(835,'	public List<SurveyResultBean> getSurveyResultsForHospital(String hospitalID, String specialty) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		StringBuffer sql = new StringBuffer();\n		sql.append(\"select p.mid, p.firstname, p.lastname, p.address1, p.address2, p.city, p.state, p.zip, p.specialty, \");\n		sql.append(\"h.hosid hospitalID, \");\n		sql.append(\"avg(s.WaitingRoomMinutes) AvgWaitingRoomMinutes, \");\n		sql.append(\"avg(s.ExamRoomMinutes) AvgExamRoomMinutes, \");\n		sql.append(\"avg(s.VisitSatisfaction) AvgVisitSatisfaction, \");\n		sql.append(\"avg(s.TreatmentSatisfaction) AvgTreatmentSatisfation, \");\n		sql.append(\"count(*) / \");\n		sql.append(\"	(select count(*) from personnel p1, officevisits v1, HCPAssignedHos h1 \");\n		sql.append(\"	 where v1.hcpid = p1.mid \");\n		sql.append(\"	 and v1.hcpid = h1.hcpid \");\n		sql.append(\"	 and h1.hosid = ? \");\n		sql.append(\"	 and p1.mid = p.mid) * 100 PercentSatisfactionResults \");\n		sql.append(\"from ovsurvey s, personnel p, officevisits v, HCPAssignedHos h \");\n		sql.append(\"where s.visitid = v.id \");\n		sql.append(\"and v.hcpid = p.mid \");\n		sql.append(\"and v.hcpid = h.hcpid \");\n		sql.append(\"and h.hosid = ? \");\n		if (!specialty.equals(SurveyResultBean.ANY_SPECIALTY))\n			sql.append(\"and p.specialty = ?\");\n		sql.append(\"group by p.mid, p.firstname, p.lastname, p.address1, p.address2, p.city, p.state, p.zip, hospitalID \");\n		if (!specialty.equals(SurveyResultBean.ANY_SPECIALTY))\n			sql.append(\", p.specialty \");\n		sql.append(\"order by p.mid \");\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(sql.toString());\n			ps.setString(1, hospitalID);\n			ps.setString(2, hospitalID);\n			if (!specialty.equals(SurveyResultBean.ANY_SPECIALTY)) {\n				ps.setString(3, specialty);\n			}\n			return loader.loadList(ps.executeQuery());\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(836,'	public List<SurveyResultBean> getSurveyResultsForZip(SurveyResultBean bean) throws iTrustException, FormValidationException {\n		validator.validate(bean);\n		return surveyResultDAO.getSurveyResultsForZip(bean.getHCPzip(), bean.getHCPspecialty());\n	}\n'),(837,'	public void validate(SurveyResultBean bean) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"Zip Code\", bean.getHCPzip(), ValidationFormat.ZIPCODE, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(838,'	public String getHCPzip() {\n		return hcpZip;\n	}\n'),(839,'	public List<SurveyResultBean> getSurveyResultsForZip(String zip, String specialty) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		StringBuffer sql = new StringBuffer();\n		sql.append(\"select p.mid, p.firstname, p.lastname, p.address1, p.address2, p.city, p.state, p.zip, p.specialty, \");\n		sql.append(\"\'na\' hospitalID, \");\n		sql.append(\"avg(s.WaitingRoomMinutes) AvgWaitingRoomMinutes, \");\n		sql.append(\"avg(s.ExamRoomMinutes) AvgExamRoomMinutes, \");\n		sql.append(\"avg(s.VisitSatisfaction) AvgVisitSatisfaction, \");\n		sql.append(\"avg(s.TreatmentSatisfaction) AvgTreatmentSatisfation, \");\n		sql.append(\"count(*) / \");\n		sql.append(\"	(select count(*) from personnel p1, officevisits v1 \");\n		sql.append(\"	 where v1.hcpid = p1.mid \");\n		sql.append(\"	 and substr(p1.zip,1,3) = ? \");\n		sql.append(\"	 and p1.mid = p.mid) * 100 PercentSatisfactionResults \");\n		sql.append(\"from ovsurvey s, personnel p, officevisits v \");\n		sql.append(\"where s.visitid = v.id \");\n		sql.append(\"and v.hcpid = p.mid \");\n		sql.append(\"and substr(p.zip,1,3) = ? \");\n		if (!specialty.equals(SurveyResultBean.ANY_SPECIALTY))\n			sql.append(\"and specialty = ?\");\n		sql.append(\"group by p.mid, p.firstname, p.lastname, p.address1, p.address2, p.city, p.state, p.zip, hospitalID \");\n		if (!specialty.equals(SurveyResultBean.ANY_SPECIALTY))\n			sql.append(\", p.specialty \");\n		sql.append(\"order by p.mid \");\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(sql.toString());\n			ps.setString(1, zip.substring(0, 3));\n			ps.setString(2, zip.substring(0, 3));\n			if (!specialty.equals(SurveyResultBean.ANY_SPECIALTY))\n				ps.setString(3, specialty);\n			return loader.loadList(ps.executeQuery());\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(840,'	public List<PersonnelBean> getDeclaredHCPS() throws iTrustException {\n		return patientDAO.getDeclaredHCPs(loggedInMID);\n	}\n'),(841,'	public boolean declareHCP(long pid, long hcpID) throws DBException, iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO DeclaredHCP(PatientID, HCPID) VALUES(?,?)\");\n			ps.setLong(1, pid);\n			ps.setLong(2, hcpID);\n			return 1 == ps.executeUpdate();\n		} catch (SQLException e) {\n			if (1062 == e.getErrorCode())\n				throw new iTrustException(\"HCP \" + hcpID + \" has already been declared for patient \" + pid);\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(842,'	public boolean undeclareHCP(long pid, long hcpID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"DELETE FROM DeclaredHCP WHERE PatientID=? AND HCPID=?\");\n			ps.setLong(1, pid);\n			ps.setLong(2, hcpID);\n			return 1 == ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(843,'	public String getUserName(String inputMID) throws iTrustException {\n		try {\n			long mid = Long.valueOf(inputMID);\n			return factory.getAuthDAO().getUserName(mid);\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"MID not in correct form\");\n		}\n	}\n'),(845,'	public List<DiagnosisBean> getDiagnoses(long pid) throws iTrustException {\n		return patientDAO.getDiagnoses(pid);\n	}\n'),(846,'	public List<ProcedureBean> getProcedures(long pid) throws iTrustException {\n		return patientDAO.getProcedures(pid);\n	}\n'),(847,'	public List<PrescriptionBean> getPrescriptions(long pid) throws iTrustException {\n		return patientDAO.getCurrentPrescriptions(pid);\n	}\n'),(848,'	public List<PersonnelBean> getDeclaredHCPs(long pid) throws iTrustException {\n		return patientDAO.getDeclaredHCPs(pid);\n	}\n'),(849,'	public PersonnelBean getPersonnel(long mid) throws iTrustException {\n		return personnelDAO.getPersonnel(mid);\n	}\n'),(850,'	public PatientBean getPatient(long mid) throws iTrustException {\n		return patientDAO.getPatient(mid);\n	}\n'),(852,'	public List<ReportRequestBean> getAllReportRequestsForRequester() throws iTrustException {\n		return reportRequestDAO.getAllReportRequestsForRequester(loggedInMID);\n	}\n'),(853,'	public List<ReportRequestBean> getAllReportRequestsForRequester(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (mid == 0L) throw new SQLException(\"RequesterMID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM ReportRequests WHERE RequesterMID = ?\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			return loader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(854,'	public long addReportRequest(long patientMID) throws iTrustException {\n		long id = reportRequestDAO\n				.addReportRequest(loggedInMID, patientMID, Calendar.getInstance().getTime());\n		return id;\n	}\n'),(855,'	public long addReportRequest(long requesterMID, long patientMID, Date date) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (requesterMID == 0L) throw new SQLException(\"RequesterMID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO ReportRequests (ID, RequesterMID, PatientMID, RequestedDate, Status) VALUES (null,?,?,?,\'Requested\')\");\n			ps.setLong(1, requesterMID);\n			ps.setLong(2, patientMID);\n			ps.setTimestamp(3, new java.sql.Timestamp(date.getTime()));\n			ps.executeUpdate();\n			return DBUtil.getLastInsert(conn);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(856,'	public ReportRequestBean getReportRequest(int ID) throws iTrustException {\n		return reportRequestDAO.getReportRequest(ID);\n	}\n'),(857,'	public ReportRequestBean getReportRequest(long id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (id == 0L) throw new SQLException(\"ID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM ReportRequests WHERE ID = ?\");\n			ps.setLong(1, id);\n			ResultSet rs = ps.executeQuery();\n			rs.next();\n			return loader.loadSingle(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(858,'	public void setViewed(int ID) throws iTrustException {\n		reportRequestDAO.setViewed(ID, Calendar.getInstance().getTime());\n	}\n'),(859,'	public void setViewed(long ID, Date date) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (ID == 0L) throw new SQLException(\"ID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE ReportRequests set ViewedDate = ?, Status = \'Viewed\' where ID = ?\");\n			ps.setTimestamp(1, new java.sql.Timestamp(date.getTime()));\n			ps.setLong(2, ID);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(860,'	public String getLongStatus(long id) throws iTrustException {\n		StringBuilder s = new StringBuilder();\n		ReportRequestBean r = reportRequestDAO.getReportRequest(id);\n		if (r.getStatus().equals(ReportRequestBean.Requested)) {\n			PersonnelBean p = personnelDAO.getPersonnel(r.getRequesterMID());\n			s.append(String.format(\"Request was requested on %s by %s\", r.getRequestedDateString(), p\n					.getFullName()));\n		}\n		if (r.getStatus().equals(ReportRequestBean.Viewed)) {\n			PersonnelBean p = personnelDAO.getPersonnel(r.getRequesterMID());\n			String fullName = \"Unknown\";\n			if(p != null){\n				fullName = p.getFullName();\n				s.append(String.format(\"Request was requested on %s by %s, \", r.getRequestedDateString(), p\n					.getFullName()));\n			}\n			s.append(\"\");// removed \"<br />\" because it caused unit test to fail and seems to have no\n			s.append(String.format(\"and viewed on %s by %s\", r.getViewedDateString(), fullName));\n		}\n		return s.toString();\n	}\n'),(861,'	public String getStatus() {\n		return status;\n	}\n'),(862,'	public long getRequesterMID() {\n		return requesterMID;\n	}\n'),(863,'	public String getRequestedDateString() {\n		if (requestedDate == null)\n			return \"\"; //$NON-NLS-1$\n		return new SimpleDateFormat(dateFormat).format(requestedDate);\n	}\n'),(864,'	public String getViewedDateString() {\n		if (viewedDate == null)\n			return \"\"; //$NON-NLS-1$\n		return new SimpleDateFormat(dateFormat).format(viewedDate);\n	}\n'),(866,'	public long getNumPatients() {\n		return numPatients;\n	}\n'),(869,'	public List<DiagnosisBean> getDiagnoses() throws DBException {\n		return patientDAO.getDiagnoses(loggedInMID);\n	}\n'),(870,'	public List<HCPDiagnosisBean> getHCPByDiagnosis(String icdcode) throws DBException {\n		int medMatch = 0;\n		HashMap<Long, HCPDiagnosisBean> hcpHash = new HashMap<Long, HCPDiagnosisBean>();\n		HashMap<Long, Long> patientHash = new HashMap<Long, Long>();\n		HCPDiagnosisBean diag = null;\n		List<OfficeVisitBean> beans = officeVisitDAO.getAllOfficeVisitsForDiagnosis(icdcode);\n		for (OfficeVisitBean bean: beans) {\n			if (!patientDAO.getPatient(loggedInMID).getZip1().substring(0, 2).\n					equals(personnelDAO.getPersonnel(bean.getHcpID()).getZip1().substring(0, 2)))\n				continue;\n			if (hcpHash.containsKey(bean.getHcpID())) {\n				diag = hcpHash.get(bean.getHcpID());\n				List<PrescriptionBean> prescriptions = prescriptionsDAO.getList(bean.getID());\n				for (PrescriptionBean p: prescriptions) {\n					List<MedicationBean> mlist = diag.getMedList();\n					for (MedicationBean b: mlist) {\n						if (p.getMedication().getDescription().equals(b.getDescription()))\n							medMatch++;\n					}\n					if (medMatch == 0) {\n						mlist.add(p.getMedication());\n						diag.setMedList(mlist);\n					}\n					else {\n						medMatch = 0;\n					}\n				}\n				List<LabProcedureBean> labprocs = diag.getLabList(); \n				List<LabProcedureBean> lpbeans = labprocDAO.getAllLabProceduresForDocOV(bean.getVisitID());\n				for (LabProcedureBean p: lpbeans) {\n					labprocs.add(p);\n				}\n				diag.setLabList(labprocs);\n				if (surveyDAO.isSurveyCompleted(bean.getVisitID())) {\n					SurveyBean survey = surveyDAO.getSurveyData(bean.getVisitID());\n					diag.setVisitSat(survey.getVisitSatisfaction());\n					diag.setTreatmentSat(survey.getTreatmentSatisfaction());\n				}\n				if (!patientHash.containsKey(bean.getPatientID())) {\n					patientHash.put(bean.getPatientID(), bean.getHcpID());\n					diag.incNumPatients();\n				}\n			}\n			else {\n				diag = new HCPDiagnosisBean();\n				List<MedicationBean> mlist = new ArrayList<MedicationBean>();\n				diag.setHCP(bean.getHcpID());\n				try {\n					diag.setHCPName(personnelDAO.getName(bean.getHcpID()));\n				} catch (iTrustException e) {\n					diag.setHCPName(\"null\");\n				}\n				diag.incNumPatients();\n				List<PrescriptionBean> prescriptions = prescriptionsDAO.getList(bean.getID());\n				for (PrescriptionBean p: prescriptions) {\n					mlist.add(p.getMedication());\n				}\n				diag.setMedList(mlist);\n				diag.setLabList(labprocDAO.getAllLabProceduresForDocOV(bean.getVisitID()));\n				if (surveyDAO.isSurveyCompleted(bean.getVisitID())) {\n					SurveyBean survey = surveyDAO.getSurveyData(bean.getVisitID());\n					diag.setVisitSat(survey.getVisitSatisfaction());\n					diag.setTreatmentSat(survey.getTreatmentSatisfaction());\n				}\n				patientHash.put(bean.getPatientID(), bean.getHcpID());\n				hcpHash.put(bean.getHcpID(), diag);\n			}\n		}\n		List<HCPDiagnosisBean> list = new ArrayList<HCPDiagnosisBean>(hcpHash.values());\n		Collections.sort(list, new HCPDiagnosisBeanComparator() );\n		return list;\n	}\n'),(871,'	public List<OfficeVisitBean> getAllOfficeVisitsForDiagnosis(String icdcode) throws DBException {\n		List<DiagnosisBean> diags = null;\n		List<OfficeVisitBean> ovs = new ArrayList<OfficeVisitBean>();\n		Connection conn = null;\n		PreparedStatement ps = null;\n		ResultSet rs= null;\n		try {\n			if (icdcode == null) \n				throw new SQLException(\"icdcode cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM ovdiagnosis ovd, icdcodes icd WHERE ovd.ICDCode=? and icd.Code=?\");\n			ps.setString(1, icdcode);\n			ps.setString(2, icdcode);\n			rs = ps.executeQuery();\n			diags = diagnosisLoader.loadList(rs);\n			rs.close();\n			ps.close();\n			ps = null;\n			rs = null;\n			for (DiagnosisBean bean: diags) {\n				ps = conn.prepareStatement(\"SELECT * FROM officevisits ov WHERE ov.ID=?\");\n				ps.setInt(1, (int)bean.getVisitID());\n				rs = ps.executeQuery();\n				if (rs.next()) {\n					ovs.add(loadFullOfficeVist(rs, bean.getVisitID()));\n				}\n				rs.close();\n				ps.close();\n			}\n			return ovs;\n		}\n		catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(872,'	public String getZip1() {\n		return zip1;\n	}\n'),(873,'	public String getZip1() {\n		return zip1;\n	}\n'),(874,'	public List<MedicationBean> getMedList() {\n		return medList;\n	}\n'),(876,'	public List<LabProcedureBean> getLabList() {\n		return labList;\n	}\n'),(877,'	public long getVisitID() {\n		return visitID;\n	}\n'),(878,'	public List<LabProcedureBean> getAllLabProceduresForDocOV(long ovid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure WHERE OfficeVisitID = ? \");\n			ps.setLong(1, ovid);\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(880,'	public SurveyBean getSurveyData(long id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM OVSurvey WHERE VisitID = ?\");\n			ps.setLong(1, id);\n			ResultSet rs = ps.executeQuery();\n			rs.next();\n			return surveyLoader.loadSingle(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(881,'	public int getVisitSatisfaction() {\n		return visitSatisfaction;\n	}\n'),(882,'	public void setVisitSat(int sat) {\n		visitSat += sat;\n		surveyCount++;\n	}\n'),(883,'	public int getTreatmentSatisfaction() {\n		return treatmentSatisfaction;\n	}\n'),(884,'	public void setTreatmentSat(int sat) {\n		treatmentSat += sat;\n	}\n'),(885,'	public void incNumPatients() {\n		numPatients++;\n	}\n'),(887,'	public void setHCP(long hcp) {\n		HCPID = hcp;\n	}\n'),(888,'	public void setHCPName(String name) {\n		HCPname = name;\n	}\n'),(890,'	public List<PrescriptionBean> getPrescriptionsByHCPAndICD(long hcpid, String icdcode) throws DBException {\n		List<PrescriptionBean> list = new ArrayList<PrescriptionBean>();\n		List<OfficeVisitBean> ovs = officeVisitDAO.getAllOfficeVisitsForDiagnosis(icdcode);\n		for (int i = 0; i < ovs.size(); i++) {\n			if (ovs.get(i).getHcpID() == hcpid) {\n				long ovid = ovs.get(i).getID();\n				List<PrescriptionBean> prescriptions = prescriptionsDAO.getList(ovid);\n				list.addAll(prescriptions);\n			}\n		}\n		return list;\n	}\n'),(892,'	public ApptBean getAppt(int apptID) {\n		try {\n			List<ApptBean> apptBeans = apptDAO.getAppt(apptID);\n			if (apptBeans.size() == 1)\n				return apptBeans.get(0);\n		} catch (SQLException e) {\n			e.printStackTrace();\n		}\n		return null;\n	}\n'),(893,'	public List<ApptBean> getAppt(int apptID) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		conn = factory.getConnection();\n		ps = conn.prepareStatement(\"SELECT * FROM appointment WHERE appt_id=?\");\n		ps.setInt(1, apptID);\n		ResultSet rs = ps.executeQuery();\n		List<ApptBean> abList = this.abloader.loadList(rs);\n		DBUtil.closeConnection(conn, ps);\n		return abList;\n	}\n'),(894,'	public String editAppt(ApptBean appt) throws FormValidationException {\n		validator.validate(appt);\n		if(appt.getDate().before(new Timestamp(System.currentTimeMillis())))\n			return \"The scheduled date of this appointment (\"+appt.getDate()+\") has already passed.\";\n		try {\n			apptDAO.editAppt(appt);\n			return \"Success: Appointment changed\";\n		} catch (SQLException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		} \n	}\n'),(895,'	public void editAppt(ApptBean appt) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		conn = factory.getConnection();\n		ps = conn.prepareStatement(\n				\"UPDATE appointment SET appt_type=?, sched_date=?, comment=? WHERE appt_id=?\");\n		ps.setString(1, appt.getApptType());\n		ps.setTimestamp(2, appt.getDate());\n		ps.setString(3, appt.getComment());\n		ps.setInt(4, appt.getApptID());\n		ps.executeUpdate();\n		DBUtil.closeConnection(conn,ps);\n	}\n'),(896,'	public String removeAppt(ApptBean appt) {\n		try {\n			apptDAO.removeAppt(appt);\n			return \"Success: Appointment removed\";\n		} catch (SQLException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		}\n	}\n'),(897,'	public void removeAppt(ApptBean appt) throws SQLException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		conn = factory.getConnection();\n		ps = conn.prepareStatement(\n				\"DELETE FROM appointment WHERE appt_id=?\");\n		ps.setInt(1, appt.getApptID());\n		ps.executeUpdate();\n		DBUtil.closeConnection(conn,ps);\n	}\n'),(898,'	public String getName(long mid) throws iTrustException {\n		if(mid < 7000000000L)\n			return patientDAO.getName(mid);\n		else\n			return personnelDAO.getName(mid);\n	}\n'),(901,'	public List<LabProcedureBean> getLabProcedures() throws DBException {\n		if (isUnsaved()) {\n			return new ArrayList<LabProcedureBean>();\n		} else {\n			return labProcedureDAO.getAllLabProceduresForDocOV(getOvID());\n		}\n	}\n'),(904,'	public LabProcedureBean getLabProcedure(long id) throws iTrustException {\n		verifySaved();\n		return labProcedureDAO.getLabProcedure(id);\n	}\n'),(906,'	public void addLabProcedure(LabProcedureBean bean) throws iTrustException {\n		verifySaved();\n		if (\"\".equals(bean.getStatus())) {\n			bean.setStatus(LabProcedureBean.In_Transit);\n		}\n		labProcedureDAO.addLabProcedure(bean);\n	}\n'),(907,'	public void setStatus(String status) {\n		this.status = status;\n	}\n'),(908,'	public long addLabProcedure(LabProcedureBean b) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (b.getPid() == 0L) throw new SQLException(\"PatientMID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\n					\"INSERT INTO LabProcedure \" +\n					\"(PatientMID, LaboratoryProcedureCode, Status, Commentary, \" + \n					 \"Results, OfficeVisitID, Rights, LabTechID, PriorityCode, \" + \n					 \"NumericalResults, LowerBound, UpperBound) \" + \n					\"VALUES (?,?,?,?,?,?,?,?,?,?,?,?)\");\n			ps.setLong(1, b.getPid());\n			ps.setString(2, b.getLoinc());\n			ps.setString(3, b.getStatus());\n			ps.setString(4, b.getCommentary());\n			ps.setString(5, b.getResults());\n			ps.setLong(6, b.getOvID());\n			ps.setString(7, b.getRights());\n			ps.setLong(8, b.getLTID());\n			ps.setInt(9, b.getPriorityCode());\n			ps.setString(10, b.getNumericalResult());\n			ps.setString(11, b.getLowerBound());\n			ps.setString(12, b.getUpperBound());\n			ps.executeUpdate();\n			return DBUtil.getLastInsert(conn);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(909,'	public LabProcedureBean autoAssignLabTech(LabProcedureBean bean) throws iTrustException {\n		verifySaved();\n		List<PersonnelBean> techs = personnelDAO.getLabTechs();\n		if (!techs.isEmpty()) {\n			bean.setLTID(techs.get(0).getMID());\n		} else {\n			bean.setLTID(0);\n		}\n		return bean;\n	}\n'),(910,'	public List<PersonnelBean> getLabTechs() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM personnel WHERE role = \'lt\' \");\n			ResultSet rs = ps.executeQuery();\n			return personnelLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(911,'	public void setLTID(long LTID) {\n		this.LTID = LTID;\n	}\n'),(912,'	public void editLabProcedure(LabProcedureBean bean) throws iTrustException {\n		verifySaved();\n		labProcedureDAO.updateLabProcedure(bean);\n	}\n'),(913,'	public void deleteLabProcedure(LabProcedureBean bean) throws iTrustException {\n		verifySaved();\n		labProcedureDAO.removeLabProcedure(bean.getProcedureID());\n	}\n'),(914,'	public void removeLabProcedure(long procedureID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"DELETE FROM labprocedure WHERE LaboratoryProcedureID=? \");\n			ps.setLong(1, procedureID);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(915,'	public List<PersonnelBean> getLabTechs() throws iTrustException {\n		return personnelDAO.getLabTechs();\n	}\n'),(916,'	public String getLabTechName(long mid) throws iTrustException {\n		try {\n			return personnelDAO.getName(mid);\n		} catch (iTrustException e) {\n			return \"\";\n		}\n	}\n'),(917,'	public int getLabTechQueueSize(long mid) throws iTrustException {\n		return labProcedureDAO.getLabTechQueueSize(mid);\n	}\n'),(918,'	public int getLabTechQueueSize(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (mid == 0L) throw new SQLException(\"LabTechID cannot be null\");\n			conn = factory.getConnection();\n			int count = 0;\n			ps = conn.prepareStatement(\"SELECT COUNT(*) FROM LabProcedure WHERE LabTechID = ? AND (Status = ? OR Status = ?)\");\n			ps.setLong(1, mid);\n			ps.setString(2, LabProcedureBean.In_Transit);\n			ps.setString(3, LabProcedureBean.Received);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next()) {\n				count = rs.getInt(1);\n			}\n			return count;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(919,'	public int[] getLabTechQueueSizeByPriority(long mid) throws iTrustException {\n		return labProcedureDAO.getLabTechQueueSizeByPriority(mid);\n	}\n'),(920,'	public int[] getLabTechQueueSizeByPriority(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		int[] sizes = new int[4];\n		try {\n			if (mid == 0L) throw new SQLException(\"LabTechID cannot be null\");\n			conn = factory.getConnection();\n			for(int i=1; i<=3; i++) {\n				int count = 0;\n				ps = conn.prepareStatement(\"SELECT COUNT(*) FROM LabProcedure WHERE LabTechID = ? AND (Status = ? OR Status = ?) AND PriorityCode = ?\");\n				ps.setLong(1, mid);\n				ps.setString(2, LabProcedureBean.In_Transit);\n				ps.setString(3, LabProcedureBean.Received);\n				ps.setInt(4, i);\n				ResultSet rs = ps.executeQuery();\n				if (rs.next()) {\n					count = rs.getInt(1);\n				}\n				sizes[i] = count;\n			}\n			return sizes;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(921,'	public List<LOINCbean> getLabProcedureCodes() throws DBException {\n		return loincDAO.getAllLOINC();\n	}\n'),(923,'	public List<VerboseReferralBean> getReferrals(String field, SortDirection dir) throws DBException {\n		return referralDAO.getPatientQuery(patientID).query(field, dir);\n	}\n'),(924,'	public ReferralListQuery getPatientQuery(long pid) {\n		return new PatientReferralListQuery(this.factory, pid);\n	}\n'),(925,'	public int getReferralsForPatientUnread() throws DBException {\n		return referralDAO.getReferralsForPatientUnread(patientID).size();\n	}\n'),(926,'	public List<ReferralBean> getReferralsForPatientUnread(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM referrals WHERE PatientID = ? AND viewed_by_patient = false\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			return referralLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(927,'	public ReferralBean getReferralByID(int id) throws DBException {\n		return referralDAO.getReferral(id);\n	}\n'),(928,'	public boolean updateReferral(ReferralBean bean) throws DBException {\n		referralDAO.editReferral(bean);\n		return true;\n	}\n'),(929,'	public boolean setReferralMessage(long messageID, long referralID) throws DBException {\n		referralDAO.setReferralMessage(messageID, referralID);\n		return true;\n	}\n'),(930,'	public boolean setReferralMessage(long messageID, long referralID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO ReferralMessage (messageID,referralID) VALUES (?,?) \");\n			ps.setLong(1, messageID);\n			ps.setLong(2, referralID);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n		return true;\n	}\n'),(931,'	public OfficeVisitBean getOVDate(long id) throws DBException {\n		return ovDAO.getOfficeVisit(id);\n	}\n'),(934,'	public String getPatientName() throws DBException, iTrustException {\n		return authDAO.getUserName(pid);\n	}\n'),(935,'	public String addHealthRecord(long pid, HealthRecordForm hr) throws FormValidationException,\n			iTrustException {\n		validator.validate(hr);\n		HealthRecord record = transferForm(pid, hr);\n		hrDAO.add(record);\n		return \"Information Recorded\";\n	}\n'),(936,'	public void validate(HealthRecordForm bean) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkInt(\"Systolic blood pressure\", bean.getBloodPressureN(), 0, 999, false));\n		errorList.addIfNotNull(checkInt(\"Diastolic blood pressure\", bean.getBloodPressureD(), 0, 999, false));\n		errorList.addIfNotNull(checkInt(\"Cholesterol HDL\", bean.getCholesterolHDL(), 0, 89, false));\n		errorList.addIfNotNull(checkInt(\"Cholesterol LDL\", bean.getCholesterolLDL(), 0, 600, false));\n		errorList.addIfNotNull(checkInt(\"Cholesterol Triglycerides\", bean.getCholesterolTri(), 100, 600,\n				false));\n		errorList.addIfNotNull(checkFormat(\"Height\", bean.getHeight(), ValidationFormat.Height, false));\n		errorList.addIfNotNull(checkFormat(\"Weight\", bean.getWeight(), ValidationFormat.Weight, false));\n		errorList.addIfNotNull(checkInt(\"Smoker\", bean.getIsSmoker(), 0, 10, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(937,'	private HealthRecord transferForm(long pid, HealthRecordForm form) throws FormValidationException {\n		HealthRecord record = new HealthRecord();\n		record.setPatientID(pid);\n		record.setPersonnelID(loggedInMID);\n		record.setBloodPressureD(Integer.valueOf(form.getBloodPressureD()));\n		record.setBloodPressureN(Integer.valueOf(form.getBloodPressureN()));\n		record.setCholesterolHDL(Integer.valueOf(form.getCholesterolHDL()));\n		record.setCholesterolLDL(Integer.valueOf(form.getCholesterolLDL()));\n		record.setCholesterolTri(Integer.valueOf(form.getCholesterolTri()));\n		if (record.getTotalCholesterol() < 100 || record.getTotalCholesterol() > 600)\n			throw new FormValidationException(\"Total cholesterol must be in [100,600]\");\n		record.setHeight(Double.valueOf(form.getHeight()));\n		record.setWeight(Double.valueOf(form.getWeight()));\n		record.setSmoker(Integer.valueOf(form.getIsSmoker()));\n		return record;\n	}\n'),(938,'	public boolean add(HealthRecord record) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO PersonalHealthInformation(PatientID,Height,Weight,\"\n					+ \"Smoker,SmokingStatus,BloodPressureN,BloodPressureD,CholesterolHDL,CholesterolLDL,CholesterolTri,\"\n					+ \"HCPID) VALUES(?,?,?,?,?,?,?,?,?,?,?)\");\n			loader.loadParameters(ps, record);\n			int numInserted = ps.executeUpdate();\n			return (numInserted == 1);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(940,'	public void setPatientID(long patientID) {\n		this.patientID = patientID;\n	}\n'),(941,'	public void setPersonnelID(long personnelID) {\n		this.personnelID = personnelID;\n	}\n'),(942,'	public String getBloodPressureD() {\n		return bloodPressureD;\n	}\n'),(943,'	public void setBloodPressureD(int bloodPressureD) {\n		this.bloodPressureD = bloodPressureD;\n	}\n'),(944,'	public String getBloodPressureN() {\n		return bloodPressureN;\n	}\n'),(945,'	public void setBloodPressureN(int bloodPressureN) {\n		this.bloodPressureN = bloodPressureN;\n	}\n'),(946,'	public String getCholesterolHDL() {\n		return cholesterolHDL;\n	}\n'),(947,'	public void setCholesterolHDL(int cholesterolHDL) {\n		this.cholesterolHDL = cholesterolHDL;\n	}\n'),(948,'	public String getCholesterolLDL() {\n		return cholesterolLDL;\n	}\n'),(949,'	public void setCholesterolLDL(int cholesterolLDL) {\n		this.cholesterolLDL = cholesterolLDL;\n	}\n'),(950,'	public String getCholesterolTri() {\n		return cholesterolTri;\n	}\n'),(951,'	public void setCholesterolTri(int cholesterolTri) {\n		this.cholesterolTri = cholesterolTri;\n	}\n'),(952,'	public int getTotalCholesterol() {\n		return getCholesterolHDL() + getCholesterolLDL() + getCholesterolTri();\n	}\n'),(953,'	public String getHeight() {\n		return height;\n	}\n'),(954,'	public void setHeight(double height) {\n		this.height = height;\n	}\n'),(955,'	public String getWeight() {\n		return weight;\n	}\n'),(956,'	public void setWeight(double weight) {\n		this.weight = weight;\n	}\n'),(957,'	public String getIsSmoker() {\n		return isSmoker;\n	}\n'),(958,'	public void setSmoker(int smoker) {\n		this.smokingStatus = smoker;\n		switch (smoker) {\n			case 1: this.isSmoker = true;\n			this.smokingStatusDesc = \"Current every day smoker\"; break;\n			case 2: this.isSmoker = true;\n			this.smokingStatusDesc = \"Current some day smoker\"; break;\n			case 3: this.isSmoker = false;\n			this.smokingStatusDesc = \"Former smoker\"; break;\n			case 4: this.isSmoker = false;\n			this.smokingStatusDesc = \"Never smoker\"; break;\n			case 5: this.isSmoker = true;\n			this.smokingStatusDesc = \"Smoker, current status unknown\"; break;\n			case 9: this.isSmoker = false;\n			this.smokingStatusDesc = \"Unknown if ever smoked\"; break;\n		}\n	}\n'),(959,'	public List<HealthRecord> getAllHealthRecords(long pid) throws iTrustException {\n		return hrDAO.getAllHealthRecords(pid);\n	}\n'),(961,'	public boolean[] getConflicts() throws SQLException {\n		boolean conflicts[] = new boolean[send.size()];\n		for(int i=0; i<send.size(); i++) {\n			ApptBean ab = send.get(i);\n			long t = ab.getDate().getTime();\n			long m = types.getDurationByType(ab.getApptType()) * 60L * 1000L;\n			Timestamp time = new Timestamp(t+m);\n			for(int j=i+1; j<send.size(); j++) {\n				if(send.get(j).getDate().before(time)) {\n					conflicts[i] = true;\n					conflicts[j] = true;\n				}\n			}\n		}\n		return conflicts;\n	}\n'),(962,'	public Hashtable<Integer, ArrayList<ApptBean>> getApptsTable(int thisMonth, int thisYear) throws SQLException {\n		List<ApptBean> appts = a_action.getMyAppointments();\n		Hashtable<Integer, ArrayList<ApptBean>> atable = new Hashtable<Integer, ArrayList<ApptBean>>();\n		Calendar a = Calendar.getInstance();\n		for(ApptBean b : appts) {\n			a.setTimeInMillis(b.getDate().getTime());\n			if(a.get(Calendar.MONTH) == thisMonth && a.get(Calendar.YEAR) == thisYear) {\n				if(!atable.containsKey(a.get(Calendar.DAY_OF_MONTH)))\n					atable.put(a.get(Calendar.DAY_OF_MONTH), new ArrayList<ApptBean>());\n				ArrayList<ApptBean> l = atable.get(a.get(Calendar.DAY_OF_MONTH));\n				l.add(b);\n				send.add(b);\n				atable.put(a.get(Calendar.DAY_OF_MONTH), l);\n			}\n		}\n		return atable;\n	}\n'),(963,'	public Hashtable<Integer, ArrayList<OfficeVisitBean>> getOfficeVisitsTable(int thisMonth, int thisYear) throws iTrustException {\n		List<OfficeVisitBean> officeVisits = r_action.getAllOfficeVisits();\n		Hashtable<Integer, ArrayList<OfficeVisitBean>> rtable = new Hashtable<Integer, ArrayList<OfficeVisitBean>>();\n		Calendar a = Calendar.getInstance();\n		for(OfficeVisitBean b : officeVisits) {\n			a.setTimeInMillis(b.getVisitDate().getTime());\n			if(a.get(Calendar.MONTH) == thisMonth && a.get(Calendar.YEAR) == thisYear) {\n				if(!rtable.containsKey(a.get(Calendar.DAY_OF_MONTH)))\n					rtable.put(a.get(Calendar.DAY_OF_MONTH), new ArrayList<OfficeVisitBean>());\n				ArrayList<OfficeVisitBean> l = rtable.get(a.get(Calendar.DAY_OF_MONTH));\n				l.add(b);\n				rtable.put(a.get(Calendar.DAY_OF_MONTH), l);\n			}\n		}\n		return rtable;\n	}\n'),(964,'	public Hashtable<Integer, ArrayList<LabProcedureBean>> getLabProceduresTable(int thisMonth, int thisYear) throws iTrustException {\n		List<LabProcedureBean> procs = r_action.getLabs();\n		Hashtable<Integer, ArrayList<LabProcedureBean>> ptable = new Hashtable<Integer, ArrayList<LabProcedureBean>>();\n		Calendar a = Calendar.getInstance();\n		for(LabProcedureBean b : procs) {\n			a.setTimeInMillis(b.getTimestamp().getTime());\n			if(a.get(Calendar.MONTH) == thisMonth && a.get(Calendar.YEAR) == thisYear) {\n				if(!ptable.containsKey(a.get(Calendar.DAY_OF_MONTH)))\n					ptable.put(a.get(Calendar.DAY_OF_MONTH), new ArrayList<LabProcedureBean>());\n				ArrayList<LabProcedureBean> l = ptable.get(a.get(Calendar.DAY_OF_MONTH));\n				l.add(b);\n				ptable.put(a.get(Calendar.DAY_OF_MONTH), l);\n			}\n		}\n		return ptable;\n	}\n'),(965,'	public Timestamp getTimestamp() {\n		return timestamp;\n	}\n'),(969,'	private void checkRepresented(long loggedInMID, String repPIDString) throws iTrustException {\n		try {\n			long repee = Long.valueOf(repPIDString);\n			if (!patientDAO.represents(loggedInMID, repee))\n				throw new iTrustException(\n						Messages.getString(\"ViewOfficeVisitAction.0\")); //$NON-NLS-1$\n		} catch (NumberFormatException e) {\n			throw new iTrustException(Messages.getString(\"ViewOfficeVisitAction.1\")); //$NON-NLS-1$\n		}\n	}\n'),(970,'	public OfficeVisitBean getOfficeVisit() throws iTrustException {\n		return ovDAO.getOfficeVisit(ovID);\n	}\n'),(971,'	public List<PrescriptionBean> getPrescriptions() throws DBException {\n		return prescriptionsDAO.getList(ovID);\n	}\n'),(972,'	public List<ProcedureBean> getAllProcedures() throws DBException {\n		return proceduresDAO.getList(ovID);\n	}\n'),(973,'	public List<ProcedureBean> getProcedures() throws DBException {\n		return proceduresDAO.getMedProceduresList(ovID);\n	}\n'),(974,'	public List<ProcedureBean> getImmunizations() throws DBException {\n		return proceduresDAO.getImmunizationList(ovID);\n	}\n'),(975,'	public List<DiagnosisBean> getDiagnoses() throws DBException {\n		return diagnosesDAO.getList(ovID);\n	}\n'),(976,'	public List<LabProcedureBean> getLabProcedures() throws DBException {\n		return labProceduresDAO.getLabProceduresForPatientOV(ovID);\n	}\n'),(977,'	public List<LabProcedureBean> getLabProceduresForPatientOV(long ovid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure WHERE OfficeVisitID = ? AND Rights = ? ORDER BY UpdatedDate DESC\");\n			ps.setLong(1, ovid);\n			ps.setString(2, LabProcedureBean.Allow);\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(979,'	public String getHCPName(long hcpID) throws iTrustException {\n		String name = null;\n		try {\n			name = personnelDAO.getName(hcpID);\n		} catch (iTrustException e) {\n			e.printStackTrace();\n			name = e.getMessage();\n		}\n		return name;\n	}\n'),(986,'	private void reinitializeSubActions() throws iTrustException {\n		if (isUnsaved()) {\n			throw new iTrustException(\"Cannot initalize EditOfficeVisit sub actions.  No ovID is present.\");\n		}\n		DAOFactory factory = getFactory();\n		String pidString = \"\"+getPid();\n		String ovIDString = \"\"+getOvID();\n		prescriptionsAction = new EditPrescriptionsAction(factory, loggedInMID, pidString, ovIDString);\n		proceduresAction = new EditProceduresAction(factory, loggedInMID, pidString, ovIDString);\n		immunizationsAction = new EditImmunizationsAction(factory, loggedInMID, pidString, ovIDString);\n		diagnosesAction = new EditDiagnosesAction(factory, loggedInMID, pidString, ovIDString);\n		labProceduresAction = new EditLabProceduresAction(factory, loggedInMID, pidString, ovIDString);\n		patientInstructionsAction = new EditPatientInstructionsAction(factory, loggedInMID, pidString, ovIDString);\n		referralsAction = new EditReferralsAction(factory, loggedInMID, pidString, ovIDString);\n	}\n'),(991,'	public OfficeVisitBean getOfficeVisit() throws iTrustException {\n		return getBean();\n	}\n'),(992,'	private OfficeVisitBean getBean() throws DBException {\n		if (isUnsaved()) {\n			OfficeVisitBean b = new OfficeVisitBean();\n			b.setHcpID(getHcpid());\n			b.setPatientID(getPid());\n			return b;\n		} else {\n			return ovDAO.getOfficeVisit(ovID);\n		}\n	}\n'),(993,'	public List<HospitalBean> getHospitals() throws iTrustException {\n		List<HospitalBean> hcpsHospitals = personnelDAO.getHospitals(getHcpid());\n		List<HospitalBean> allHospitals = hospitalDAO.getAllHospitals();\n		return combineLists(hcpsHospitals, allHospitals);\n	}\n'),(996,'	public String updateInformation(EditOfficeVisitForm form) throws FormValidationException {\n		String confirm = \"\";\n		try {\n			updateOv(form);\n			confirm = \"success\";\n			return confirm;\n		} catch (iTrustException e) {\n			e.printStackTrace();\n			return e.getMessage();\n		}\n	}\n'),(997,'	private void updateOv(EditOfficeVisitForm form) throws DBException, FormValidationException, iTrustException {\n		validator.validate(form);\n		OfficeVisitBean ov = getBean();\n		ov.setNotes(form.getNotes());\n		ov.setVisitDateStr(form.getVisitDate());\n		ov.setHcpID(Long.valueOf(form.getHcpID()));\n		ov.setPatientID(Long.valueOf(form.getPatientID()));\n		ov.setHospitalID(form.getHospitalID());\n		updateBean(ov);\n	}\n'),(998,'	public void logOfficeVisitEvent(TransactionType trans) throws DBException {\n		loggingAction.logEvent(trans, loggedInMID, getPid(), \"Office visit ID: \" + getOvID());\n	}\n'),(999,'	public Email makeEmailApp(long hcpID, String patID, String problem) throws DBException, iTrustException {\n		PatientBean p = patDAO.getPatient(Long.parseLong(patID));\n		String hcpName = personnelDAO.getName(hcpID);\n		Email email = new Email();\n		email.setFrom(\"no-reply@itrust.com\");\n		email.setToList(Arrays.asList(p.getEmail()));\n		email.setSubject(\"HCP has prescribed you a potentially dangerous medication\");\n		email.setBody(String\n				.format(\n					\"%s has prescribed a medication that you are allergic to or that has a known interaction with a drug you are currently taking. %s\",\n					hcpName, problem));\n		return email;\n	}\n'),(1000,'	public void validate(EditOfficeVisitForm form) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"HCP ID\", form.getHcpID(), ValidationFormat.MID, false));\n		errorList.addIfNotNull(checkFormat(\"Hospital ID\", form.getHospitalID(), ValidationFormat.HOSPITAL_ID,\n				true));\n		errorList.addIfNotNull(checkFormat(\"Notes\", form.getNotes(), ValidationFormat.NOTES, true));\n		errorList.addIfNotNull(checkFormat(\"Patient ID\", form.getPatientID(), ValidationFormat.MID, false));\n		errorList.addIfNotNull(checkFormat(\"Visit Date\", form.getVisitDate(), ValidationFormat.DATE, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(1001,'	public String getNotes() {\n		return notes;\n	}\n'),(1002,'	public void setNotes(String notes) {\n		this.notes = notes;\n	}\n'),(1003,'	public String getVisitDate() {\n		return visitDate;\n	}\n'),(1004,'	public void setVisitDateStr(String visitDate) {\n		this.visitDateStr = visitDate;\n	}\n'),(1005,'	public String getHcpID() {\n		return hcpID;\n	}\n'),(1006,'	public String getPatientID() {\n		return patientID;\n	}\n'),(1007,'	public String getHospitalID() {\n		return hospitalID;\n	}\n'),(1008,'	public void setHospitalID(String hospitalID) {\n		this.hospitalID = hospitalID;\n	}\n'),(1009,'	private void updateBean(OfficeVisitBean bean) throws DBException, iTrustException {\n		if (isUnsaved()) {\n			ovID = ovDAO.add(bean);\n			reinitializeSubActions();\n		} else {\n			ovDAO.update(bean);\n		}\n	}\n'),(1010,'	public void update(OfficeVisitBean ov) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE OfficeVisits SET VisitDate=?, Notes=?, HCPID=?, \"\n					+ \"PatientID=?, HospitalID=? WHERE ID=?\");\n			setValues(ps, ov);\n			ps.setLong(6, ov.getID());\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1012,'	public long representPatient(String input) throws iTrustException {\n		try {\n			long reppeeMID = Long.valueOf(input);\n			if (patientDAO.represents(loggedInMID, reppeeMID)) {\n				loggedInMID = reppeeMID;\n				pid = reppeeMID;\n				isRepresenting = true;\n				return reppeeMID;\n			} else\n				throw new iTrustException(\"You do not represent patient \" + reppeeMID);\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"MID is not a number\");\n		}\n	}\n'),(1013,'	public List<OfficeVisitBean> getAllOfficeVisits() throws DBException {\n		return ovDAO.getAllOfficeVisits(pid);\n	}\n'),(1015,'	public static HashMap<String, String> convertMap(Map params) {\n		HashMap<String, String> myMap = new HashMap<String, String>();\n		for (Object key : params.keySet()) {\n			String[] value = ((String[]) params.get(key));\n			if (value != null)\n				myMap.put(key.toString(), value[0]);\n			else\n				myMap.put(key.toString(), null);\n		}\n		return myMap;\n	}\n'),(1017,'	public PatientBean getPatient() throws DBException {\n		return patientDAO.getPatient(pid);\n	}\n'),(1025,'	public List<OfficeVisitBean> getOfficeVisitsWithInstructions() throws DBException {\n		return instructionsDAO.getOfficeVisitsWithInstructions(getPid());\n	}\n'),(1027,'	public List<OfficeVisitBean> getOfficeVisitsWithInstructions(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			OfficeVisitLoader ovloader = new OfficeVisitLoader();\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\n					\"Select * From OfficeVisits Where \" +\n					\"OfficeVisits.ID in (Select VisitID From PatientSpecificInstructions) \" +\n					\"and OfficeVisits.PatientID = ?\");\n			ps.setLong(1, pid);\n			ResultSet rs = ps.executeQuery();\n			return ovloader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1028,'	public List<PatientInstructionsBean> getInstructionsForOfficeVisit(long ovid) throws DBException {\n		return instructionsDAO.getList(ovid);\n	}\n'),(1029,'	public List<PatientInstructionsBean> getList(long visitID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\n					\"Select * From PatientSpecificInstructions Where PatientSpecificInstructions.VisitID = ? \");\n			ps.setLong(1, visitID);\n			ResultSet rs = ps.executeQuery();\n			return loader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1030,'	public Map<Long, String> getHCPNameLookup() throws iTrustException {\n		HashMap<Long,String> map = new HashMap<Long,String>();\n		List<OfficeVisitBean> ovisits = ovDAO.getAllOfficeVisits(getPid());\n		for (OfficeVisitBean ovisit: ovisits) {\n			if (!map.containsKey(ovisit.getHcpID())) {\n				map.put(ovisit.getHcpID(), personnelDAO.getName(ovisit.getHcpID()));\n			}\n		}\n		return map;\n	}\n'),(1034,'	public void updateInformation(PersonnelBean personnelForm) throws iTrustException,\n			FormValidationException {\n		personnelForm.setMID(pid);\n		validator.validate(personnelForm);\n		personnelDAO.editPersonnel(personnelForm);\n	}\n'),(1035,'	public void validate(PersonnelBean p) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"First name\", p.getFirstName(), ValidationFormat.NAME, false));\n		errorList.addIfNotNull(checkFormat(\"Last name\", p.getLastName(), ValidationFormat.NAME, false));\n		errorList.addIfNotNull(checkFormat(\"Street Address 1\", p.getStreetAddress1(),\n				ValidationFormat.ADDRESS, false));\n		errorList.addIfNotNull(checkFormat(\"Street Address 2\", p.getStreetAddress2(),\n				ValidationFormat.ADDRESS, true));\n		errorList.addIfNotNull(checkFormat(\"City\", p.getCity(), ValidationFormat.CITY, false));\n		errorList.addIfNotNull(checkFormat(\"State\", p.getState(), ValidationFormat.STATE, false));\n		errorList.addIfNotNull(checkFormat(\"Zip Code\", p.getZip(), ValidationFormat.ZIPCODE, false));\n		errorList\n				.addIfNotNull(checkFormat(\"Phone Number\", p.getPhone(), ValidationFormat.PHONE_NUMBER, false));\n		errorList\n		.addIfNotNull(checkFormat(\"Email\", p.getEmail(), ValidationFormat.EMAIL, true));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(1036,'	public void editMessageFilter(String filter) throws iTrustException, FormValidationException {\n		PersonnelBean b = personnelDAO.getPersonnel(this.getPid());\n		b.setMessageFilter(filter);\n		this.updateInformation(b);\n	}\n'),(1038,'	public void setMessageFilter(String messageFilter) {\n		this.messageFilter = messageFilter;\n	}\n'),(1040,'	public List<PersonnelBean> searchForPersonnelWithName(String firstName, String lastName) {\n		try {	\n			if(\"\".equals(firstName))\n				firstName = \"%\";\n			if(\"\".equals(lastName))\n				lastName = \"%\";\n			return personnelDAO.searchForPersonnelWithName(firstName, lastName);\n		}\n		catch (DBException e) {\n			e.printStackTrace();\n			return null;\n		}\n	}\n'),(1041,'	public List<PersonnelBean> searchForPersonnelWithName(String first, String last) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		if (first.equals(\"%\") && last.equals(\"%\")) return new Vector<PersonnelBean>();\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM personnel WHERE firstName LIKE ? AND lastName LIKE ?\");\n			ps.setString(1, first);\n			ps.setString(2, last);\n			ResultSet rs = ps.executeQuery();\n			return personnelLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1042,'	public List<PatientBean> searchForPatientsWithName(String firstName, String lastName) {\n		try {	\n			if(\"\".equals(firstName))\n				firstName = \"%\";\n			if(\"\".equals(lastName))\n				lastName = \"%\";\n			return patientDAO.searchForPatientsWithName(firstName, lastName);\n		}\n		catch (DBException e) {\n			e.printStackTrace();\n			return null;\n		}\n	}\n'),(1043,'	public List<PatientBean> searchForPatientsWithName(String first, String last) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		if (first.equals(\"%\") && last.equals(\"%\")) return new Vector<PatientBean>();\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM patients WHERE firstName LIKE ? AND lastName LIKE ?\");\n			ps.setString(1, first);\n			ps.setString(2, last);\n			ResultSet rs = ps.executeQuery();\n			return patientLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1044,'	public PatientInstructionsDAO getPatientInstructionsDAO() {\n		return new PatientInstructionsDAO(this);\n	}\n'),(1045,'	public List<PatientInstructionsBean> getPatientInstructions() throws DBException {\n		if (isUnsaved()) {\n			return new ArrayList<PatientInstructionsBean>();\n		} else {\n			return instructionsDAO.getList(getOvID());\n		}\n	}\n'),(1048,'	public void addPatientInstructions(PatientInstructionsBean bean) throws iTrustException {\n		verifySaved();\n		instructionsDAO.add(bean);\n	}\n'),(1050,'	public long add(PatientInstructionsBean bean) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			String statement = \"INSERT INTO PatientSpecificInstructions \" +\n				\"(VisitID,Modified,Name,URL,Comment) VALUES (?,?,?,?,?)\";\n			ps = conn.prepareStatement(statement);\n			ps = loader.loadParameters(ps, bean);\n			ps.executeUpdate();\n			return DBUtil.getLastInsert(conn);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1051,'	public void editPatientInstructions(PatientInstructionsBean bean) throws iTrustException {\n		verifySaved();\n		instructionsDAO.edit(bean);\n	}\n'),(1052,'	public long edit(PatientInstructionsBean bean) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			String statement = \"UPDATE PatientSpecificInstructions \" +\n				\"SET VisitID=?, Modified=?, Name=?, URL=?, Comment=? \" +\n				\"WHERE ID=?\";\n			ps = conn.prepareStatement(statement);\n			loader.loadParameters(ps, bean);\n			ps.setLong(6, bean.getId());\n			ps.executeUpdate();\n			return DBUtil.getLastInsert(conn);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1053,'	public void deletePatientInstructions(PatientInstructionsBean bean) throws iTrustException {\n		verifySaved();\n		instructionsDAO.remove(bean.getId());\n	}\n'),(1054,'	public long getId() {\n		return id;\n	}\n'),(1055,'	public void remove(long patientInstructionsID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"DELETE FROM PatientSpecificInstructions WHERE ID=? \");\n			ps.setLong(1, patientInstructionsID);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1056,'	public void validate(PatientInstructionsBean bean) throws iTrustException, FormValidationException {\n		verifySaved();\n		PatientInstructionsBeanValidator validator = new PatientInstructionsBeanValidator();\n		validator.validate(bean);\n	}\n'),(1058,'	public void validate(PatientInstructionsBean bean) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(\n				checkFormat(\"Name\", bean.getName(), ValidationFormat.PATIENT_INSTRUCTIONS_NAME,false));\n		errorList.addIfNotNull(\n				checkFormat(\"Comments\", bean.getComment(), ValidationFormat.PATIENT_INSTRUCTIONS_COMMENTS,false));\n		errorList.addIfNotNull(\n				checkFormat(\"URL\", bean.getUrl(), ValidationFormat.PATIENT_INSTRUCTIONS_URL,false));\n		UrlValidator urlValidator = new UrlValidator();\n		if (!urlValidator.isValid(bean.getUrl())) {\n			errorList.addIfNotNull(\"URL: A valid URL is required.\");\n		}\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(1060,'	public long checkMID(String midString) {\n		try {\n			long mid = Long.valueOf(midString);\n			if (!authDAO.checkUserExists(mid))\n				return 0;\n			return mid;\n		} catch (NumberFormatException e) {\n			return 0L;\n		} catch (DBException e) {\n			return 0L;\n		}\n	}\n'),(1061,'	public boolean checkUserExists(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM Users WHERE MID=?\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			return rs.next();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1062,'	public boolean isMaxedOut(String ipAddress) throws DBException {\n		return authDAO.getResetPasswordFailures(ipAddress) >= MAX_RESET_ATTEMPTS;\n	}\n'),(1063,'	public int getResetPasswordFailures(String ipAddr) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM ResetPasswordFailures WHERE IPADDRESS=?\");\n			ps.setString(1, ipAddr);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next()) {\n				if (System.currentTimeMillis() - rs.getTimestamp(\"lastFailure\").getTime() > LOGIN_TIMEOUT) {\n					updateResetFailuresToZero(ipAddr, conn);\n					return 0;\n				} else {\n					return rs.getInt(\"failureCount\");\n				}\n			} else {\n				insertResetPasswordRow(ipAddr, 0, conn);\n				return 0;\n			}\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1064,'	public String checkRole(long mid, String role) throws iTrustException {\n		try {\n			if ((\"patient\".equals(role) && patientDAO.getRole(mid, role).equals(\"patient\"))\n					|| (\"hcp\".equals(role) && patientDAO.getRole(mid, role).equals(\"hcp\"))\n					|| (\"uap\".equals(role) && patientDAO.getRole(mid, role).equals(\"uap\"))\n					|| (\"pha\".equals(role) && patientDAO.getRole(mid, role).equals(\"pha\"))\n					|| (\"er\".equals(role) && patientDAO.getRole(mid, role).equals(\"er\"))\n					|| (\"lt\".equals(role) && patientDAO.getRole(mid, role).equals(\"lt\")))\n				return role;\n			else\n				return null;\n		} catch (DBException e) {\n			e.printStackTrace();\n		} catch (iTrustException e) {\n			e.printStackTrace();\n			throw e;\n		}\n		return null;\n	}\n'),(1065,'	public String getRole(long mid, String role) throws iTrustException, DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT role FROM Users WHERE MID=? AND Role=?\");\n			ps.setLong(1, mid);\n			ps.setString(2, role);\n			ResultSet rs;\n			rs = ps.executeQuery();\n			if (rs.next()) {\n				return rs.getString(\"role\");\n			} else {\n				throw new iTrustException(\"User does not exist with the designated role\");\n			}\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1066,'	public String getSecurityQuestion(long mid) throws iTrustException {\n		try {\n			if (null == authDAO.getSecurityQuestion(mid) || authDAO.getSecurityQuestion(mid).equals(\"\"))\n				throw new iTrustException(\"No security question or answer for this user has been set.\");\n			else\n				return authDAO.getSecurityQuestion(mid);\n		} catch (DBException e) {\n			e.printStackTrace();\n			return \"\";\n		}\n	}\n'),(1067,'	public String getSecurityQuestion(long mid) throws iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT sQuestion FROM Users WHERE MID=?\");\n			ps.setLong(1, mid);\n			ResultSet r = ps.executeQuery();\n			if (r.next())\n				return r.getString(\"sQuestion\");\n			else\n				throw new iTrustException(\"No security question set for MID: \" + mid);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1068,'	public String resetPassword(long mid, String role, String answer, String password,\n			String confirmPassword, String ipAddr) throws FormValidationException, DBException,\n			iTrustException {\n		Role r = authDAO.getUserRole(mid);\n		try {\n			Role.parse(role);\n		} catch (IllegalArgumentException e) {\n			return \"Invalid role\";\n		}\n		if (r.equals(Role.ADMIN))\n			return \"This role cannot be changed here\";\n		if (!r.equals(Role.parse(role)))\n			return \"Role mismatch\";\n		if (authDAO.getResetPasswordFailures(ipAddr) >= MAX_RESET_ATTEMPTS) {\n			return \"Too many retries\";\n		}\n		try {\n			validatePassword(password, confirmPassword);\n			if (answer.equals(authDAO.getSecurityAnswer(mid))) {\n				authDAO.resetPassword(mid, password);\n				new EmailUtil(factory).sendEmail(makeEmailApp(mid, role));\n				return \"Password changed\";\n			} else {\n				authDAO.recordResetPasswordFailure(ipAddr);\n				return \"Answer did not match\";\n			}\n		} catch (DBException e) {\n			return \"Error in validation of security answer\";\n		}\n	}\n'),(1071,'	private void validatePassword(String password, String confirmPassword) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		if (password == null || \"\".equals(password)) {\n			errorList.addIfNotNull(\"Password cannot be empty\");\n		} else {\n			if (!password.equals(confirmPassword))\n				errorList.addIfNotNull(\"Passwords don\'t match\");\n			if (!ValidationFormat.PASSWORD.getRegex().matcher(password).matches()) {\n				errorList.addIfNotNull(\"Password must be in the following format: \"\n						+ ValidationFormat.PASSWORD.getDescription());\n			}\n		}\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(1072,'	public String getSecurityAnswer(long mid) throws iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT sAnswer FROM Users WHERE MID=?\");\n			ps.setLong(1, mid);\n			ResultSet r = ps.executeQuery();\n			if (r.next())\n				return r.getString(\"sAnswer\");\n			else\n				throw new iTrustException(\"No security answer set for MID \" + mid);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1073,'	public void resetPassword(long mid, String password) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE Users SET password=? WHERE MID=?\");\n			ps.setString(1, password);\n			ps.setLong(2, mid);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1074,'	private Email makeEmailApp(long mid, String role) throws DBException{\n		if(Role.parse(role) == Role.PATIENT){\n			PatientBean p = new PatientDAO(factory).getPatient(mid);\n			Email email = new Email();\n			email.setFrom(\"no-reply@itrust.com\");\n			email.setToList(Arrays.asList(p.getEmail()));\n			email.setSubject(\"Your password has been changed in iTrust\");\n			email.setBody(String.format(\"Dear %s, \\n You have chosen to change your iTrust password for user %s\", p.getFullName(), mid));\n			return email;\n		}\n		else{ //UAP or HCP - admin taken out in \"resetPassword\"\n			PersonnelBean p = new PersonnelDAO(factory).getPersonnel(mid);\n			Email email = new Email();\n			email.setFrom(\"no-reply@itrust.com\");\n			email.setToList(Arrays.asList(p.getEmail()));\n			email.setSubject(\"Your password has been changed in iTrust\");\n			email.setBody(String.format(\"Dear %s, \\n You have chosen to change your iTrust password for user %s\", p.getFullName(), mid));\n			return email;\n		}\n	}\n'),(1075,'	public void recordResetPasswordFailure(String ipAddr) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"UPDATE ResetPasswordFailures SET failurecount=failurecount+1 WHERE ipaddress=?\");\n			ps.setString(1, ipAddr);\n			int numUpdated = ps.executeUpdate();\n			if (numUpdated == 0) // if there wasn\'t an empty row to begin with\n				insertResetPasswordRow(ipAddr, 1, conn);// now they have a row AND a strike against\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1077,'	public void addIfNotNull(String errorMessage) {\n		if (errorMessage != null && !\"\".equals(errorMessage))\n			errorList.add(errorMessage);\n	}\n'),(1080,'	public boolean hasErrors() {\n		return errorList.size() != 0;\n	}\n'),(1083,'	private long checkMID(long mid) throws iTrustException {\n		if (!authDAO.checkUserExists(mid))\n			throw new iTrustException(\"MID \" + mid + \" is not a user!\");\n		return mid;\n	}\n'),(1084,'	public void updateInformation(SecurityQA a) throws Exception {\n		SecurityQAValidator sqav = new SecurityQAValidator();\n		sqav.validate(a);\n		authDAO.setSecurityQuestionAnswer(a.getQuestion(), a.getAnswer(), loggedInMID);\n	}\n'),(1086,'	public void validate(SecurityQA bean) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		if (null == bean)\n			throw new FormValidationException(\"Null form\");\n		if (null == bean.getConfirmAnswer())\n			throw new FormValidationException(\"Confirm answer cannot be empty\");\n		if (!bean.getAnswer().equals(bean.getConfirmAnswer()))\n			throw new FormValidationException(\"Security answers do not match\");\n		errorList.addIfNotNull(checkFormat(\"Security Question\", bean.getQuestion(),\n				ValidationFormat.QUESTION, false));\n		errorList.addIfNotNull(checkFormat(\"Security Answer\", bean.getAnswer(), ValidationFormat.ANSWER,\n				false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(1087,'	public String getQuestion() {\n		return question;\n	}\n'),(1088,'	public String getAnswer() {\n		return answer;\n	}\n'),(1089,'	public void setSecurityQuestionAnswer(String question, String answer, long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement pstmt = null;\n		try {\n			conn = factory.getConnection();\n			pstmt = conn.prepareStatement(\"UPDATE Users SET sQuestion = ?, sAnswer = ? WHERE MID = ?\");\n			pstmt.setString(1, question);\n			pstmt.setString(2, answer);\n			pstmt.setLong(3, mid);\n			pstmt.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, pstmt);\n		}\n	}\n'),(1090,'	public SecurityQA retrieveInformation() throws iTrustException {\n		SecurityQA toRet = new SecurityQA();\n		toRet.setAnswer(authDAO.getSecurityAnswer(loggedInMID));\n		toRet.setQuestion(authDAO.getSecurityQuestion(loggedInMID));\n		return toRet;\n	}\n'),(1092,'	public void setAnswer(String answer) {\n		this.answer = answer;\n	}\n'),(1093,'	public void setQuestion(String question) {\n		this.question = question;\n	}\n'),(1095,'	public List<AdverseEventBean> getReports(boolean isPrescription, String start, String end)throws iTrustException, FormValidationException, SQLException, ParseException {\n		if(isPrescription) {\n			return adverseEventDAO.getPerscriptions(start, end);\n		} else { //is Immunization\n			return adverseEventDAO.getImmunizations(start, end);\n		}\n	}\n'),(1096,'	public List<AdverseEventBean> getPerscriptions(String start, String end) throws ParseException, DBException{\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try{\n			SimpleDateFormat fmt = new SimpleDateFormat(\"MM/dd/yyy\");\n			Date beginning = fmt.parse(start);\n			Date ending = fmt.parse(end);\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM AdverseEvents,NDCodes WHERE AdverseEvents.TimeLogged >= ? AND AdverseEvents.TimeLogged <= ? AND NDCodes.Code=AdverseEvents.Code ORDER BY AdverseEvents.Code, AdverseEvents.TimeLogged DESC\");\n			ps.setTimestamp(1, new Timestamp(beginning.getTime()));\n			ps.setTimestamp(2, new Timestamp(ending.getTime() + 1000L * 60L * 60 * 24L));\n			ResultSet rs = ps.executeQuery();\n			List<AdverseEventBean> aeList = aeLoader.loadList(rs);\n			return aeList;\n		} catch(SQLException e){\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);	\n		}\n	}\n'),(1097,'	public List<AdverseEventBean> getImmunizations(String start, String end) throws ParseException, DBException{\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			SimpleDateFormat fmt = new SimpleDateFormat(\"MM/dd/yyy\");\n			Date beginning = fmt.parse(start);\n			Date ending = fmt.parse(end);\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM AdverseEvents,CPTCodes WHERE AdverseEvents.TimeLogged >= ? AND AdverseEvents.TimeLogged <= ? AND CPTCodes.Code=AdverseEvents.Code ORDER BY AdverseEvents.Code, AdverseEvents.TimeLogged DESC\");\n			ps.setTimestamp(1, new Timestamp(beginning.getTime()));\n			ps.setTimestamp(2, new Timestamp(ending.getTime() + 1000L * 60L * 60 * 24L));\n			ResultSet rs = ps.executeQuery();\n			List<AdverseEventBean> aeList = aeLoader.loadList(rs);\n			return aeList;\n		} catch(SQLException e){\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);			\n		}\n	}\n'),(1098,'	public String getName(long MID) {\n		try {\n			return patientDAO.getName(MID);\n		} catch(DBException e) {\n			return \"\";\n		} catch(iTrustException e) {\n			return \"Patient no longer exists\";\n		}\n	}\n'),(1099,'	public String sendEmail(long patientMID, String message) throws DBException{\n		String rValue;\n		List<String> toList = new ArrayList<String>();\n		PatientBean receiver = patientDAO.getPatient(patientMID);\n		toList.add(receiver.getEmail());\n		Email mail = new Email();\n		mail.setBody(message);\n		mail.setFrom(loggedInMID + \"\");\n		mail.setToList(toList);\n		emailer.sendEmail(mail);\n		rValue = \"\" + mail.getFrom() + \" \" + mail.getBody();\n		return rValue;\n	}\n'),(1100,'	public String getFrom() {\n		return from;\n	}\n'),(1101,'	public String getBody() {\n		return body;\n	}\n'),(1102,'	public void remove(int id) throws DBException, iTrustException, FormValidationException{\n		long HCPMID;\n		try{\n		AdverseEventBean aeBean = adverseEventDAO.getReport(id);\n		adverseEventDAO.removeReport(id);\n		HCPMID = adverseEventDAO.getHCPMID(id);\n		MessageBean mBeanTwo = new MessageBean();\n		MessageBean mBeanOne = new MessageBean();\n		String body = \"An adverse event for \" + aeBean.getDrug() + \" perscribed to \" + patientDAO.getName(Long.parseLong(aeBean.getMID())) +\" with description: (\" + aeBean.getDescription()+ \") was removed.\";\n		mBeanOne.setTo(Long.parseLong(aeBean.getMID()));\n		mBeanTwo.setTo(HCPMID);\n		mBeanOne.setSubject(\"Subject\");\n		mBeanTwo.setSubject(\"Subject\");\n		mBeanOne.setBody(body);\n		mBeanTwo.setBody(body);\n		mBeanOne.setFrom(loggedInMID);\n		mBeanTwo.setFrom(loggedInMID);\n		messenger.sendMessage(mBeanOne);\n		messenger.sendMessage(mBeanTwo);\n		}catch(SQLException e){\n			throw new DBException(e);\n		} \n	}\n'),(1103,'	public long removeReport(int id) throws DBException{\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"UPDATE AdverseEvents SET Status = ? WHERE id = ?\");\n			String removed = \"removed\";\n			ps.setString(1, removed);\n			ps.setInt(2,id);\n			ps.executeUpdate();\n			long a = DBUtil.getLastInsert(conn);\n			return a;\n		} catch(SQLException e){\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);	\n		}\n	}\n'),(1104,'	public long getHCPMID(int id) throws DBException{\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM AdverseEvents WHERE id=?\");\n			ps.setInt(1, id);\n			ResultSet rs = ps.executeQuery();\n			long hcpMID = 0;\n			if(rs.next()) {\n				 hcpMID = rs.getLong(\"Prescriber\");\n			}\n			return hcpMID;\n		} catch(SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1106,'	private long checkPatientID(String input) throws iTrustException {\n		try {\n			long pid = Long.valueOf(input);\n			if (factory.getPatientDAO().checkPatientExists(pid))\n				return pid;\n			else\n				throw new iTrustException(\"Patient does not exist\");\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"Patient ID is not a number: \" + HtmlEncoder.encode(input));\n		}\n	}\n'),(1107,'	public boolean checkPatientExists(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM Patients WHERE MID=?\");\n			ps.setLong(1, pid);\n			ResultSet rs = ps.executeQuery();\n			return rs.next();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1108,'	public static String encode(String input) {\n		if (input == null)\n			return input;\n		String str = input.replaceAll(\"<\", \"&lt;\");\n		str = str.replaceAll(\">\", \"&gt;\");\n		str = str.replaceAll(\"\\n\", \"<br />\");\n		return str;\n	}\n'),(1109,'	private long checkPersonnelID(String input) throws iTrustException {\n		try {\n			long pid = Long.valueOf(input);\n			if (factory.getPersonnelDAO().checkPersonnelExists(pid))\n				return pid;\n			else\n				throw new iTrustException(\"Personnel does not exist\");\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"Personnel ID is not a number: \" + e.getMessage());\n		}\n	}\n'),(1111,'	private long checkOfficeVisitID(String input) throws iTrustException {\n		try {\n			encode(input);\n			long ovID = Long.valueOf(input);\n			if (ovDAO.checkOfficeVisitExists(ovID, pid))\n				return ovID;\n			else\n				throw new iTrustException(\"Office Visit \" + ovID + \" with Patient MID \" + pid\n						+ \" does not exist\");\n		} catch (NumberFormatException e) {\n			throw new iTrustException(\"Office Visit ID is not a number: \" + e.getMessage());\n		}\n	}\n'),(1112,'	public String encode(String input) {\n		String str = input.replaceAll(\"<\", \"&lt;\");\n		str = str.replaceAll(\">\", \"&gt;\");\n		str = str.replaceAll(\"\\n\", \"<br />\");\n		return str;\n	}\n'),(1113,'	public boolean checkOfficeVisitExists(long ovID, long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM OfficeVisits WHERE ID=? AND PatientID=?\");\n			ps.setLong(1, ovID);\n			ps.setLong(2, pid);\n			ResultSet rs = ps.executeQuery();\n			return rs.next();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1114,'	protected void verifySaved() throws iTrustException {\n		if (isUnsaved()) {\n			throw new iTrustException(\"Cannot perform action.  OfficeVisit is not saved.\");\n		}\n	}\n'),(1115,'	public boolean isUnsaved() {\n		return ovID == UNSAVED_VISIT_ID;\n	}\n'),(1116,'	public String getFullName() {\n		return getFirstName() + \" \" + getLastName();\n	}\n'),(1117,'	public String getFirstName() {\n		return firstName;\n	}\n'),(1118,'	public String getLastName() {\n		return lastName;\n	}\n'),(1119,'	public String getBloodPressure() {\n		return getBloodPressureN() + \"/\" + getBloodPressureD();\n	}\n'),(1120,'	public int getBloodPressureN() {\n		return bloodPressureN;\n	}\n'),(1121,'	public int getBloodPressureD() {\n		return bloodPressureD;\n	}\n'),(1122,'	public int getCholesterolTri() {\n		return cholesterolTri;\n	}\n'),(1123,'	public ReferralBean toReferralBean() {\n		ReferralBean bean = new ReferralBean();\n		bean.setId(id);\n		bean.setPatientID(patientID);\n		bean.setSenderID(senderID);\n		bean.setReceiverID(receiverID);\n		bean.setReferralDetails(referralDetails);\n		bean.setOvid(ovid);\n		bean.setViewedByPatient(viewedByPatient);\n		bean.setViewedByHCP(viewedByHCP);\n		bean.setTimeStamp(timeStamp);\n		bean.setPriority(priority);\n		return bean;\n	}\n'),(1125,'	public void setId(long id) {\n		this.id = id;\n	}\n'),(1126,'	public void setPatientID(long patientID) {\n		this.patientID = patientID;\n	}\n'),(1127,'	public void setSenderID(long senderID) {\n		this.senderID = senderID;\n	}\n'),(1128,'	public void setReceiverID(long receiverID) {\n		this.receiverID = receiverID;\n	}\n'),(1129,'	public void setReferralDetails(String referralDetails) {\n		this.referralDetails = referralDetails;\n	}\n'),(1130,'	public void setOvid(long ovid) {\n		this.ovid = ovid;\n	}\n'),(1131,'	public void setViewedByPatient(boolean viewedByPatient) {\n		this.viewedByPatient = viewedByPatient;\n	}\n'),(1132,'	public void setViewedByHCP(boolean viewedByHCP) {\n		this.viewedByHCP = viewedByHCP;\n	}\n'),(1133,'	public void setTimeStamp(String timeStamp) {\n		this.timeStamp = timeStamp;\n	}\n'),(1134,'	public void setPriority(int priority) {\n		this.priority = priority;\n	}\n'),(1135,'	public boolean equals(Object other) {\n		return (other != null) && this.getClass().equals(other.getClass())\n				&& this.equals((VerboseReferralBean) other);\n	}\n'),(1136,'	private boolean equals(VerboseReferralBean other) {\n		return (id == other.id\n				&& senderID == other.senderID\n				&& receiverID == other.receiverID\n				&& ovid == other.ovid\n				&& viewedByPatient == other.viewedByPatient\n				&& viewedByHCP == other.viewedByHCP\n				&& timeStamp.equals(other.timeStamp)\n				&& referralDetails.equals(other.referralDetails));\n	}\n'),(1137,'	public void setBloodTypeStr(String bloodType) {\n		this.bloodType = BloodType.parse(bloodType);\n	}\n'),(1139,'	public void setEthnicityStr(String ethnicity) {\n		this.ethnicity = Ethnicity.parse(ethnicity);\n	}\n'),(1141,'	public void setGenderStr(String gender) {\n		this.gender = Gender.parse(gender);\n	}\n'),(1143,'	public String getIcAddress3() {\n		return getIcCity() + \", \" + getIcState() + \" \" + getIcZip();\n	}\n'),(1144,'	public String getIcCity() {\n		return icCity;\n	}\n'),(1145,'	public String getIcState() {\n		return icState;\n	}\n'),(1146,'	public String getIcZip() {\n		if (getIcZip2() != null && !\"\".equals(getIcZip2()))\n			return getIcZip1() + \"-\" + getIcZip2();\n		else\n			return getIcZip1();\n	}\n'),(1147,'	public String getIcZip2() {\n		return icZip2;\n	}\n'),(1148,'	public String getIcZip1() {\n		return icZip1;\n	}\n'),(1149,'	public String getPhone() {\n		return getPhone1() + \"-\" + getPhone2() + \"-\" + getPhone3();\n	}\n'),(1150,'	public String getPhone1() {\n		return phone1;\n	}\n'),(1151,'	public String getPhone2() {\n		return phone2;\n	}\n'),(1152,'	public String getPhone3() {\n		return phone3;\n	}\n'),(1153,'	public String getStreetAddress3() {\n		return getCity() + \", \" + getState() + \" \" + getZip();\n	}\n'),(1154,'	public String getZip2() {\n		return zip2;\n	}\n'),(1155,'	public String getEmergencyPhone1() {\n		return emergencyPhone1;\n	}\n'),(1156,'	public String getEmergencyPhone2() {\n		return emergencyPhone2;\n	}\n'),(1157,'	public String getEmergencyPhone3() {\n		return emergencyPhone3;\n	}\n'),(1158,'	public String getIcPhone() {\n		return getIcPhone1() + \"-\" + getIcPhone2() + \"-\" + getIcPhone3();\n	}\n'),(1159,'	public String getIcPhone1() {\n		return icPhone1;\n	}\n'),(1160,'	public String getIcPhone2() {\n		return icPhone2;\n	}\n'),(1161,'	public String getIcPhone3() {\n		return icPhone3;\n	}\n'),(1162,'	public void setBloodTypeStr(String bloodType) {\n		this.bloodType = BloodType.parse(bloodType);\n	}\n'),(1163,'	public void setEthnicityStr(String ethnicity) {\n		this.ethnicity = Ethnicity.parse(ethnicity);\n	}\n'),(1164,'	public String getFullName() {\n		return getFirstName() + \" \" + getLastName();\n	}\n'),(1165,'	public String getFirstName() {\n		return firstName;\n	}\n'),(1166,'	public String getLastName() {\n		return lastName;\n	}\n'),(1167,'	public void setGenderStr(String gender) {\n		this.gender = Gender.parse(gender);\n	}\n'),(1168,'	public String getIcAddress3() {\n		return getIcCity() + \", \" + getIcState() + \" \" + getIcZip();\n	}\n'),(1169,'	public String getIcCity() {\n		return icCity;\n	}\n'),(1170,'	public String getIcState() {\n		return icState;\n	}\n'),(1171,'	public String getIcZip() {\n		if (getIcZip2() != null && !\"\".equals(getIcZip2()))\n			return getIcZip1() + \"-\" + getIcZip2();\n		else\n			return getIcZip1();\n	}\n'),(1172,'	public String getIcZip2() {\n		return icZip2;\n	}\n'),(1173,'	public String getIcZip1() {\n		return icZip1;\n	}\n'),(1174,'	public String getPhone() {\n		return getPhone1() + \"-\" + getPhone2() + \"-\" + getPhone3();\n	}\n'),(1175,'	public String getPhone1() {\n		return phone1;\n	}\n'),(1176,'	public String getPhone2() {\n		return phone2;\n	}\n'),(1177,'	public String getPhone3() {\n		return phone3;\n	}\n'),(1178,'	public String getStreetAddress3() {\n		return getCity() + \", \" + getState() + \" \" + getZip();\n	}\n'),(1179,'	public String getCity() {\n		return city;\n	}\n'),(1180,'	public String getState() {\n		return state;\n	}\n'),(1181,'	public String getZip() {\n		if (getZip2() != null && !\"\".equals(getZip2()))\n			return getZip1() + \"-\" + getZip2();\n		else\n			return getZip1();\n	}\n'),(1182,'	public String getZip2() {\n		return zip2;\n	}\n'),(1183,'	public String getZip1() {\n		return zip1;\n	}\n'),(1184,'	public String getEmergencyPhone() {\n		return getEmergencyPhone1() + \"-\" + getEmergencyPhone2() + \"-\" + getEmergencyPhone3();\n	}\n'),(1185,'	public String getEmergencyPhone1() {\n		return emergencyPhone1;\n	}\n'),(1186,'	public String getEmergencyPhone2() {\n		return emergencyPhone2;\n	}\n'),(1187,'	public String getEmergencyPhone3() {\n		return emergencyPhone3;\n	}\n'),(1188,'	public String getIcPhone() {\n		return getIcPhone1() + \"-\" + getIcPhone2() + \"-\" + getIcPhone3();\n	}\n'),(1189,'	public String getIcPhone1() {\n		return icPhone1;\n	}\n'),(1190,'	public String getIcPhone2() {\n		return icPhone2;\n	}\n'),(1191,'	public String getIcPhone3() {\n		return icPhone3;\n	}\n'),(1192,'	public String getFirstFoundStr() {\n		try {\n			return new SimpleDateFormat(\"MM/dd/yyyy\").format(getFirstFound());\n		} catch (Exception e) {\n			e.printStackTrace();\n			return \"\";\n		}\n	}\n'),(1193,'	public boolean equals(Object obj) {\n		return obj != null && obj.getClass().equals(this.getClass()) && this.equals((HospitalBean) obj);\n	}\n'),(1194,'	private boolean equals(HospitalBean other) {\n		return hospitalID.equals(other.hospitalID) && hospitalName.equals(other.hospitalName);\n	}\n'),(1195,'	public boolean equals(Object obj) {\n		return obj != null && obj.getClass().equals(this.getClass()) && this.equals((Email) obj);\n	}\n'),(1196,'	private boolean equals(Email other) {\n		return from.equals(other.from) && subject.equals(other.subject) && body.equals(other.body)\n				&& listEquals(toList, other.toList);\n	}\n'),(1199,'	private HashMap<TransactionType, Integer> createEmptyMap() {\n		HashMap<TransactionType, Integer> map = new HashMap<TransactionType, Integer>(TransactionType\n				.values().length);\n		for (TransactionType type : TransactionType.values()) {\n			map.put(type, 0);\n		}\n		return map;\n	}\n'),(1200,'	public boolean equals(Object other) {\n		return (other != null) && this.getClass().equals(other.getClass())\n				&& this.equals((PrescriptionBean) other);\n	}\n'),(1201,'	private boolean equals(PrescriptionBean other) {\n		return (medication == other.medication || (medication != null && medication.equals(other.medication)))\n				&& visitID == other.visitID\n				&& startDateStr.equals(other.startDateStr)\n				&& endDateStr.equals(other.endDateStr)\n				&& dosage == other.dosage\n				&& instructions.equals(other.instructions);\n	}\n'),(1202,'	public boolean equals(Object other) {\n		return (other != null) && this.getClass().equals(other.getClass())\n				&& this.equals((MedicationBean) other);\n	}\n'),(1203,'	public String getFirstName() {\n		return firstName;\n	}\n'),(1204,'	public String getZip2() {\n		return zip2;\n	}\n'),(1205,'	public boolean equals(Object other) {\n		return (other != null) && this.getClass().equals(other.getClass())\n				&& this.equals((ReferralBean) other);\n	}\n'),(1206,'	private boolean equals(ReferralBean other) {\n		return (id == other.id\n				&& senderID == other.senderID\n				&& receiverID == other.receiverID\n				&& ovid == other.ovid\n				&& viewedByPatient == other.viewedByPatient\n				&& viewedByHCP == other.viewedByHCP\n				&& timeStamp.equals(other.timeStamp)\n				&& referralDetails.equals(other.referralDetails));\n	}\n'),(1207,'	public void setSurveyDateString(String s) {\n		try {\n			setSurveyDate(new SimpleDateFormat(dateFormat).parse(s));\n		}\n		catch (ParseException ex) {\n			System.out.println(ex.getMessage());\n		}\n	}\n'),(1208,'	public void setSurveyDate(Date surveyDate) {\n		this.surveyDate = (surveyDate == null ? null : (Date)surveyDate.clone());\n	}\n'),(1209,'	public String getSurveyDateString() {\n		if (surveyDate == null) return \"\";\n		return new SimpleDateFormat(dateFormat).format(getSurveyDate());\n	}\n'),(1210,'	public Date getSurveyDate() {\n		return (surveyDate == null ? null : (Date)surveyDate.clone());\n	}\n'),(1211,'	public String getNDCodeFormatted() {\n		String code = getNDCode();\n		if (code.length() > 5)\n			return code.substring(0, 5) + \"-\" + code.substring(5);\n		else\n			return code;\n	}\n'),(1212,'	private boolean equals(MedicationBean other) {\n		return description.equals(other.description) && NDCode.equals(other.NDCode);\n	}\n'),(1214,'	public void setRequestedDateString(String s) {\n		try {\n			setRequestedDate(new SimpleDateFormat(dateFormat).parse(s));\n		} catch (ParseException ex) {\n			System.out.println(ex.getMessage());\n		}\n	}\n'),(1215,'	public void setRequestedDate(Date requestedDate) {\n		this.requestedDate = (requestedDate == null ? null : (Date) requestedDate.clone());\n	}\n'),(1216,'	public void setViewedDateString(String s) {\n		try {\n			setViewedDate(new SimpleDateFormat(dateFormat).parse(s));\n		} catch (ParseException ex) {\n			System.out.println(ex.getMessage());\n		}\n	}\n'),(1217,'	public void setViewedDate(Date viewedDate) {\n		this.viewedDate = (viewedDate == null ? null : (Date) viewedDate.clone());\n	}\n'),(1219,'	public String getType() {\n		return type;\n	}\n'),(1222,'	public void setPhoneNumber(String phone1, String phone2, String phone3) {\n		this.phoneNumber = phone1 + \"-\" + phone2 + \"-\" + phone3;\n	}\n'),(1223,'	public VisitFlag[] getVisitFlags() {\n		Collections.sort(visitFlags, new Comparator<VisitFlag>() {\n			public int compare(VisitFlag vf1, VisitFlag vf2) {\n				return vf1.getType().compareToIgnoreCase(vf2.getType());\n			}\n		});\n		return visitFlags.toArray(new VisitFlag[visitFlags.size()]);\n	}\n'),(1225,'	public List<LOINCbean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<LOINCbean> list = new ArrayList<LOINCbean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1226,'	public LOINCbean loadSingle(ResultSet rs) throws SQLException {\n		LOINCbean LOINC = new LOINCbean();\n		LOINC.setLabProcedureCode(rs.getString(\"LaboratoryProcedureCode\"));\n		LOINC.setComponent(rs.getString(\"Component\"));\n		LOINC.setKindOfProperty(rs.getString(\"KindOfProperty\"));\n		LOINC.setTimeAspect(rs.getString(\"TimeAspect\"));\n		LOINC.setSystem(rs.getString(\"System\"));\n		LOINC.setScaleType(rs.getString(\"ScaleType\"));\n		LOINC.setMethodType(rs.getString(\"MethodType\"));\n		return LOINC;\n	}\n'),(1228,'	public void setLabProcedureCode(String aLabProcedureCode){\n		labProcedureCode=aLabProcedureCode;\n	}\n'),(1229,'	public void setComponent(String aComponent){\n		component=aComponent;\n	}\n'),(1230,'	public void setKindOfProperty(String aKindOfProperty){\n		kindOfProperty=aKindOfProperty;\n	}\n'),(1231,'	public void setTimeAspect(String aTimeAspect){\n		timeAspect=aTimeAspect;\n	}\n'),(1232,'	public void setSystem(String aSystem){\n		system=aSystem;\n	}\n'),(1233,'	public void setScaleType(String aScaleType){\n		scaleType=aScaleType;\n	}\n'),(1234,'	public void setMethodType(String aMethodType){\n		methodType=aMethodType;\n	}\n'),(1236,'	public PreparedStatement loadParameters(PreparedStatement ps, LOINCbean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1237,'	public List<Email> loadList(ResultSet rs) throws SQLException {\n		List<Email> list = new ArrayList<Email>();\n		while (rs.next())\n			list.add(loadSingle(rs));\n		return list;\n	}\n'),(1238,'	public Email loadSingle(ResultSet rs) throws SQLException {\n		Email email = new Email();\n		email.setFrom(rs.getString(\"FromAddr\"));\n		email.setToList(Arrays.asList(rs.getString(\"ToAddr\").split(\",\")));\n		email.setBody(rs.getString(\"Body\"));\n		email.setSubject(rs.getString(\"Subject\"));\n		email.setTimeAdded(rs.getTimestamp(\"AddedDate\"));\n		return email;\n	}\n'),(1239,'	public PreparedStatement loadParameters(PreparedStatement ps, Email email) throws SQLException {\n		ps.setString(1, email.getToListStr());\n		ps.setString(2, email.getFrom());\n		ps.setString(3, email.getSubject());\n		ps.setString(4, email.getBody());\n		return ps;\n	}\n'),(1240,'	public String getToListStr() {\n		String str = \"\";\n		for (String addr : toList) {\n			str += addr + \",\";\n		}\n		if(str.length() < 1)\n			return str;\n		else\n			return str.substring(0, str.length() - 1);\n	}\n'),(1241,'	public String getSubject() {\n		return subject;\n	}\n'),(1242,'	public void setTimeAdded(Timestamp timeAdded) {\n		this.timeAdded = timeAdded;\n	}\n'),(1244,'	public List<AdverseEventBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<AdverseEventBean> list = new ArrayList<AdverseEventBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1245,'	public AdverseEventBean loadSingle(ResultSet rs) throws SQLException {\n		AdverseEventBean adverseEvent = new AdverseEventBean();\n		adverseEvent.setMID(rs.getString(\"PatientMID\"));\n		adverseEvent.setDrug(rs.getString(\"PresImmu\"));\n		adverseEvent.setDescription(rs.getString(\"Comment\"));\n		adverseEvent.setCode(rs.getString(\"Code\"));\n		adverseEvent.setDate(rs.getTimestamp(\"TimeLogged\").toString());\n		adverseEvent.setId(rs.getInt(\"id\"));\n		adverseEvent.setStatus(rs.getString(\"Status\"));\n		return adverseEvent;\n	}\n'),(1247,'	public void setMID(String mID) {\n		MID = mID;\n	}\n'),(1248,'	public void setDrug(String drug) {\n		this.drug = drug;\n	}\n'),(1249,'	public void setCode(String code) {\n		this.code = code;\n	}\n'),(1250,'	public void setDate(String date) {\n		this.date = date;\n	}\n'),(1251,'	public void setId(int id) {\n		this.id = id;\n	}\n'),(1252,'	public void setStatus(String status) {\n		this.status = status;\n	}\n'),(1254,'	public PreparedStatement loadParameters(PreparedStatement ps, AdverseEventBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1255,'	public List<AllergyBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<AllergyBean> list = new ArrayList<AllergyBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1256,'	public AllergyBean loadSingle(ResultSet rs) throws SQLException {\n		AllergyBean allergy = new AllergyBean();\n		allergy.setId(rs.getLong(\"ID\"));\n		allergy.setPatientID(rs.getLong(\"PatientID\"));\n		allergy.setDescription(rs.getString(\"Description\"));\n		allergy.setFirstFound(rs.getTimestamp(\"FirstFound\"));\n		return allergy;\n	}\n'),(1257,'	public void setId(long id) {\n		this.id = id;\n	}\n'),(1258,'	public void setPatientID(long patientID) {\n		this.patientID = patientID;\n	}\n'),(1259,'	public void setFirstFound(Date firstFound) {\n		if (null != firstFound)\n			this.firstFound = (Date) firstFound.clone();\n		else\n			this.firstFound = null;\n	}\n'),(1261,'	public PreparedStatement loadParameters(PreparedStatement ps, AllergyBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1262,'	public List<TelemedicineBean> loadList(ResultSet rs) throws SQLException {\n		List<TelemedicineBean> list = new ArrayList<TelemedicineBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1263,'	public TelemedicineBean loadSingle(ResultSet rs) throws SQLException {\n		TelemedicineBean d = new TelemedicineBean();\n		d.setSystolicBloodPressureAllowed(rs.getBoolean(\"SystolicBloodPressure\"));\n		d.setDiastolicBloodPressureAllowed(rs.getBoolean(\"DiastolicBloodPressure\"));\n		d.setGlucoseLevelAllowed(rs.getBoolean(\"GlucoseLevel\"));\n		d.setHeightAllowed(rs.getBoolean(\"Height\"));\n		d.setWeightAllowed(rs.getBoolean(\"Weight\"));\n		d.setPedometerReadingAllowed(rs.getBoolean(\"PedometerReading\"));\n		return d;\n	}\n'),(1265,'	public void setSystolicBloodPressureAllowed(boolean systolicBloodPressureAllowed) {\n		this.systolicBloodPressureAllowed = systolicBloodPressureAllowed;\n	}\n'),(1266,'	public void setDiastolicBloodPressureAllowed(boolean diastolicBloodPressureAllowed) {\n		this.diastolicBloodPressureAllowed = diastolicBloodPressureAllowed;\n	}\n'),(1267,'	public void setGlucoseLevelAllowed(boolean glucoseLevelAllowed) {\n		this.glucoseLevelAllowed = glucoseLevelAllowed;\n	}\n'),(1268,'	public void setHeightAllowed(boolean heightAllowed) {\n		this.heightAllowed = heightAllowed;\n	}\n'),(1269,'	public void setWeightAllowed(boolean weightAllowed) {\n		this.weightAllowed = weightAllowed;\n	}\n'),(1270,'	public void setPedometerReadingAllowed(boolean pedometerReadingAllowed) {\n		this.pedometerReadingAllowed = pedometerReadingAllowed;\n	}\n'),(1272,'	public PreparedStatement loadParameters(PreparedStatement ps, TelemedicineBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1273,'	public List<FamilyMemberBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<FamilyMemberBean> list = new ArrayList<FamilyMemberBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1274,'	public FamilyMemberBean loadSingle(ResultSet rs) throws SQLException {\n		FamilyMemberBean fam = new FamilyMemberBean();\n		fam.setRelation(relation);\n		fam.setFirstName(rs.getString(\"FirstName\"));\n		fam.setLastName(rs.getString(\"LastName\"));\n		fam.setMid(rs.getInt(\"MID\"));\n		return fam;\n	}\n'),(1276,'	public void setFirstName(String firstName) {\n		this.firstName = firstName;\n	}\n'),(1277,'	public void setLastName(String lastName) {\n		this.lastName = lastName;\n	}\n'),(1278,'	public void setMid(long mid) {\n		this.mid = mid;\n	}\n'),(1280,'	public PreparedStatement loadParameters(PreparedStatement ps, FamilyMemberBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1281,'	public List<LabProcedureBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<LabProcedureBean> list = new ArrayList<LabProcedureBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1282,'	public LabProcedureBean loadSingle(ResultSet rs) throws SQLException {\n		LabProcedureBean LabProcedure = new LabProcedureBean();\n		LabProcedure.setProcedureID(rs.getLong(\"LaboratoryProcedureID\"));\n		LabProcedure.setPid(rs.getLong(\"PatientMID\"));\n		LabProcedure.setLoinc(rs.getString(\"LaboratoryProcedureCode\"));\n		LabProcedure.setStatus(rs.getString(\"Status\"));\n		LabProcedure.setCommentary(rs.getString(\"Commentary\"));\n		LabProcedure.setResults(rs.getString(\"Results\"));\n		LabProcedure.setOvID(rs.getLong(\"OfficeVisitID\"));\n		LabProcedure.setTimestamp(rs.getTimestamp(\"UpdatedDate\"));\n		LabProcedure.setRights(rs.getString(\"Rights\"));\n		LabProcedure.setLTID(rs.getLong(\"LabTechID\"));\n		LabProcedure.setPriorityCode(rs.getInt(\"PriorityCode\"));\n		LabProcedure.setViewedByPatient(rs.getBoolean(\"ViewedByPatient\")); //must be set after status\n		LabProcedure.setNumericalResult(rs.getString(\"NumericalResults\"));\n		LabProcedure.setNumericalResultUnit(rs.getString(\"NumericalResultsUnit\"));\n		LabProcedure.setUpperBound(rs.getString(\"UpperBound\"));\n		LabProcedure.setLowerBound(rs.getString(\"LowerBound\"));\n		return LabProcedure;\n	}\n'),(1284,'	public void setProcedureID(long procedureID) {\n		this.procedureID = procedureID;\n	}\n'),(1285,'	public void setPid(long pid) {\n		this.pid = pid;\n	}\n'),(1286,'	public void setLoinc(String loinc) {\n		this.loinc = loinc;\n	}\n'),(1287,'	public void setCommentary(String commentary) {\n		this.commentary = commentary;\n	}\n'),(1288,'	public void setResults(String results) {\n		this.results = results;\n	}\n'),(1289,'	public void setOvID(long ovID) {\n		this.ovID = ovID;\n	}\n'),(1290,'	public void setTimestamp(Timestamp timestamp) {\n		this.timestamp = timestamp;\n	}\n'),(1291,'	public void setRights(String rights) {\n		this.rights = rights;\n	}\n'),(1292,'	public void setPriorityCode(int priorityCode) {\n		this.priorityCode = priorityCode;\n	}\n'),(1294,'	public PreparedStatement loadParameters(PreparedStatement ps, LabProcedureBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1295,'	public List<RemoteMonitoringDataBean> loadList(ResultSet rs) throws SQLException {\n		List<RemoteMonitoringDataBean> list = new ArrayList<RemoteMonitoringDataBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1296,'	public RemoteMonitoringDataBean loadSingle(ResultSet rs) throws SQLException {\n		RemoteMonitoringDataBean d = new RemoteMonitoringDataBean();\n		d.setLoggedInMID(rs.getLong(\"PatientID\"));\n		d.setSystolicBloodPressure(rs.getInt(\"systolicBloodPressure\"));\n		d.setDiastolicBloodPressure(rs.getInt(\"diastolicBloodPressure\"));\n		d.setGlucoseLevel(rs.getInt(\"glucoseLevel\"));\n		d.setHeight(rs.getFloat(\"height\"));\n		d.setWeight(rs.getFloat(\"weight\"));\n		d.setPedometerReading(rs.getInt(\"pedometerReading\"));\n		d.setTime(rs.getTimestamp(\"timeLogged\"));\n		d.setReporterRole(rs.getString(\"ReporterRole\"));\n		d.setReporterMID(rs.getLong(\"ReporterID\"));\n		return d;\n	}\n'),(1298,'	public void setLoggedInMID(long patientMID) {\n		this.patientMID = patientMID;\n	}\n'),(1299,'	public void setSystolicBloodPressure(int systolicBloodPressure) {\n		this.systolicBloodPressure = systolicBloodPressure;\n	}\n'),(1300,'	public void setDiastolicBloodPressure(int diastolicBloodPressure) {\n		this.diastolicBloodPressure = diastolicBloodPressure;\n	}\n'),(1301,'	public void setGlucoseLevel(int glucoseLevel) {\n		this.glucoseLevel = glucoseLevel;\n	}\n'),(1302,'	public void setHeight(float height) {\n		this.height = height;\n	}\n'),(1303,'	public void setWeight(float weight) {\n		this.weight = weight;\n	}\n'),(1304,'	public void setPedometerReading(int pedometerReading) {\n		this.pedometerReading = pedometerReading;\n	}\n'),(1305,'	public void setTime(Timestamp time) {\n		this.time = time;\n	}\n'),(1306,'	public void setReporterRole(String reporterRole) {\n		this.reporterRole = reporterRole;\n	}\n'),(1307,'	public void setReporterMID(long reporterMID) {\n		this.reporterMID = reporterMID;\n	}\n'),(1309,'	public PreparedStatement loadParameters(PreparedStatement ps, RemoteMonitoringDataBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1310,'	public List<OfficeVisitBean> loadList(ResultSet rs) throws SQLException {\n		List<OfficeVisitBean> list = new ArrayList<OfficeVisitBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1311,'	public OfficeVisitBean loadSingle(ResultSet rs) throws SQLException {\n		OfficeVisitBean ov = new OfficeVisitBean(rs.getInt(\"ID\"));\n		ov.setHcpID(rs.getLong(\"HCPID\"));\n		ov.setNotes(rs.getString(\"Notes\"));\n		ov.setPatientID(rs.getLong(\"PatientID\"));\n		ov.setHospitalID(rs.getString(\"HospitalID\"));\n		ov.setVisitDateStr(new SimpleDateFormat(\"MM/dd/yyyy\").format(new Date(rs.getDate(\"VisitDate\").getTime())));\n		return ov;\n	}\n'),(1314,'	public PreparedStatement loadParameters(PreparedStatement ps, OfficeVisitBean p) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1315,'	public List<PersonnelBean> loadList(ResultSet rs) throws SQLException {\n		List<PersonnelBean> list = new ArrayList<PersonnelBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1316,'	public PersonnelBean loadSingle(ResultSet rs) throws SQLException {\n		PersonnelBean p = new PersonnelBean();\n		p.setMID(rs.getLong(\"MID\"));\n		p.setAMID(rs.getLong(\"amid\"));\n		p.setRoleString(rs.getString(\"role\"));\n		p.setLastName(rs.getString(\"lastName\"));\n		p.setFirstName(rs.getString(\"firstName\"));\n		p.setPhone1(rs.getString(\"phone1\"));\n		p.setPhone2(rs.getString(\"phone2\"));\n		p.setPhone3(rs.getString(\"phone3\"));\n		p.setStreetAddress1(rs.getString(\"address1\"));\n		p.setStreetAddress2(rs.getString(\"address2\"));\n		p.setCity(rs.getString(\"city\"));\n		p.setState(rs.getString(\"state\"));\n		p.setZip1((rs.getString(\"zip1\")));\n		p.setZip2((rs.getString(\"zip2\")));\n		p.setEmail(rs.getString(\"email\"));\n		p.setSpecialty(rs.getString(\"specialty\"));\n		p.setMessageFilter(rs.getString(\"MessageFilter\"));\n		return p;\n	}\n'),(1318,'	public void setAMID(long amid) {\n		AMID = amid;\n	}\n'),(1319,'	public void setRoleString(String role) {\n		this.roleString = role;\n	}\n'),(1320,'	public void setLastName(String lastName) {\n		this.lastName = lastName;\n	}\n'),(1321,'	public void setFirstName(String firstName) {\n		this.firstName = firstName;\n	}\n'),(1322,'	public void setPhone1(String phone1) {\n		this.phone1 = phone1;\n	}\n'),(1323,'	public void setPhone2(String phone2) {\n		this.phone2 = phone2;\n	}\n'),(1324,'	public void setPhone3(String phone3) {\n		this.phone3 = phone3;\n	}\n'),(1325,'	public void setStreetAddress1(String streetAddress1) {\n		this.streetAddress1 = streetAddress1;\n	}\n'),(1326,'	public void setStreetAddress2(String streetAddress2) {\n		this.streetAddress2 = streetAddress2;\n	}\n'),(1327,'	public void setCity(String city) {\n		this.city = city;\n	}\n'),(1328,'	public void setState(String state) {\n		this.state = state;\n	}\n'),(1329,'	public void setZip1(String zip1) {\n		this.zip1 = zip1;\n	}\n'),(1330,'	public void setZip2(String zip2) {\n		this.zip2 = zip2;\n	}\n'),(1331,'	public void setEmail(String email) {\n		this.email = email;\n	}\n'),(1332,'	public void setSpecialty(String specialty) {\n		this.specialty = specialty;\n	}\n'),(1333,'	public PreparedStatement loadParameters(PreparedStatement ps, PersonnelBean p) throws SQLException {\n		int i = 1;\n		ps.setLong(i++, p.getAMID());\n		ps.setString(i++, p.getFirstName());\n		ps.setString(i++, p.getLastName());\n		ps.setString(i++, p.getPhone1());\n		ps.setString(i++, p.getPhone2());\n		ps.setString(i++, p.getPhone3());\n		ps.setString(i++, p.getStreetAddress1());\n		ps.setString(i++, p.getStreetAddress2());\n		ps.setString(i++, p.getCity());\n		ps.setString(i++, p.getState());\n		ps.setString(i++, p.getZip());\n		ps.setString(i++, p.getZip1());\n		ps.setString(i++, p.getZip2());\n		ps.setString(i++, p.getSpecialty());\n		ps.setString(i++, p.getEmail());\n		ps.setString(i++, p.getMessageFilter());\n		return ps;\n	}\n'),(1334,'	public long getAMID() {\n		return AMID;\n	}\n'),(1335,'	public String getPhone1() {\n		return phone1;\n	}\n'),(1336,'	public String getPhone2() {\n		return phone2;\n	}\n'),(1337,'	public String getPhone3() {\n		return phone3;\n	}\n'),(1338,'	public String getMessageFilter() {\n		return messageFilter;\n	}\n'),(1340,'	public List<DrugInteractionBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<DrugInteractionBean> list = new ArrayList<DrugInteractionBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1341,'	public DrugInteractionBean loadSingle(ResultSet rs) throws SQLException {\n		DrugInteractionBean drugIt = new DrugInteractionBean();\n		drugIt.setDescription(rs.getString(\"Description\"));\n		drugIt.setFirstDrug(rs.getString(\"FirstDrug\"));\n		drugIt.setSecondDrug(rs.getString(\"SecondDrug\"));\n		return drugIt;\n	}\n'),(1343,'	public PreparedStatement loadParameters(PreparedStatement ps, DrugInteractionBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1346,'	public List<PrescriptionBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<PrescriptionBean> list = new ArrayList<PrescriptionBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1347,'	public PrescriptionBean loadSingle(ResultSet rs) throws SQLException {\n		PrescriptionBean pres = new PrescriptionBean();\n		pres.setId(rs.getLong(\"ID\"));\n		pres.setVisitID(rs.getInt(\"VisitID\"));\n		pres.setStartDateStr(new SimpleDateFormat(\"MM/dd/yyyy\").format(new java.util.Date(rs.getDate(\n				\"StartDate\").getTime())));\n		pres.setEndDateStr(new SimpleDateFormat(\"MM/dd/yyyy\").format(new java.util.Date(rs.getDate(\"EndDate\")\n				.getTime())));\n		pres.setDosage(rs.getInt(\"Dosage\"));\n		pres.setInstructions(rs.getString(\"Instructions\"));\n		pres.setMedication(medLoader.loadSingle(rs));\n		return pres;\n	}\n'),(1348,'	public void setId(long id) {\n		this.id = id;\n	}\n'),(1349,'	public MedicationBean loadSingle(ResultSet rs) throws SQLException {\n		MedicationBean med = new MedicationBean(rs.getString(\"Code\"));\n		med.setDescription(rs.getString(\"Description\"));\n		return med;\n	}\n'),(1350,'	public PreparedStatement loadParameters(PreparedStatement ps, PrescriptionBean pres) throws SQLException {\n		ps.setLong(1, pres.getVisitID());\n		ps.setString(2, pres.getMedication().getNDCode());\n		ps.setDate(3, new java.sql.Date(pres.getStartDate().getTime()));\n		ps.setDate(4, new java.sql.Date(pres.getEndDate().getTime()));\n		ps.setInt(5, pres.getDosage());\n		ps.setString(6, pres.getInstructions());\n		return ps;\n	}\n'),(1351,'	public long getVisitID() {\n		return visitID;\n	}\n'),(1352,'	public int getDosage() {\n		return dosage;\n	}\n'),(1354,'	public List<OverrideReasonBean> loadList(ResultSet rs) throws SQLException {\n		List<OverrideReasonBean> list = new ArrayList<OverrideReasonBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1355,'	public OverrideReasonBean loadSingle(ResultSet rs) throws SQLException {\n		OverrideReasonBean orc = new OverrideReasonBean(rs.getString(\"Code\"));\n		orc.setDescription(rs.getString(\"Description\"));\n		return orc;\n	}\n'),(1357,'	public void setDescription(String description) {\n		this.description = description;\n	}\n'),(1359,'	public PreparedStatement loadParameters(PreparedStatement ps, OverrideReasonBean bean)\n			throws SQLException {\n		return null;\n	}\n'),(1360,'	public List<VerboseReferralBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<VerboseReferralBean> list = new ArrayList<VerboseReferralBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1361,'	public VerboseReferralBean loadSingle(ResultSet rs) throws SQLException {\n		VerboseReferralBean ref = new VerboseReferralBean();\n		ref.setId(rs.getInt(\"id\"));\n		ref.setSenderID(rs.getLong(\"SenderID\"));\n		ref.setReceiverID(rs.getLong(\"ReceiverID\"));\n		ref.setPatientID(rs.getInt(\"PatientID\"));\n		ref.setReferralDetails(rs.getString(\"ReferralDetails\"));\n		ref.setOvid(rs.getLong(\"OVID\"));\n		ref.setTimeStamp(dateFormat.format(rs.getTimestamp(\"TimeStamp\")));\n		ref.setViewedByHCP(rs.getBoolean(\"viewed_by_HCP\"));\n		ref.setViewedByPatient(rs.getBoolean(\"viewed_by_patient\"));\n		ref.setPriority(rs.getInt(\"PriorityCode\"));\n		ref.setOvDate(new SimpleDateFormat(\"MM/dd/yyyy\").format(rs.getDate(\"visitDate\")));\n		ref.setPatientName(rs.getString(\"patientName\"));\n		ref.setReceiverName(rs.getString(\"receiverName\"));\n		ref.setSenderName(rs.getString(\"senderName\"));\n		return ref;\n	}\n'),(1363,'	public void setId(long id) {\n		this.id = id;\n	}\n'),(1364,'	public void setSenderID(long senderID) {\n		this.senderID = senderID;\n	}\n'),(1365,'	public void setReceiverID(long receiverID) {\n		this.receiverID = receiverID;\n	}\n'),(1366,'	public void setPatientID(long patientID) {\n		this.patientID = patientID;\n	}\n'),(1367,'	public void setReferralDetails(String referralDetails) {\n		this.referralDetails = referralDetails;\n	}\n'),(1368,'	public void setOvid(long ovid) {\n		this.ovid = ovid;\n	}\n'),(1369,'	public void setTimeStamp(String timeStamp) {\n		this.timeStamp = timeStamp;\n	}\n'),(1370,'	public void setViewedByHCP(boolean viewedByHCP) {\n		this.viewedByHCP = viewedByHCP;\n	}\n'),(1371,'	public void setViewedByPatient(boolean viewedByPatient) {\n		this.viewedByPatient = viewedByPatient;\n	}\n'),(1372,'	public void setPriority(int priority) {\n		this.priority = priority;\n	}\n'),(1373,'	public void setOvDate(String ovDate) {\n		this.ovDate = ovDate;\n	}\n'),(1374,'	public void setPatientName(String patientName) {\n		this.patientName = patientName;\n	}\n'),(1375,'	public void setReceiverName(String receiverName) {\n		this.receiverName = receiverName;\n	}\n'),(1376,'	public void setSenderName(String senderName) {\n		this.senderName = senderName;\n	}\n'),(1378,'	public PreparedStatement loadParameters(PreparedStatement ps, VerboseReferralBean ref) throws SQLException {\n		throw new RuntimeException(\"Not Implemented\");\n	}\n'),(1379,'	public List<ApptBean> loadList(ResultSet rs) throws SQLException {\n		List<ApptBean> list = new ArrayList<ApptBean>();\n		while (rs.next())\n			list.add(loadSingle(rs));\n		return list;\n	}\n'),(1380,'	public ApptBean loadSingle(ResultSet rs) throws SQLException {\n		ApptBean bean = new ApptBean();\n		bean.setApptID(rs.getInt(\"appt_id\"));\n		bean.setApptType(rs.getString(\"appt_type\"));\n		bean.setPatient(rs.getLong(\"patient_id\"));\n		bean.setHcp(rs.getLong(\"doctor_id\"));\n		bean.setDate(rs.getTimestamp(\"sched_date\"));\n		bean.setComment(rs.getString(\"comment\"));\n		return bean;\n	}\n'),(1381,'	public PreparedStatement loadParameters(PreparedStatement ps, ApptBean bean) throws SQLException {\n		ps.setString(1, bean.getApptType());\n		ps.setLong(2, bean.getPatient());\n		ps.setLong(3, bean.getHcp());\n		ps.setTimestamp(4, bean.getDate());\n		ps.setString(5, bean.getComment());\n		return ps;\n	}\n'),(1382,'	public long getPatient() {\n		return patient;\n	}\n'),(1383,'	public long getHcp() {\n		return hcp;\n	}\n'),(1384,'	public String getComment() {\n		return comment;\n	}\n'),(1386,'	public void setApptID(int apptID) {\n		this.apptID = apptID;\n	}\n'),(1387,'	public void setApptType(String apptType) {\n		this.apptType = apptType;\n	}\n'),(1388,'	public void setPatient(long patient) {\n		this.patient = patient;\n	}\n'),(1389,'	public void setHcp(long hcp) {\n		this.hcp = hcp;\n	}\n'),(1390,'	public void setDate(Timestamp date) {\n		this.date = date;\n	}\n'),(1391,'	public void setComment(String comment) {\n		this.comment = comment;\n	}\n'),(1393,'	public List<MedicationBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<MedicationBean> list = new ArrayList<MedicationBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1396,'	public PreparedStatement loadParameters(PreparedStatement ps, MedicationBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1397,'	public List<ProcedureBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<ProcedureBean> list = new ArrayList<ProcedureBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1398,'	public ProcedureBean loadSingle(ResultSet rs) throws SQLException {\n		ProcedureBean procedure = new ProcedureBean(rs.getString(\"Code\"));\n		procedure.setDescription(rs.getString(\"Description\"));\n		procedure.setAttribute(rs.getString(\"Attribute\"));\n		if (loadOVProcedureID) {\n			procedure.setOvProcedureID(rs.getLong(\"ID\"));\n			procedure.setDate(rs.getDate(\"visitDate\"));\n		}\n		return procedure;\n	}\n'),(1400,'	public void setDescription(String description) {\n		this.description = description;\n	}\n'),(1401,'	public void setAttribute(String attrib) {\n		attribute = attrib;\n	}\n'),(1402,'	public void setOvProcedureID(long ovProcedureID) {\n		this.ovProcedureID = ovProcedureID;\n	}\n'),(1403,'	public void setDate(Date d) {\n		date = d;\n	}\n'),(1404,'	public PreparedStatement loadParameters(PreparedStatement ps, ProcedureBean bean) throws SQLException {\n		ps.setString(1, bean.getDescription());\n		return ps;\n	}\n'),(1406,'	public SurveyBean loadSingle(ResultSet rs) throws SQLException {\n		SurveyBean survey = new SurveyBean();\n		survey.setVisitID(rs.getLong(\"VisitID\"));\n		survey.setSurveyDate(rs.getTimestamp(\"SurveyDate\"));\n		survey.setExamRoomMinutes(rs.getInt(\"ExamRoomMinutes\"));\n		survey.setWaitingRoomMinutes(rs.getInt(\"WaitingRoomMinutes\"));\n		survey.setTreatmentSatisfaction(rs.getInt(\"TreatmentSatisfaction\"));\n		survey.setVisitSatisfaction(rs.getInt(\"VisitSatisfaction\"));\n		return survey;\n	}\n'),(1408,'	public void setExamRoomMinutes(int examRoomMinutes) {\n		this.examRoomMinutes = examRoomMinutes;\n	}\n'),(1409,'	public void setWaitingRoomMinutes(int waitingRoomMinutes) {\n		this.waitingRoomMinutes = waitingRoomMinutes;\n	}\n'),(1410,'	public void setTreatmentSatisfaction(int treatmentSatisfaction) {\n		this.treatmentSatisfaction = treatmentSatisfaction;\n	}\n'),(1411,'	public void setVisitSatisfaction(int visitSatisfaction) {\n		this.visitSatisfaction = visitSatisfaction;\n	}\n'),(1413,'	public PreparedStatement loadParameters(PreparedStatement ps, SurveyBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1414,'	public List<ReportRequestBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<ReportRequestBean> list = new ArrayList<ReportRequestBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1415,'	public ReportRequestBean loadSingle(ResultSet rs) throws SQLException {\n		ReportRequestBean b = new ReportRequestBean();\n		b.setID(rs.getLong(\"ID\"));\n		b.setRequesterMID(rs.getLong(\"RequesterMID\"));\n		b.setPatientMID(rs.getLong(\"PatientMID\"));\n		b.setRequestedDate(rs.getTimestamp(\"RequestedDate\"));\n		b.setViewedDate(rs.getTimestamp(\"ViewedDate\"));\n		b.setStatus(rs.getString(\"Status\"));\n		return b;\n	}\n'),(1417,'	public void setID(long iD) {\n		ID = iD;\n	}\n'),(1418,'	public void setRequesterMID(long requesterMID) {\n		this.requesterMID = requesterMID;\n	}\n'),(1419,'	public void setPatientMID(long patientMID) {\n		this.patientMID = patientMID;\n	}\n'),(1420,'	public void setStatus(String status) {\n		this.status = status;\n	}\n'),(1422,'	public PreparedStatement loadParameters(PreparedStatement ps, ReportRequestBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1423,'	public List<HospitalBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<HospitalBean> list = new ArrayList<HospitalBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1424,'	public HospitalBean loadSingle(ResultSet rs) throws SQLException {\n		HospitalBean hosp = new HospitalBean(rs.getString(\"HospitalID\"), rs.getString(\"HospitalName\"));\n		return hosp;\n	}\n'),(1427,'	public PreparedStatement loadParameters(PreparedStatement ps, HospitalBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1428,'	public List<ReferralBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<ReferralBean> list = new ArrayList<ReferralBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1429,'	public ReferralBean loadSingle(ResultSet rs) throws SQLException {\n		ReferralBean ref = new ReferralBean();\n		ref.setId(rs.getInt(\"id\"));\n		ref.setSenderID(rs.getLong(\"SenderID\"));\n		ref.setReceiverID(rs.getLong(\"ReceiverID\"));\n		ref.setPatientID(rs.getInt(\"PatientID\"));\n		ref.setReferralDetails(rs.getString(\"ReferralDetails\"));\n		ref.setOvid(rs.getLong(\"OVID\"));\n		ref.setTimeStamp(dateFormat.format(rs.getTimestamp(\"TimeStamp\")));\n		ref.setViewedByHCP(rs.getBoolean(\"viewed_by_HCP\"));\n		ref.setViewedByPatient(rs.getBoolean(\"viewed_by_patient\"));\n		ref.setPriority(rs.getInt(\"PriorityCode\"));\n		return ref;\n	}\n'),(1430,'	public PreparedStatement loadParameters(PreparedStatement ps, ReferralBean ref) throws SQLException {\n		ps.setLong(1, ref.getPatientID());\n		ps.setLong(2, ref.getSenderID());\n		ps.setLong(3, ref.getReceiverID());\n		ps.setString(4, ref.getReferralDetails());\n		ps.setLong(5, ref.getOvid());\n		ps.setBoolean(6, ref.isViewedByPatient());\n		ps.setBoolean(7, ref.isViewedByHCP());\n		ps.setInt(8, ref.getPriority());\n		return ps;\n	}\n'),(1431,'	public boolean isViewedByPatient() {\n		return viewedByPatient;\n	}\n'),(1432,'	public boolean isViewedByHCP() {\n		return viewedByHCP;\n	}\n'),(1433,'	public int getPriority() {\n		return priority;\n	}\n'),(1435,'	public List<SurveyResultBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<SurveyResultBean> list = new ArrayList<SurveyResultBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1436,'	public SurveyResultBean loadSingle(ResultSet rs) throws SQLException {\n		SurveyResultBean surveyResult = new SurveyResultBean();\n		surveyResult.setHCPMID(rs.getLong(\"mid\"));\n		surveyResult.setAvgExamRoomMinutes(rs.getFloat(\"AvgExamRoomMinutes\"));\n		surveyResult.setAvgTreatmentSatisfaction(rs.getFloat(\"AvgTreatmentSatisfation\"));\n		surveyResult.setAvgVisitSatisfaction(rs.getFloat(\"AvgVisitSatisfaction\"));\n		surveyResult.setAvgWaitingRoomMinutes(rs.getFloat(\"AvgWaitingRoomMinutes\"));\n		surveyResult.setHCPaddress1(rs.getString(\"address1\"));\n		surveyResult.setHCPaddress2(rs.getString(\"address2\"));\n		surveyResult.setHCPcity(rs.getString(\"city\"));\n		surveyResult.setHCPstate(rs.getString(\"state\"));\n		surveyResult.setHCPzip(rs.getString(\"zip\"));\n		surveyResult.setHCPhospital(rs.getString(\"hospitalID\"));\n		surveyResult.setHCPFirstName(rs.getString(\"firstName\"));\n		surveyResult.setHCPLastName(rs.getString(\"lastName\"));\n		surveyResult.setHCPspecialty(rs.getString(\"specialty\"));\n		surveyResult.setPercentSatisfactionResults(rs.getFloat(\"PercentSatisfactionResults\"));\n		return surveyResult;\n	}\n'),(1438,'	public void setHCPMID(long mid) {\n		hcpMID = mid;\n	}\n'),(1439,'	public void setAvgExamRoomMinutes(float examRoomMinutes) {\n		this.avgExamRmMinutues = examRoomMinutes;\n	}\n'),(1440,'	public void setAvgTreatmentSatisfaction(float treatmentSatisfaction) {\n		this.avgTreatmentSatisfaction = treatmentSatisfaction;\n	}\n'),(1441,'	public void setAvgVisitSatisfaction(float visitSatisfaction) {\n		this.avgVisitSatisfaction = visitSatisfaction;\n	}\n'),(1442,'	public void setAvgWaitingRoomMinutes(float waitingRoomMinutes) {\n		this.avgWaitingRmMinutes = waitingRoomMinutes;\n	}\n'),(1443,'	public void setHCPaddress1(String address1) {\n		this.hcpAddress1 = address1;\n	}\n'),(1444,'	public void setHCPaddress2(String address2) {\n		this.hcpAddress2 = address2;\n	}\n'),(1445,'	public void setHCPcity(String city) {\n		this.hcpCity = city;\n	}\n'),(1446,'	public void setHCPstate(String state) {\n		this.hcpState = state;\n	}\n'),(1447,'	public void setHCPzip(String zip) {\n		this.hcpZip = zip;\n	}\n'),(1448,'	public void setHCPhospital(String hospital) {\n		this.hcpHospitalID = hospital;\n	}\n'),(1449,'	public void setHCPFirstName(String firstName) {\n		this.hcpFirstName = firstName;\n	}\n'),(1450,'	public void setHCPLastName(String lastName) {\n		this.hcpLastName = lastName;\n	}\n'),(1451,'	public void setHCPspecialty(String specialty) {\n		this.hcpSpecialty = specialty;\n	}\n'),(1452,'	public void setPercentSatisfactionResults (float percent) {\n		this.percentSatResultsAvailable= percent;\n	}\n'),(1454,'	public PreparedStatement loadParameters(PreparedStatement ps, SurveyResultBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1455,'	public List<TransactionBean> loadList(ResultSet rs) throws SQLException {\n		List<TransactionBean> list = new ArrayList<TransactionBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1456,'	public TransactionBean loadSingle(ResultSet rs) throws SQLException {\n		TransactionBean t = new TransactionBean();\n		t.setAddedInfo(rs.getString(\"addedInfo\"));\n		t.setLoggedInMID(rs.getLong(\"loggedInMID\"));\n		t.setSecondaryMID(rs.getLong(\"secondaryMID\"));\n		t.setTimeLogged(rs.getTimestamp(\"timeLogged\"));\n		t.setTransactionType(TransactionType.parse(rs.getInt(\"transactionCode\")));\n		t.setTransactionID(rs.getLong(\"transactionID\"));\n		return t;\n	}\n'),(1458,'	public void setAddedInfo(String addedInfo) {\n		this.addedInfo = addedInfo;\n	}\n'),(1459,'	public void setLoggedInMID(long loggedInMID) {\n		this.loggedInMID = loggedInMID;\n	}\n'),(1460,'	public void setSecondaryMID(long secondaryMID) {\n		this.secondaryMID = secondaryMID;\n	}\n'),(1461,'	public void setTimeLogged(Timestamp timeLogged) {\n		this.timeLogged = timeLogged;\n	}\n'),(1463,'	public void setTransactionType(TransactionType tranactionType) {\n		this.transactionType = tranactionType;\n	}\n'),(1464,'	public void setTransactionID(long transactionID) {\n		this.transactionID = transactionID;\n	}\n'),(1466,'	public PreparedStatement loadParameters(PreparedStatement ps, TransactionBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1467,'	public List<DiagnosisBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<DiagnosisBean> list = new ArrayList<DiagnosisBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1468,'	public DiagnosisBean loadSingle(ResultSet rs) throws SQLException {\n		DiagnosisBean diag = new DiagnosisBean(rs.getString(\"Code\"), rs.getString(\"Description\"), rs.getString(\"Chronic\"));\n		if (loadOVDiagnosisID) {\n			diag.setOvDiagnosisID(rs.getInt(\"ID\"));\n			diag.setVisitID(rs.getLong(\"VisitID\"));\n		}\n		return diag;\n	}\n'),(1470,'	public void setOvDiagnosisID(long ovDiagnosisID) {\n		this.ovDiagnosisID = ovDiagnosisID;\n	}\n'),(1471,'	public void setVisitID(long vid) {\n		visitID = vid;\n	}\n'),(1473,'	public PreparedStatement loadParameters(PreparedStatement ps, DiagnosisBean bean) throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1474,'	public List<VisitReminderReturnForm> loadList(ResultSet rs) throws SQLException {\n		ArrayList<VisitReminderReturnForm> list = new ArrayList<VisitReminderReturnForm>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1475,'	public VisitReminderReturnForm loadSingle(ResultSet rs) throws SQLException {\n		int i = 0;\n		return new VisitReminderReturnForm(rs.getLong(++i),// hcpid\n				rs.getLong(++i),// patient ID\n				rs.getString(++i),// last name\n				rs.getString(++i),// first\n				rs.getString(++i),// phone1\n				rs.getString(++i),// phone2\n				rs.getString(++i));// ,// phone3\n	}\n'),(1477,'	public PreparedStatement loadParameters(PreparedStatement ps, VisitReminderReturnForm bean)\n			throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1478,'	public List<PatientInstructionsBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<PatientInstructionsBean> list = new ArrayList<PatientInstructionsBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1479,'	public PatientInstructionsBean loadSingle(ResultSet rs) throws SQLException {\n		PatientInstructionsBean bean = new PatientInstructionsBean();\n		bean.setName(rs.getString(\"Name\"));\n		bean.setComment(rs.getString(\"Comment\"));\n		bean.setUrl(rs.getString(\"URL\"));\n		bean.setModified(new java.util.Date(rs.getTimestamp(\"Modified\").getTime()));\n		bean.setId(rs.getLong(\"id\"));\n		bean.setVisitID(rs.getLong(\"visitID\"));\n		return bean;\n	}\n'),(1481,'	public void setName(String name) {\n		this.name = name;\n	}\n'),(1482,'	public void setComment(String comment) {\n		this.comment = comment;\n	}\n'),(1483,'	public void setUrl(String url) {\n		this.url = url;\n	}\n'),(1484,'	public void setModified(Date modified) {\n		this.modified = modified;\n	}\n'),(1485,'	public void setId(long id) {\n		this.id = id;\n	}\n'),(1486,'	public void setVisitID(long visitID) {\n		this.visitID = visitID;\n	}\n'),(1487,'	public PreparedStatement loadParameters(PreparedStatement ps, PatientInstructionsBean bean)\n			throws SQLException {\n		ps.setLong(1, bean.getVisitID());\n		ps.setTimestamp(2, new java.sql.Timestamp(bean.getModified().getTime()));\n		ps.setString(3, bean.getName());\n		ps.setString(4, bean.getUrl());\n		ps.setString(5, bean.getComment());\n		return ps;\n	}\n'),(1488,'	public long getVisitID() {\n		return visitID;\n	}\n'),(1489,'	public Date getModified() {\n		return modified;\n	}\n'),(1490,'	public String getName() {\n		return name;\n	}\n'),(1491,'	public String getUrl() {\n		return url;\n	}\n'),(1492,'	public String getComment() {\n		return comment;\n	}\n'),(1494,'	public List<HealthRecord> loadList(ResultSet rs) throws SQLException {\n		ArrayList<HealthRecord> list = new ArrayList<HealthRecord>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1495,'	public HealthRecord loadSingle(ResultSet rs) throws SQLException {\n		HealthRecord hr = new HealthRecord();\n		hr.setBloodPressureN(rs.getInt(\"BloodPressureN\"));\n		hr.setBloodPressureD(rs.getInt(\"BloodPressureD\"));\n		hr.setCholesterolHDL(rs.getInt(\"CholesterolHDL\"));\n		hr.setCholesterolLDL(rs.getInt(\"CholesterolLDL\"));\n		hr.setCholesterolTri(rs.getInt(\"CholesterolTri\"));\n		hr.setDateRecorded(rs.getTimestamp(\"AsOfDate\"));\n		hr.setSmoker(rs.getInt(\"SmokingStatus\"));\n		hr.setHeight(rs.getDouble(\"Height\"));\n		hr.setWeight(rs.getDouble(\"Weight\"));\n		hr.setPersonnelID(rs.getLong(\"HCPID\"));\n		hr.setPatientID(rs.getLong(\"PatientID\"));\n		return hr;\n	}\n'),(1496,'	public PreparedStatement loadParameters(PreparedStatement ps, HealthRecord bean) throws SQLException {\n		int i = 1;\n		ps.setLong(i++, bean.getPatientID());\n		ps.setDouble(i++, bean.getHeight());\n		ps.setDouble(i++, bean.getWeight());\n		ps.setInt(i++, bean.isSmoker() ? 1 : 0);\n		ps.setInt(i++, bean.getSmokingStatus());\n		ps.setInt(i++, bean.getBloodPressureN());\n		ps.setInt(i++, bean.getBloodPressureD());\n		ps.setInt(i++, bean.getCholesterolHDL());\n		ps.setInt(i++, bean.getCholesterolLDL());\n		ps.setInt(i++, bean.getCholesterolTri());\n		ps.setLong(i++, bean.getPersonnelID());\n		return ps;\n	}\n'),(1497,'	public long getPatientID() {\n		return patientID;\n	}\n'),(1498,'	public double getHeight() {\n		return Math.round(height * 10000) / 10000D;\n	}\n'),(1499,'	public double getWeight() {\n		return Math.round(weight * 10000) / 10000D;\n	}\n'),(1500,'	public int getSmokingStatus() {\n		return smokingStatus;\n	}\n'),(1501,'	public long getPersonnelID() {\n		return personnelID;\n	}\n'),(1502,'	public void setDateRecorded(Timestamp dateRecorded) {\n		this.dateRecorded = dateRecorded;\n	}\n'),(1506,'	public List<PrescriptionReportBean> loadList(ResultSet rs) throws SQLException {\n		ArrayList<PrescriptionReportBean> list = new ArrayList<PrescriptionReportBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1507,'	public PrescriptionReportBean loadSingle(ResultSet rs) throws SQLException {\n		PrescriptionReportBean pres = new PrescriptionReportBean();\n		pres.setOfficeVisit(ovLoader.loadSingle(rs));\n		pres.setPrescription(presLoader.loadSingle(rs));\n		return pres;\n	}\n'),(1509,'	public void setOfficeVisit(OfficeVisitBean officeVisit) {\n		this.officeVisit = officeVisit;\n	}\n'),(1510,'	public void setPrescription(PrescriptionBean prescription) {\n		this.prescription = prescription;\n	}\n'),(1512,'	public PreparedStatement loadParameters(PreparedStatement ps, PrescriptionReportBean pres)\n			throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1513,'	public OperationalProfile loadSingle(ResultSet rs) throws SQLException {\n		OperationalProfile op = new OperationalProfile();\n		int grandTotal = 0;\n		int grandPatient = 0;\n		int grandPersonnel = 0;\n		while (rs.next()) {\n			TransactionType type = TransactionType.parse(rs.getInt(\"TransactionCode\"));\n			int totalCount = rs.getInt(\"TotalCount\");\n			int patientCount = rs.getInt(\"PatientCount\");\n			int personnelCount = rs.getInt(\"PersonnelCount\");\n			op.getTotalCount().put(type, totalCount);\n			op.getPatientCount().put(type, patientCount);\n			op.getPersonnelCount().put(type, personnelCount);\n			grandTotal += totalCount;\n			grandPatient += patientCount;\n			grandPersonnel += personnelCount;\n		}\n		op.setNumTotalTransactions(grandTotal);\n		op.setNumPatientTransactions(grandPatient);\n		op.setNumPersonnelTransactions(grandPersonnel);\n		return op;\n	}\n'),(1514,'	public HashMap<TransactionType, Integer> getTotalCount() {\n		return totalCount;\n	}\n'),(1515,'	public HashMap<TransactionType, Integer> getPatientCount() {\n		return patientCount;\n	}\n'),(1516,'	public HashMap<TransactionType, Integer> getPersonnelCount() {\n		return personnelCount;\n	}\n'),(1517,'	public void setNumTotalTransactions(int numTransactions) {\n		this.numTotalTransactions = numTransactions;\n	}\n'),(1518,'	public void setNumPatientTransactions(int numPatientTransactions) {\n		this.numPatientTransactions = numPatientTransactions;\n	}\n'),(1519,'	public void setNumPersonnelTransactions(int numPersonnelTransactions) {\n		this.numPersonnelTransactions = numPersonnelTransactions;\n	}\n'),(1521,'	public PreparedStatement loadParameters(PreparedStatement ps, OperationalProfile bean)\n			throws SQLException {\n		throw new IllegalStateException(\"unimplemented!\");\n	}\n'),(1522,'	public List<MessageBean> loadList(ResultSet rs) throws SQLException {\n		List<MessageBean> list = new ArrayList<MessageBean>();\n		while (rs.next())\n			list.add(loadSingle(rs));\n		return list;\n	}\n'),(1523,'	public MessageBean loadSingle(ResultSet rs) throws SQLException {\n		MessageBean message = new MessageBean();\n		message.setMessageId(rs.getLong(\"message_id\"));\n		message.setFrom(rs.getLong(\"from_id\"));\n		message.setTo(rs.getLong(\"to_id\"));\n		message.setSubject(rs.getString(\"subject\"));\n		message.setBody(rs.getString(\"message\"));\n		message.setSentDate(rs.getTimestamp(\"sent_date\"));\n		message.setRead(rs.getInt(\"been_read\"));\n		message.setParentMessageId(rs.getLong(\"parent_msg_id\"));\n		return message;\n	}\n'),(1524,'	public PreparedStatement loadParameters(PreparedStatement ps, MessageBean message) throws SQLException {\n		ps.setLong(1, message.getFrom());\n		ps.setLong(2, message.getTo());\n		ps.setString(3, message.getBody());\n		ps.setString(4, message.getSubject());\n		ps.setInt(5, message.getRead());\n		if (message.getParentMessageId() != 0L) {\n				ps.setLong(6, message.getParentMessageId());\n		}\n		return ps;\n	}\n'),(1525,'	public long getParentMessageId() {\n		return this.parentMsgId;\n	}\n'),(1526,'	public void setMessageId(long id) {\n		this.id = id;\n	}\n'),(1527,'	public void setSentDate(Timestamp timestamp) {\n		this.timestamp = timestamp;\n	}\n'),(1528,'	public void setParentMessageId(long parentMsgId) {\n		this.parentMsgId = parentMsgId;\n	}\n'),(1530,'	public List<ApptTypeBean> loadList(ResultSet rs) throws SQLException {\n		List<ApptTypeBean> list = new ArrayList<ApptTypeBean>();\n		while (rs.next())\n			list.add(loadSingle(rs));\n		return list;\n	}\n'),(1531,'	public ApptTypeBean loadSingle(ResultSet rs) throws SQLException {\n		ApptTypeBean apptType = new ApptTypeBean();\n		apptType.setName(rs.getString(\"appt_type\"));\n		apptType.setDuration(rs.getInt(\"duration\"));\n		return apptType;\n	}\n'),(1532,'	public PreparedStatement loadParameters(PreparedStatement ps, ApptTypeBean apptType) throws SQLException {\n		ps.setString(1, apptType.getName());\n		ps.setInt(2, apptType.getDuration());\n		return ps;\n	}\n'),(1534,'	public void setName(String name) {\n		this.name = name;\n	}\n'),(1535,'	public void setDuration(int duration) {\n		this.duration = duration;\n	}\n'),(1537,'	public List<PatientBean> loadList(ResultSet rs) throws SQLException {\n		List<PatientBean> list = new ArrayList<PatientBean>();\n		while (rs.next()) {\n			list.add(loadSingle(rs));\n		}\n		return list;\n	}\n'),(1538,'	public PatientBean loadSingle(ResultSet rs) throws SQLException {\n		PatientBean p = new PatientBean();\n		p.setMID(rs.getInt(\"MID\"));\n		p.setFirstName(rs.getString(\"firstName\"));\n		p.setLastName(rs.getString(\"LastName\"));\n		Date dateOfBirth = rs.getDate(\"DateOfBirth\");\n		if (dateOfBirth != null)\n			p.setDateOfBirthStr(new SimpleDateFormat(\"MM/dd/yyyy\").format(dateOfBirth));\n		Date dateOfDeath = rs.getDate(\"DateOfDeath\");\n		if (dateOfDeath != null)\n			p.setDateOfDeathStr(new SimpleDateFormat(\"MM/dd/yyyy\").format(dateOfDeath));\n		p.setCauseOfDeath(rs.getString(\"CauseOfDeath\"));\n		p.setEmail(rs.getString(\"Email\"));\n		p.setStreetAddress1(rs.getString(\"address1\"));\n		p.setStreetAddress2(rs.getString(\"address2\"));\n		p.setCity(rs.getString(\"City\"));\n		p.setState(rs.getString(\"State\"));\n		p.setZip1((rs.getString(\"Zip1\")));\n		p.setZip2((rs.getString(\"Zip2\")));\n		p.setPhone1((rs.getString(\"phone1\")));\n		p.setPhone2((rs.getString(\"phone2\")));\n		p.setPhone3((rs.getString(\"phone3\")));\n		p.setEmergencyName(rs.getString(\"eName\"));\n		p.setEmergencyPhone1(rs.getString(\"ePhone1\"));\n		p.setEmergencyPhone2(rs.getString(\"ePhone2\"));\n		p.setEmergencyPhone3(rs.getString(\"ePhone3\"));\n		p.setIcName(rs.getString(\"icName\"));\n		p.setIcAddress1(rs.getString(\"icAddress1\"));\n		p.setIcAddress2(rs.getString(\"icAddress2\"));\n		p.setIcCity(rs.getString(\"icCity\"));\n		p.setIcState(rs.getString(\"icState\"));\n		p.setIcZip1(rs.getString(\"icZip1\"));\n		p.setIcZip2(rs.getString(\"icZip2\"));\n		p.setIcPhone1(rs.getString(\"icPhone1\"));\n		p.setIcPhone2(rs.getString(\"icPhone2\"));\n		p.setIcPhone3(rs.getString(\"icPhone3\"));\n		p.setIcID(rs.getString(\"icID\"));\n		p.setMotherMID(rs.getString(\"MotherMID\"));\n		p.setFatherMID(rs.getString(\"FatherMID\"));\n		p.setBloodTypeStr(rs.getString(\"BloodType\"));\n		p.setEthnicityStr(rs.getString(\"Ethnicity\"));\n		p.setGenderStr(rs.getString(\"Gender\"));\n		p.setTopicalNotes(rs.getString(\"TopicalNotes\"));\n		p.setCreditCardType(rs.getString(\"CreditCardType\"));\n		p.setCreditCardNumber(rs.getString(\"CreditCardNumber\"));\n		p.setMessageFilter(rs.getString(\"MessageFilter\"));\n		p.setDirectionsToHome(rs.getString(\"DirectionsToHome\"));\n		p.setReligion(rs.getString(\"Religion\"));\n		p.setLanguage(rs.getString(\"Language\"));\n		p.setSpiritualPractices(rs.getString(\"SpiritualPractices\"));\n		p.setAlternateName(rs.getString(\"AlternateName\"));\n		return p;\n	}\n'),(1540,'	public void setFirstName(String firstName) {\n		this.firstName = firstName;\n	}\n'),(1541,'	public void setLastName(String lastName) {\n		this.lastName = lastName;\n	}\n'),(1542,'	public void setDateOfBirthStr(String dateOfBirthStr) {\n		this.dateOfBirthStr = dateOfBirthStr;\n	}\n'),(1543,'	public void setDateOfDeathStr(String dateOfDeathStr) {\n		this.dateOfDeathStr = dateOfDeathStr;\n	}\n'),(1544,'	public void setCauseOfDeath(String causeOfDeath) {\n		this.causeOfDeath = causeOfDeath;\n	}\n'),(1545,'	public void setEmail(String email) {\n		this.email = email;\n	}\n'),(1546,'	public void setStreetAddress1(String streetAddress1) {\n		this.streetAddress1 = streetAddress1;\n	}\n'),(1547,'	public void setStreetAddress2(String streetAddress2) {\n		this.streetAddress2 = streetAddress2;\n	}\n'),(1548,'	public void setCity(String city) {\n		this.city = city;\n	}\n'),(1549,'	public void setState(String state) {\n		this.state = state;\n	}\n'),(1550,'	public void setZip1(String zip1) {\n		this.zip1 = zip1;\n	}\n'),(1551,'	public void setZip2(String zip2) {\n		this.zip2 = zip2;\n	}\n'),(1552,'	public void setPhone1(String phone1) {\n		this.phone1 = phone1;\n	}\n'),(1553,'	public void setPhone2(String phone2) {\n		this.phone2 = phone2;\n	}\n'),(1554,'	public void setPhone3(String phone3) {\n		this.phone3 = phone3;\n	}\n'),(1555,'	public void setEmergencyName(String emergencyName) {\n		this.emergencyName = emergencyName;\n	}\n'),(1556,'	public void setEmergencyPhone1(String emergencyPhone1) {\n		this.emergencyPhone1 = emergencyPhone1;\n	}\n'),(1557,'	public void setEmergencyPhone2(String emergencyPhone2) {\n		this.emergencyPhone2 = emergencyPhone2;\n	}\n'),(1558,'	public void setEmergencyPhone3(String emergencyPhone3) {\n		this.emergencyPhone3 = emergencyPhone3;\n	}\n'),(1559,'	public void setIcName(String icName) {\n		this.icName = icName;\n	}\n'),(1560,'	public void setIcAddress1(String icAddress1) {\n		this.icAddress1 = icAddress1;\n	}\n'),(1561,'	public void setIcAddress2(String icAddress2) {\n		this.icAddress2 = icAddress2;\n	}\n'),(1562,'	public void setIcCity(String icCity) {\n		this.icCity = icCity;\n	}\n'),(1563,'	public void setIcState(String icState) {\n		this.icState = icState;\n	}\n'),(1564,'	public void setIcZip1(String icZip1) {\n		this.icZip1 = icZip1;\n	}\n'),(1565,'	public void setIcZip2(String icZip2) {\n		this.icZip2 = icZip2;\n	}\n'),(1566,'	public void setIcPhone1(String icPhone1) {\n		this.icPhone1 = icPhone1;\n	}\n'),(1567,'	public void setIcPhone2(String icPhone2) {\n		this.icPhone2 = icPhone2;\n	}\n'),(1568,'	public void setIcPhone3(String icPhone3) {\n		this.icPhone3 = icPhone3;\n	}\n'),(1569,'	public void setIcID(String icID) {\n		this.icID = icID;\n	}\n'),(1570,'	public void setMotherMID(String motherMID) {\n		this.motherMID = motherMID;\n	}\n'),(1571,'	public void setFatherMID(String fatherMID) {\n		this.fatherMID = fatherMID;\n	}\n'),(1572,'	public void setTopicalNotes(String topicalNotes) {\n		this.topicalNotes = topicalNotes;\n	}\n'),(1573,'	public void setCreditCardType(String creditCardType) {\n		this.creditCardType = creditCardType;\n	}\n'),(1574,'	public void setCreditCardNumber(String creditCardNumber) {\n		this.creditCardNumber = creditCardNumber;\n	}\n'),(1575,'	public void setDirectionsToHome(String directionsToHome) {\n		this.directionsToHome = directionsToHome;\n	}\n'),(1576,'	public void setReligion(String religion) {\n		this.religion = religion;\n	}\n'),(1577,'	public void setLanguage(String language) {\n		this.language = language;\n	}\n'),(1578,'	public void setSpiritualPractices(String spiritualPractices) {\n		this.spiritualPractices = spiritualPractices;\n	}\n'),(1579,'	public void setAlternateName(String alternateName) {\n		this.alternateName = alternateName;\n	}\n'),(1580,'	public PatientHistoryBean loadSingleHistory(ResultSet rs) throws SQLException {\n		PatientHistoryBean p = new PatientHistoryBean();\n		p.setChangeMID(rs.getLong(\"changeMID\"));\n		Date changeDate = rs.getDate(\"changeDate\");\n		if (changeDate != null) \n			p.setChangeDateStr(new SimpleDateFormat(\"MM/dd/yyyy\").format(changeDate));\n		p.setMID(rs.getInt(\"MID\"));\n		p.setFirstName(rs.getString(\"firstName\"));\n		p.setLastName(rs.getString(\"LastName\"));\n		Date dateOfBirth = rs.getDate(\"DateOfBirth\");\n		if (dateOfBirth != null)\n			p.setDateOfBirthStr(new SimpleDateFormat(\"MM/dd/yyyy\").format(dateOfBirth));\n		Date dateOfDeath = rs.getDate(\"DateOfDeath\");\n		if (dateOfDeath != null)\n			p.setDateOfDeathStr(new SimpleDateFormat(\"MM/dd/yyyy\").format(dateOfDeath));\n		p.setCauseOfDeath(rs.getString(\"CauseOfDeath\"));\n		p.setEmail(rs.getString(\"Email\"));\n		p.setStreetAddress1(rs.getString(\"address1\"));\n		p.setStreetAddress2(rs.getString(\"address2\"));\n		p.setCity(rs.getString(\"City\"));\n		p.setState(rs.getString(\"State\"));\n		p.setZip1((rs.getString(\"Zip1\")));\n		p.setZip2((rs.getString(\"Zip2\")));\n		p.setPhone1((rs.getString(\"phone1\")));\n		p.setPhone2((rs.getString(\"phone2\")));\n		p.setPhone3((rs.getString(\"phone3\")));\n		p.setEmergencyName(rs.getString(\"eName\"));\n		p.setEmergencyPhone1(rs.getString(\"ePhone1\"));\n		p.setEmergencyPhone2(rs.getString(\"ePhone2\"));\n		p.setEmergencyPhone3(rs.getString(\"ePhone3\"));\n		p.setIcName(rs.getString(\"icName\"));\n		p.setIcAddress1(rs.getString(\"icAddress1\"));\n		p.setIcAddress2(rs.getString(\"icAddress2\"));\n		p.setIcCity(rs.getString(\"icCity\"));\n		p.setIcState(rs.getString(\"icState\"));\n		p.setIcZip1(rs.getString(\"icZip1\"));\n		p.setIcZip2(rs.getString(\"icZip2\"));\n		p.setIcPhone1(rs.getString(\"icPhone1\"));\n		p.setIcPhone2(rs.getString(\"icPhone2\"));\n		p.setIcPhone3(rs.getString(\"icPhone3\"));\n		p.setIcID(rs.getString(\"icID\"));\n		p.setMotherMID(rs.getString(\"MotherMID\"));\n		p.setFatherMID(rs.getString(\"FatherMID\"));\n		p.setBloodTypeStr(rs.getString(\"BloodType\"));\n		p.setEthnicityStr(rs.getString(\"Ethnicity\"));\n		p.setGenderStr(rs.getString(\"Gender\"));\n		p.setTopicalNotes(rs.getString(\"TopicalNotes\"));\n		p.setCreditCardType(rs.getString(\"CreditCardType\"));\n		p.setCreditCardNumber(rs.getString(\"CreditCardNumber\"));\n		p.setMessageFilter(rs.getString(\"MessageFilter\"));\n		p.setDirectionsToHome(rs.getString(\"DirectionsToHome\"));\n		p.setReligion(rs.getString(\"Religion\"));\n		p.setLanguage(rs.getString(\"Language\"));\n		p.setSpiritualPractices(rs.getString(\"SpiritualPractices\"));\n		p.setAlternateName(rs.getString(\"AlternateName\"));\n		return p;\n	}\n'),(1582,'	public void setChangeMID(long mid) {\n		this.changeMID = mid;\n	}\n'),(1583,'	public void setChangeDateStr(String changeDate) {\n		this.changeDateStr = changeDate;\n	}\n'),(1584,'	public void setMID(long mid) {\n		MID = mid;\n	}\n'),(1585,'	public void setFirstName(String firstName) {\n		this.firstName = firstName;\n	}\n'),(1586,'	public void setLastName(String lastName) {\n		this.lastName = lastName;\n	}\n'),(1587,'	public void setDateOfBirthStr(String dateOfBirthStr) {\n		this.dateOfBirthStr = dateOfBirthStr;\n	}\n'),(1588,'	public void setDateOfDeathStr(String dateOfDeathStr) {\n		this.dateOfDeathStr = dateOfDeathStr;\n	}\n'),(1589,'	public void setCauseOfDeath(String causeOfDeath) {\n		this.causeOfDeath = causeOfDeath;\n	}\n'),(1590,'	public void setEmail(String email) {\n		this.email = email;\n	}\n'),(1591,'	public void setStreetAddress1(String streetAddress1) {\n		this.streetAddress1 = streetAddress1;\n	}\n'),(1592,'	public void setStreetAddress2(String streetAddress2) {\n		this.streetAddress2 = streetAddress2;\n	}\n'),(1593,'	public void setCity(String city) {\n		this.city = city;\n	}\n'),(1594,'	public void setState(String state) {\n		this.state = state;\n	}\n'),(1595,'	public void setZip1(String zip1) {\n		this.zip1 = zip1;\n	}\n'),(1596,'	public void setZip2(String zip2) {\n		this.zip2 = zip2;\n	}\n'),(1597,'	public void setPhone1(String phone1) {\n		this.phone1 = phone1;\n	}\n'),(1598,'	public void setPhone2(String phone2) {\n		this.phone2 = phone2;\n	}\n'),(1599,'	public void setPhone3(String phone3) {\n		this.phone3 = phone3;\n	}\n'),(1600,'	public void setEmergencyName(String emergencyName) {\n		this.emergencyName = emergencyName;\n	}\n'),(1601,'	public void setEmergencyPhone1(String emergencyPhone1) {\n		this.emergencyPhone1 = emergencyPhone1;\n	}\n'),(1602,'	public void setEmergencyPhone2(String emergencyPhone2) {\n		this.emergencyPhone2 = emergencyPhone2;\n	}\n'),(1603,'	public void setEmergencyPhone3(String emergencyPhone3) {\n		this.emergencyPhone3 = emergencyPhone3;\n	}\n'),(1604,'	public void setIcName(String icName) {\n		this.icName = icName;\n	}\n'),(1605,'	public void setIcAddress1(String icAddress1) {\n		this.icAddress1 = icAddress1;\n	}\n'),(1606,'	public void setIcAddress2(String icAddress2) {\n		this.icAddress2 = icAddress2;\n	}\n'),(1607,'	public void setIcCity(String icCity) {\n		this.icCity = icCity;\n	}\n'),(1608,'	public void setIcState(String icState) {\n		this.icState = icState;\n	}\n'),(1609,'	public void setIcZip1(String icZip1) {\n		this.icZip1 = icZip1;\n	}\n'),(1610,'	public void setIcZip2(String icZip2) {\n		this.icZip2 = icZip2;\n	}\n'),(1611,'	public void setIcPhone1(String icPhone1) {\n		this.icPhone1 = icPhone1;\n	}\n'),(1612,'	public void setIcPhone2(String icPhone2) {\n		this.icPhone2 = icPhone2;\n	}\n'),(1613,'	public void setIcPhone3(String icPhone3) {\n		this.icPhone3 = icPhone3;\n	}\n'),(1614,'	public void setIcID(String icID) {\n		this.icID = icID;\n	}\n'),(1615,'	public void setMotherMID(String motherMID) {\n		this.motherMID = motherMID;\n	}\n'),(1616,'	public void setFatherMID(String fatherMID) {\n		this.fatherMID = fatherMID;\n	}\n'),(1617,'	public void setTopicalNotes(String topicalNotes) {\n		this.topicalNotes = topicalNotes;\n	}\n'),(1618,'	public void setCreditCardType(String creditCardType) {\n		this.creditCardType = creditCardType;\n	}\n'),(1619,'	public void setCreditCardNumber(String creditCardNumber) {\n		this.creditCardNumber = creditCardNumber;\n	}\n'),(1620,'	public void setMessageFilter(String messageFilter) {\n		this.messageFilter = messageFilter;\n	}\n'),(1621,'	public void setDirectionsToHome(String directionsToHome) {\n		this.directionsToHome = directionsToHome;\n	}\n'),(1622,'	public void setReligion(String religion) {\n		this.religion = religion;\n	}\n'),(1623,'	public void setLanguage(String language) {\n		this.language = language;\n	}\n'),(1624,'	public void setSpiritualPractices(String spiritualPractices) {\n		this.spiritualPractices = spiritualPractices;\n	}\n'),(1625,'	public void setAlternateName(String alternateName) {\n		this.alternateName = alternateName;\n	}\n'),(1626,'	public PreparedStatement loadParameters(PreparedStatement ps, PatientBean p) throws SQLException {\n		int i = 1;\n		ps.setString(i++, p.getFirstName());\n		ps.setString(i++, p.getLastName());\n		ps.setString(i++, p.getEmail());\n		ps.setString(i++, p.getStreetAddress1());\n		ps.setString(i++, p.getStreetAddress2());\n		ps.setString(i++, p.getCity());\n		ps.setString(i++, p.getState());\n		ps.setString(i++, p.getZip1());\n		ps.setString(i++, p.getZip2());\n		ps.setString(i++, p.getPhone1());\n		ps.setString(i++, p.getPhone2());\n		ps.setString(i++, p.getPhone3());\n		ps.setString(i++, p.getEmergencyName());\n		ps.setString(i++, p.getEmergencyPhone1());\n		ps.setString(i++, p.getEmergencyPhone2());\n		ps.setString(i++, p.getEmergencyPhone3());\n		ps.setString(i++, p.getIcName());\n		ps.setString(i++, p.getIcAddress1());\n		ps.setString(i++, p.getIcAddress2());\n		ps.setString(i++, p.getIcCity());\n		ps.setString(i++, p.getIcState());\n		ps.setString(i++, p.getIcZip1());\n		ps.setString(i++, p.getIcZip2());\n		ps.setString(i++, p.getIcPhone1());\n		ps.setString(i++, p.getIcPhone2());\n		ps.setString(i++, p.getIcPhone3());\n		ps.setString(i++, p.getIcID());\n		Date date = null;\n		try {\n			date = new java.sql.Date(new SimpleDateFormat(\"MM/dd/yyyy\").parse(p.getDateOfBirthStr())\n					.getTime());\n		} catch (ParseException e) {\n			e.printStackTrace();\n		}\n		ps.setDate(i++, date);\n		date = null;\n		try {\n			date = new java.sql.Date(new SimpleDateFormat(\"MM/dd/yyyy\").parse(p.getDateOfDeathStr())\n					.getTime());\n		} catch (ParseException e) {\n			if (\"\".equals(p.getDateOfDeathStr()))\n				date = null;\n			else\n				e.printStackTrace();\n		}\n		ps.setDate(i++, date);\n		ps.setString(i++, p.getCauseOfDeath());\n		ps.setString(i++, p.getMotherMID());\n		ps.setString(i++, p.getFatherMID());\n		ps.setString(i++, p.getBloodType().getName());\n		ps.setString(i++, p.getEthnicity().getName());\n		ps.setString(i++, p.getGender().getName());\n		ps.setString(i++, p.getTopicalNotes());\n		ps.setString(i++, p.getCreditCardType());\n		ps.setString(i++, p.getCreditCardNumber());\n		ps.setString(i++, p.getMessageFilter());\n		ps.setString(i++, p.getDirectionsToHome());\n		ps.setString(i++, p.getReligion());\n		ps.setString(i++, p.getLanguage());\n		ps.setString(i++, p.getSpiritualPractices());\n		ps.setString(i++, p.getAlternateName());\n		return ps;\n	}\n'),(1627,'	public String getIcName() {\n		return icName;\n	}\n'),(1628,'	public String getIcAddress1() {\n		return icAddress1;\n	}\n'),(1629,'	public String getIcAddress2() {\n		return icAddress2;\n	}\n'),(1630,'	public String getIcID() {\n		return icID;\n	}\n'),(1631,'	public String getDateOfBirthStr() {\n		return dateOfBirthStr;\n	}\n'),(1632,'	public String getDateOfDeathStr() {\n		return dateOfDeathStr;\n	}\n'),(1633,'	public String getMotherMID() {\n		return motherMID;\n	}\n'),(1634,'	public String getFatherMID() {\n		return fatherMID;\n	}\n'),(1636,'	public Ethnicity getEthnicity() {\n		return ethnicity;\n	}\n'),(1638,'	public String getTopicalNotes() {\n		return topicalNotes;\n	}\n'),(1639,'	public String getCreditCardType() {\n		return creditCardType;\n	}\n'),(1640,'	public String getCreditCardNumber() {\n		return creditCardNumber;\n	}\n'),(1641,'	public String getMessageFilter() {\n		return messageFilter;\n	}\n'),(1642,'	public String getDirectionsToHome() {\n		return directionsToHome;\n	}\n'),(1643,'	public String getReligion() {\n		return religion;\n	}\n'),(1644,'	public String getLanguage() {\n		return language;\n	}\n'),(1645,'	public String getSpiritualPractices() {\n		return spiritualPractices;\n	}\n'),(1646,'	public String getAlternateName() {\n		return alternateName;\n	}\n'),(1648,'	public Object produceDataset(Map params) throws DatasetProduceException {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset(){\n			private static final long serialVersionUID = -8238489914590553747L;\n			protected void finalize() throws Throwable {\n				super.finalize();\n			}\n        };\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n        for(AdverseEventBean event : adverseEvents)\n        {\n        	Calendar cal = Calendar.getInstance();\n        	try {\n				cal.setTime(sdf.parse(event.getDate()));\n			} catch (ParseException e) {\n				e.printStackTrace();\n				throw new DatasetProduceException(e.getMessage());\n			}\n        	int monthOfReport = cal.get(Calendar.MONTH);\n        	values[monthOfReport]++;\n        }\n        for(int i = 0; i < 12; i++)\n        {\n        	dataset.addValue(values[i],codeName,months[i]);\n        }\n        return dataset;\n    }\n'),(1650,'	public String getDate() {\n		return date;\n	}\n'),(1653,'	public void initializeDiagnosisStatistics ( DiagnosisStatisticsBean DiagnosisBean, String name ) {\n		this.dsBean = DiagnosisBean;\n	    this.diagnosisName = name;\n	    values = new int[2];\n	    values[0] = (int) dsBean.getZipStats();\n	    values[1] = (int) dsBean.getRegionStats();\n	}\n'),(1654,'	public void initializeAvgDiagnosisStatistics( DiagnosisStatisticsBean avgBean, DiagnosisStatisticsBean dsBean, String name ) {\n		this.dsBean = dsBean;\n		this.avgBean = avgBean;\n		this.diagnosisName = name;\n		this.epidemic = true;\n		values = new int[4];\n		values[0] = (int) dsBean.getZipStats();\n		values[1] = (int) avgBean.getZipStats();\n		values[2] = (int) dsBean.getRegionStats();\n		values[3] = (int) avgBean.getRegionStats();\n	}\n'),(1655,'		public Object produceDataset(Map params) throws DatasetProduceException {\n	        DefaultCategoryDataset dataset = new DefaultCategoryDataset(){\n				private static final long serialVersionUID = 1L;\n				protected void finalize() throws Throwable {\n					super.finalize();\n				}\n	        };\n	        if ( epidemic == false ) {\n	        	seriesName = new String[2];\n	        	dataset.addValue(values[0], diagnosisName, \"Zipcode Cases\");\n	        	dataset.addValue(values[1], diagnosisName, \"Region Cases\");\n	        	seriesName[0] = \"Zipcode Case\";\n	        	seriesName[1] = \"Region Cases\";\n	        } else if ( epidemic == true ) {\n	        	seriesName = new String[4];\n	        	dataset.addValue(values[0], diagnosisName, \"Current Week Zipcode Cases\");\n	        	dataset.addValue(values[1], diagnosisName, \"Average Prior Zipcode Cases\");\n	        	dataset.addValue(values[2], diagnosisName, \"Current Week Region Cases\");\n	        	dataset.addValue(values[3], diagnosisName, \"Average Prior Region Cases\");\n	        	seriesName[0] = \"Current Week Zipcode Cases\";\n	        	seriesName[1] = \"Average Prior Zipcode Cases\";\n	        	seriesName[2] = \"Current Week Region Cases\";\n	        	seriesName[3] = \"Average Prior Region Cases\";\n	        }\n	        return dataset;\n	    }\n'),(1657,'    public boolean hasData() {\n    	Date threeYearsAgo = new Date();\n    	Date recDate;\n    	String dateStr;\n    	DateFormat year = new SimpleDateFormat(\"yyyy\");\n    	DateFormat rest = new SimpleDateFormat(\"/MM/dd HHmma\");\n    	DateFormat sdf = new SimpleDateFormat(\"yyyy/MM/dd HHmma\");\n		dateStr = year.format(threeYearsAgo);\n		dateStr = \"\" + (Integer.parseInt(dateStr) - 3);\n		dateStr += rest.format(threeYearsAgo);\n		try {\n			threeYearsAgo = sdf.parse(dateStr);\n		} catch (ParseException e) {\n			return false;\n		}\n    	for (LabProcedureBean lpb : lpBeans) {\n    		recDate = new Date(lpb.getTimestamp().getTime());\n    		if (recDate.before(threeYearsAgo))\n    			continue;\n    		else\n    			return true;\n    	}\n    	return false;\n    }\n'),(1658,'	public Object produceDataset(Map params) throws DatasetProduceException {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset(){\n			private static final long serialVersionUID = 1L;\n			protected void finalize() throws Throwable {\n				super.finalize();\n			}\n        };\n        Calendar cur = Calendar.getInstance();\n        int curQuarter = cur.get(Calendar.MONTH) / 3;\n        for(LabProcedureBean lpb : lpBeans) {\n        	Calendar cal = Calendar.getInstance();\n			cal.setTime(lpb.getTimestamp());\n			int yearOfReport = cal.get(Calendar.YEAR);\n        	int monthOfReport = cal.get(Calendar.MONTH);\n        	int quarterOfReport = monthOfReport / 3;\n        	int quarter = historyLength - 4*(cur.get(Calendar.YEAR)-yearOfReport) - (curQuarter - quarterOfReport) - 1;\n        	if (quarter < 0)\n        		continue;\n        	double newValue = 0;\n       		newValue = lpb.getNumericalResultAsDouble();\n        	values[quarter] = (values[quarter]*numEntries[quarter] + newValue)/(numEntries[quarter] + 1);\n        	numEntries[quarter]++;\n        }\n        for(int i = 0; i < historyLength; i++) {\n        	if ( values[i] > 0 ) {\n        		dataset.addValue(values[i],labProcedureName,quarters[i]);\n        	}\n        }\n        return dataset;\n    }\n'),(1660,'	public double getNumericalResultAsDouble() {\n		if (numericalResult != null && numericalResult.length() > 0) {\n			return Double.parseDouble(numericalResult);\n		} else {\n			return Double.NaN;\n		}\n	}\n'),(1661,'    public boolean hasData() {\n    	Date threeYearsAgo = new Date();\n    	Date recDate;\n    	String dateStr;\n    	DateFormat year = new SimpleDateFormat(\"yyyy\");\n    	DateFormat rest = new SimpleDateFormat(\"/MM/dd HHmma\");\n    	DateFormat sdf = new SimpleDateFormat(\"yyyy/MM/dd HHmma\");\n		dateStr = year.format(threeYearsAgo);\n		dateStr = \"\" + (Integer.parseInt(dateStr) - 3);\n		dateStr += rest.format(threeYearsAgo);\n		try {\n			threeYearsAgo = sdf.parse(dateStr);\n		} catch (ParseException e) {\n			return false;\n		}\n    	for (HealthRecord hr : healthRecords) {\n    		recDate = new Date(hr.getDateRecorded().getTime());\n    		if (recDate.before(threeYearsAgo))\n    			continue;\n    		else\n    			return true;\n    	}\n    	return false;\n    }\n'),(1662,'	public Date getDateRecorded() {\n		return dateRecorded;\n	}\n'),(1663,'    public Object produceDataset(Map params) throws DatasetProduceException {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset(){\n			private static final long serialVersionUID = 1L;\n			protected void finalize() throws Throwable {\n				super.finalize();\n			}\n        };\n        Calendar cur = Calendar.getInstance();\n        int curQuarter = cur.get(Calendar.MONTH) / 3;\n        for(HealthRecord hRecord : healthRecords) {\n        	Calendar cal = Calendar.getInstance();\n			cal.setTime(hRecord.getDateRecorded());\n			int yearOfReport = cal.get(Calendar.YEAR);\n        	int monthOfReport = cal.get(Calendar.MONTH);\n        	int quarterOfReport = monthOfReport / 3;\n        	int quarter = historyLength - 4*(cur.get(Calendar.YEAR)-yearOfReport) - (curQuarter - quarterOfReport) - 1;\n        	if (quarter < 0)\n        		continue;\n        	double newValue = 0;\n        	if (codeName.equals(\"Height\"))\n        		newValue = hRecord.getHeight();\n        	else if (codeName.equals(\"Weight\"))\n        		newValue = hRecord.getWeight();\n        	else if (codeName.equals(\"BMI\"))\n        		newValue = (hRecord.getWeight()*703)/(hRecord.getHeight()*hRecord.getHeight());\n        	values[quarter] = (values[quarter]*numEntries[quarter] + newValue)/(numEntries[quarter] + 1);\n        	numEntries[quarter]++;\n        }\n        for(int i = 0; i < historyLength; i++) {\n        	if ( values[i] > 0 ) {\n        		dataset.addValue(values[i],codeName,quarters[i]);\n        	}\n        }\n        return dataset;\n    }\n'),(1680,'	public ProfilePhotoDAO getProfilePhotoDAO() {\n		return new ProfilePhotoDAO(this);\n	}\n'),(1683,'	public RiskDAO getRiskDAO() {\n		return new RiskDAO(this);\n	}\n'),(1702,'	private void setValues(PreparedStatement ps, OfficeVisitBean ov) throws SQLException {\n		ps.setDate(1, new java.sql.Date(ov.getVisitDate().getTime()));\n		ps.setString(2, ov.getNotes());\n		ps.setLong(3, ov.getHcpID());\n		ps.setLong(4, ov.getPatientID());\n		ps.setString(5, ov.getHospitalID());\n	}\n'),(1703,'	public static long getLastInsert(Connection conn) throws SQLException {\n		ResultSet rs = conn.createStatement().executeQuery(\"SELECT LAST_INSERT_ID()\");\n		rs.next();\n		return rs.getLong(1);\n	}\n'),(1704,'	public static void closeConnection(Connection conn, PreparedStatement ps) {\n		try {\n			if (ps != null)\n				ps.close();\n			if (conn != null)\n				conn.close();\n		} catch (SQLException e) {\n			System.err.println(\"Error closing connections\");\n			e.printStackTrace();\n		}\n	}\n'),(1705,'	public String getNotes() {\n		return this.notes;\n	}\n'),(1706,'	public String getHospitalID() {\n		return hospitalID;\n	}\n'),(1707,'	private OfficeVisitBean loadFullOfficeVist(ResultSet rs, long visitID) throws SQLException, DBException {\n		OfficeVisitBean ov = new OfficeVisitBean(visitID);\n		ov.setVisitDateStr(new SimpleDateFormat(\"MM/dd/yyyy\").format(new Date(rs.getDate(\"VisitDate\")\n				.getTime())));\n		ov.setHcpID(rs.getLong(\"HCPID\"));\n		ov.setNotes(rs.getString(\"notes\"));\n		ov.setPatientID(rs.getLong(\"PatientID\"));\n		ov.setHospitalID(rs.getString(\"HospitalID\"));\n		return ov;\n	}\n'),(1708,'	public List<OfficeVisitBean> getOfficeVisitsWithNoSurvey(long pid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"SELECT * FROM OfficeVisits where id not in (select visitid from OVSurvey) and PatientID = ? ORDER BY VisitDate DESC\");\n			ps.setLong(1, pid);\n			ResultSet rs = ps.executeQuery();\n			return officeVisitLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1709,'	public List<OfficeVisitBean> getOfficeVisitsFromHospital(String hospitalID) throws DBException{\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM officevisits WHERE hospitalID = ? ORDER BY ID DESC\");\n			ps.setString(1, hospitalID);\n			ResultSet rs = ps.executeQuery();\n			return officeVisitLoader.loadList(rs);\n		} catch (SQLException e){\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1711,'	public int getApptID() {\n		return apptID;\n	}\n'),(1713,'	public long getVisitID() {\n		return visitID;\n	}\n'),(1715,'	public HospitalBean getHospital(String id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM Hospitals WHERE HospitalID = ?\");\n			ps.setString(1, id);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next())\n				return hospitalLoader.loadSingle(rs);\n			return null;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1717,'	public long getMessageId()\n	{\n		return id;\n	}\n'),(1721,'public List<AdverseEventBean> getReportsFor(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;	\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM AdverseEvents WHERE PatientMID = ?\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			List<AdverseEventBean> aeList = this.aeLoader.loadList(rs);\n			return aeList;\n		} catch(SQLException e){\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally{\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1727,'	public List<TransactionBean> getAllTransactions() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM TransactionLog ORDER BY timeLogged DESC\");\n			ResultSet rs = ps.executeQuery();\n			return loader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1728,'	public void logTransaction(TransactionType type, long loggedInMID) throws DBException {\n		logTransaction(type, loggedInMID, 0L, \"\");\n	}\n'),(1730,'	public OperationalProfile getOperationalProfile() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT TransactionCode, count(transactionID) as TotalCount, \"\n					+ \"count(if(loggedInMID<9000000000, transactionID, null)) as PatientCount, \"\n					+ \"count(if(loggedInMID>=9000000000, transactionID, null)) as PersonnelCount \"\n					+ \"FROM TransactionLog GROUP BY transactionCode ORDER BY transactionCode ASC\");\n			ResultSet rs = ps.executeQuery();\n			return operationalProfileLoader.loadSingle(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1731,'	public long getLoggedInMID() {\n		return loggedInMID;\n	}\n'),(1732,'	public void setRole(String role) {\n		this.role = role;\n	}\n'),(1733,'	public String getRole() {\n		return role;\n	}\n'),(1735,'	public static void setSQLMonthRange(java.sql.Date month1, int monthValue1, int yearsAgo1,\n			java.sql.Date month2, int monthValue2, int yearsAgo2) {\n		GregorianCalendar cal = new GregorianCalendar();\n		cal.add(Calendar.YEAR, -yearsAgo1);\n		cal.set(Calendar.MONTH, monthValue1);\n		cal.set(Calendar.DAY_OF_MONTH, 1);\n		month1.setTime(cal.getTimeInMillis());\n		cal.add(Calendar.YEAR, yearsAgo1);\n		cal.add(Calendar.YEAR, -yearsAgo2);\n		cal.set(Calendar.MONTH, monthValue2);\n		cal.set(Calendar.DAY_OF_MONTH, cal.getActualMaximum(Calendar.DAY_OF_MONTH));\n		month2.setTime(cal.getTimeInMillis());\n	}\n'),(1738,'	public List<Email> getAllEmails() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM FakeEmail ORDER BY AddedDate DESC\");\n			ResultSet rs = ps.executeQuery();\n			return emailBeanLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1739,'	public List<Email> getEmailWithBody(String bodySubstring) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM FakeEmail WHERE Instr(Body,?)>0 ORDER BY AddedDate DESC\");\n			ps.setString(1, bodySubstring);\n			ResultSet rs = ps.executeQuery();\n			return emailBeanLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1740,'	private List<FamilyMemberBean> getFamilyMembers(long pid, String relation, String query,\n			boolean secondParam) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		familyBeanLoader = new FamilyBeanLoader(relation);\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(query);\n			ps.setLong(1, pid);\n			if (secondParam)\n				ps.setLong(2, pid);\n			ResultSet rs = ps.executeQuery();\n			return familyBeanLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1743,'	private static BufferedImage loadDefaultProfilePhoto() {\n		try {\n			InputStream stream = ProfilePhotoDAO.class.getResourceAsStream(\"defaultProfilePhoto.jpg\");\n			BufferedImage read = ImageIO.read(stream);\n			stream.close();\n			return read;\n		} catch (IOException e) {\n			System.err.println(\"Unable to load default profile photo from ProfilePhotoDAO. \"\n					+ \"See following stacktrace.\");\n			e.printStackTrace();\n			return null;\n		}\n	}\n'),(1744,'	public int store(long mid, BufferedImage photo) throws DBException, IOException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"INSERT INTO ProfilePhotos(MID, Photo) VALUES(?,?) ON DUPLICATE KEY UPDATE Photo=?\");\n			ps.setLong(1, mid);\n			ByteArrayOutputStream baos = new ByteArrayOutputStream();\n			ImageOutputStream ios = new MemoryCacheImageOutputStream(baos);\n			ImageIO.write(photo, \"jpeg\", ios);\n			Blob photoBlob = new SerialBlob(baos.toByteArray());\n			ps.setBlob(2, photoBlob);\n			ps.setBlob(3, photoBlob);\n			return ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1745,'	public BufferedImage get(long mid) throws iTrustException, IOException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM ProfilePhotos WHERE MID = ?\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next()) {\n				Blob blob = rs.getBlob(\"Photo\");\n				BufferedImage bi = ImageIO.read(new MemoryCacheImageInputStream(blob.getBinaryStream()));\n				return bi;\n			} else\n				return DEFAULT_PROFILE_PHOTO;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1746,'	public int removePhoto(long mid) throws DBException, IOException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"DELETE FROM ProfilePhotos WHERE mid=?\");\n			ps.setLong(1, mid);\n			return ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1747,'	public ArrayList<DiagnosisStatisticsBean> getWeeklyCounts(String icdCode, String zipCode, java.util.Date lower, java.util.Date upper) throws DBException {\n		Calendar cal = Calendar.getInstance();\n		cal.setTime(lower);\n		cal.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);\n		Date lowerDate = cal.getTime();\n		cal.add(Calendar.HOUR, 24*6);\n		Date upperDate = cal.getTime();\n		ArrayList<DiagnosisStatisticsBean> weekStats = new ArrayList<DiagnosisStatisticsBean>();\n		do {\n			DiagnosisStatisticsBean db = getDiagnosisCounts(icdCode, zipCode, lowerDate, upperDate);\n			weekStats.add(db);\n			cal.setTime(upperDate);\n			cal.add(Calendar.HOUR, 24);\n			lowerDate = cal.getTime();\n			cal.add(Calendar.HOUR, 24*6);\n			upperDate = cal.getTime();\n		} while (lowerDate.before(upper));\n		return weekStats;\n	}\n'),(1749,'	public List<OverrideReasonBean> getAllORCodes() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM DrugReactionOverrideCodes ORDER BY CODE\");\n			ResultSet rs = ps.executeQuery();\n			return orcLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1750,'	public OverrideReasonBean getORCode(String code) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM DrugReactionOverrideCodes WHERE Code = ?\");\n			ps.setString(1, code);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next())\n				return orcLoader.loadSingle(rs);\n			return null;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1752,'	public List<LabProcedureBean> getLabProceduresForPatientForNextMonth(long id) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (id == 0L) throw new SQLException(\"PatientMID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure WHERE PatientMID = ? AND Rights = ? AND Status = ? AND (DateDiff(SYSDATE(),UpdatedDate) <= 30) ORDER BY UpdatedDate DESC\");\n			ps.setLong(1, id);\n			ps.setString(2, LabProcedureBean.Allow);\n			ps.setString(3, LabProcedureBean.Completed);\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1753,'	public List<LabProcedureBean> getAllLabProceduresForDocOV(long mid, long ovid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			if (mid == 0L) throw new SQLException(\"PatientMID cannot be null\");\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure WHERE PatientMID = ? AND OfficeVisitID = ? ORDER BY UpdatedDate DESC\");\n			ps.setLong(1, mid);\n			ps.setLong(2, ovid);\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1754,'	public List<LabProcedureBean> getAllLabProcedures() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM LabProcedure ORDER BY UpdatedDate ASC\");\n			ResultSet rs = ps.executeQuery();\n			return labProcedureLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1755,'	public String getCommentary() {\n		return commentary;\n	}\n'),(1756,'	public String getResults() {\n		return results;\n	}\n'),(1757,'	public long getLTID() {\n		return LTID;\n	}\n'),(1758,'	public int getPriorityCode() {\n		return priorityCode;\n	}\n'),(1759,'	public String getNumericalResult() {\n		return numericalResult;\n	}\n'),(1760,'	public String getLowerBound() {\n		return lowerBound;\n	}\n'),(1761,'	public String getUpperBound() {\n		return upperBound;\n	}\n'),(1762,'	public boolean isViewedByPatient() {\n		return viewedByPatient;\n	}\n'),(1764,'	public String getComponent(){\n		return component;\n	}\n'),(1765,'	public String getKindOfProperty(){\n		return kindOfProperty;\n	}\n'),(1766,'	public String getTimeAspect(){\n		return timeAspect;\n	}\n'),(1767,'	public String getSystem(){\n		return system;\n	}\n'),(1768,'	public String getScaleType(){\n		return scaleType;\n	}\n'),(1769,'	public String getMethodType(){\n		return methodType;\n	}\n'),(1772,'	private void insertLoginFailureRow(String ipAddr, int failureCount, Connection conn) throws DBException,\n			SQLException {\n		PreparedStatement ps = conn\n				.prepareStatement(\"INSERT INTO LoginFailures(IPAddress, failureCount) VALUES(?,?)\");\n		ps.setString(1, ipAddr);\n		ps.setInt(2, failureCount);\n		ps.executeUpdate();\n	}\n'),(1773,'	private void insertResetPasswordRow(String ipAddr, int failureCount, Connection conn) throws DBException,\n			SQLException {\n		PreparedStatement ps = conn\n				.prepareStatement(\"INSERT INTO ResetPasswordFailures(IPAddress, failureCount) VALUES(?,?)\");\n		ps.setString(1, ipAddr);\n		ps.setInt(2, failureCount);\n		ps.executeUpdate();\n	}\n'),(1774,'	private void updateResetFailuresToZero(String ipAddr, Connection conn) throws DBException, SQLException {\n		PreparedStatement ps = conn\n				.prepareStatement(\"UPDATE ResetPasswordFailures SET failureCount=0 WHERE IPAddress=?\");\n		ps.setString(1, ipAddr);\n		ps.executeUpdate();\n	}\n'),(1775,'	private void updateFailuresToZero(String ipAddr, Connection conn) throws DBException, SQLException {\n		PreparedStatement ps = conn\n				.prepareStatement(\"UPDATE LoginFailures SET failureCount=0 WHERE IPAddress=?\");\n		ps.setString(1, ipAddr);\n		ps.executeUpdate();\n	}\n'),(1788,'	public List<ReferralBean> getReferralsSentFrom(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM referrals WHERE SenderID = ?\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			return referralLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1789,'	public List<ReferralBean> getReferralsSentTo(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM referrals WHERE ReceiverID = ?\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			return referralLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1790,'	public List<ReferralBean> getReferralsForPatient(long mid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM referrals WHERE PatientID = ? ORDER BY viewed_by_patient, PriorityCode ASC\");\n			ps.setLong(1, mid);\n			ResultSet rs = ps.executeQuery();\n			return referralLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1791,'	public ReferralListQuery getReceiverQuery(long mid) {\n		return new ReceiverReferralListQuery(this.factory, mid);\n	}\n'),(1793,'	public long getVisitID() {\n		return visitID;\n	}\n'),(1794,'	public int getWaitingRoomMinutes() {\n		return waitingRoomMinutes;\n	}\n'),(1795,'	public int getExamRoomMinutes() {\n		return examRoomMinutes;\n	}\n'),(1796,'	private String buildPreps(int size) {\n		String prep = \"\";\n		for (int i = 0; i < size; i++) {\n			prep += \"?,\";\n		}\n		if (prep.length() > 0)\n			return prep.substring(0, prep.length() - 1);\n		else\n			return prep;\n	}\n'),(1800,'	public List<ProcedureBean> getAllCPTCodes() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM CPTCodes ORDER BY CODE\");\n			ResultSet rs = ps.executeQuery();\n			return procedureBeanLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1801,'	public ProcedureBean getCPTCode(String code) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM CPTCodes WHERE Code = ?\");\n			ps.setString(1, code);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next())\n				return procedureBeanLoader.loadSingle(rs);\n			return null;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1802,'	public String getAttribute() {\n		return attribute;\n	}\n'),(1805,'	public long getNextID(Role role) throws DBException, iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		long minID = role.getMidFirstDigit()*1000000000L;\n		minID = minID == 0 ? 1 : minID;  // Do not use 0 as an ID.\n	    long maxID = minID + 999999999L;\n		long nextID = minID;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT MAX(users.mid) FROM Users WHERE mid >= ? AND mid <= ?\");\n			ps.setLong(1, minID);\n			ps.setLong(2, maxID);\n			ResultSet rs = ps.executeQuery();\n			if (rs.next()) {\n				nextID = rs.getLong(1) + 1;\n				if(nextID < minID){\n					nextID = minID;\n				}\n			}\n			return nextID;\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1811,'	public float getHeight() {\n		return height;\n	}\n'),(1812,'	public float getWeight() {\n		return weight;\n	}\n'),(1813,'	public int getPedometerReading() {\n		return pedometerReading;\n	}\n'),(1814,'	public int getSystolicBloodPressure() {\n		return systolicBloodPressure;\n	}\n'),(1815,'	public int getDiastolicBloodPressure() {\n		return diastolicBloodPressure;\n	}\n'),(1816,'	public int getGlucoseLevel() {\n		return glucoseLevel;\n	}\n'),(1817,'	private int getNumberOfDailyEntries(long patientMID, String dataType) throws DBException{\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM RemoteMonitoringData WHERE PatientID=? AND \"\n										+ dataType + \"!=? AND DATE(timeLogged)=CURRENT_DATE\");\n			ps.setLong(1, patientMID);\n			ps.setInt(2, -1);\n			ResultSet rs = ps.executeQuery();\n			List<RemoteMonitoringDataBean> patients = loader.loadList(rs);\n			return patients.size();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1818,'	public void validatePR(long representativeMID, long patientMID)\n			throws iTrustException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM Representatives WHERE RepresenterMID=? AND RepresenteeMID=?\");\n			ps.setLong(1, representativeMID);\n			ps.setLong(2, patientMID);\n			ResultSet rs = ps.executeQuery();\n			if(!rs.next()) //no rows\n				throw new iTrustException(\"Representer is not valid for patient \" + patientMID);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1819,'	public boolean isSystolicBloodPressureAllowed() {\n		return systolicBloodPressureAllowed;\n	}\n'),(1820,'	public boolean isDiastolicBloodPressureAllowed() {\n		return diastolicBloodPressureAllowed;\n	}\n'),(1821,'	public boolean isGlucoseLevelAllowed() {\n		return glucoseLevelAllowed;\n	}\n'),(1822,'	public boolean isHeightAllowed() {\n		return heightAllowed;\n	}\n'),(1823,'	public boolean isWeightAllowed() {\n		return weightAllowed;\n	}\n'),(1824,'	public boolean isPedometerReadingAllowed() {\n		return pedometerReadingAllowed;\n	}\n'),(1825,'	private void insertDefaultTimeout(Connection conn, int mins) throws SQLException {\n		PreparedStatement ps = null;\n		ps = conn.prepareStatement(\"INSERT INTO GlobalVariables(Name,Value) VALUES (\'Timeout\', ?)\");\n		ps.setInt(1, mins);\n		ps.executeUpdate();\n	}\n'),(1827,'	public void addHistory(long pid, long hcpid) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"INSERT INTO historypatients SELECT null, CURDATE(), ?, p.* FROM patients p WHERE p.mid=?\");\n			ps.setLong(1, hcpid);\n			ps.setLong(2, pid);\n			ps.executeUpdate();\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1828,'	public List<PatientBean> getAllPatients() throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM patients \");\n			ResultSet rs = ps.executeQuery();\n			return patientLoader.loadList(rs);\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1829,'	public boolean hasFamilyHistory(long patientID, double icdLower, double icdUpper) throws DBException {\n		List<FamilyMemberBean> familyMembers = getFamilyMembers(patientID);\n		for (FamilyMemberBean famMember : familyMembers) {\n			if (hadPriorDiagnoses(famMember.getMid(), icdLower, icdUpper))\n				return true;\n		}\n		return false;\n	}\n'),(1830,'	private List<FamilyMemberBean> getFamilyMembers(long patientID) throws DBException {\n		FamilyDAO famDAO = factory.getFamilyDAO();\n		List<FamilyMemberBean> familyMembers = famDAO.getParents(patientID);\n		familyMembers.addAll(famDAO.getSiblings(patientID));\n		return familyMembers;\n	}\n'),(1831,'	public boolean hadPriorDiagnoses(long patientID, double lowerICDCode, double upperICDCode)\n			throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn.prepareStatement(\"SELECT * FROM OVDiagnosis ovd, OfficeVisits ov, Patients p \"\n					+ \"WHERE ovd.visitID=ov.id AND ov.patientid=p.mid AND p.mid=? \"\n					+ \"AND ovd.icdcode>=? AND ovd.icdcode<?\");\n			ps.setLong(1, patientID);\n			ps.setDouble(2, lowerICDCode);\n			ps.setDouble(3, upperICDCode);\n			return ps.executeQuery().next(); // if this query has ANY rows, then yes\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1833,'	private String createPrepared(int length) {\n		String str = \"\";\n		for (int i = 0; i < length; i++)\n			str += \"?,\";\n		return str.substring(0, str.length() - 1);\n	}\n'),(1834,'	private void setICDs(int start, PreparedStatement ps, double[] icdCodes) throws SQLException {\n		for (double icdCode : icdCodes) {\n			ps.setDouble(start++, icdCode);\n		}\n	}\n'),(1835,'	public boolean hasSmoked(long patientID) throws DBException {\n		Connection conn = null;\n		PreparedStatement ps = null;\n		try {\n			conn = factory.getConnection();\n			ps = conn\n					.prepareStatement(\"SELECT * FROM PersonalHealthInformation WHERE PatientID=? AND Smoker=1\");\n			ps.setLong(1, patientID);\n			return ps.executeQuery().next(); // if this query has ANY rows, then yes\n		} catch (SQLException e) {\n			e.printStackTrace();\n			throw new DBException(e);\n		} finally {\n			DBUtil.closeConnection(conn, ps);\n		}\n	}\n'),(1867,'	public String getExtendedMessage() {\n		if (sqlException != null)\n			return sqlException.getMessage();\n		else\n			return super.getExtendedMessage();\n	}\n'),(1868,'	public String getExtendedMessage() {\n		return \"No extended information.\";\n	}\n'),(1872,'	public boolean isAtRisk() {\n		if (qualifiesForDisease()) {\n			int numRisks = 0;\n			List<PatientRiskFactor> diseaseRiskFactors = getDiseaseRiskFactors();\n			for (PatientRiskFactor factor : diseaseRiskFactors) {\n				if (factor.hasRiskFactor())\n					numRisks++;\n				if (numRisks >= RISK_THRESHOLD)\n					return true;\n			}\n		}\n		return false; // both an else from qualifies or NOT over the threshold\n	}\n'),(1874,'	protected List<PatientRiskFactor> getDiseaseRiskFactors() {\n		List<PatientRiskFactor> factors = new ArrayList<PatientRiskFactor>();\n		factors.add(new GenderFactor(patient, Gender.Male));\n		factors.add(new AgeFactor(patient, 45));\n		factors.add(new EthnicityFactor(patient, Hispanic, AfricanAmerican, AmericanIndian));\n		factors.add(new WeightFactor(currentHealthRecord, 30));\n		factors.add(new HypertensionFactor(currentHealthRecord));\n		factors.add(new CholesterolFactor(currentHealthRecord));\n		factors.add(new SmokingFactor(factory, patient.getMID()));\n		factors.add(new PriorDiagnosisFactor(factory, patient.getMID(), 250.0, 251.0));\n		factors.add(new FamilyHistoryFactor(factory, patient.getMID(), 350.0, 460.0));\n		return factors;\n	}\n'),(1884,'	public boolean qualifiesForDisease() {\n		return patient.getAge() >= 12;\n	}\n'),(1885,'	protected List<PatientRiskFactor> getDiseaseRiskFactors() {\n		List<PatientRiskFactor> factors = new ArrayList<PatientRiskFactor>();\n		factors.add(new AgeFactor(patient, 45));\n		factors.add(new EthnicityFactor(patient, Hispanic, AfricanAmerican, AmericanIndian, Asian));\n		factors.add(new WeightFactor(currentHealthRecord, 25));\n		factors.add(new HypertensionFactor(currentHealthRecord));\n		factors.add(new CholesterolFactor(currentHealthRecord));\n		factors.add(new PriorDiagnosisFactor(factory, patient.getMID(), 250.0, 251.0));\n		factors.add(new FamilyHistoryFactor(factory, patient.getMID(), 250.0, 251.0));\n		return factors;\n	}\n'),(1886,'	public boolean qualifiesForDisease() {\n		return patient.getAge() < 12;\n	}\n'),(1887,'	protected List<PatientRiskFactor> getDiseaseRiskFactors() {\n		List<PatientRiskFactor> factors = new ArrayList<PatientRiskFactor>();\n		factors.add(new EthnicityFactor(patient, Ethnicity.Caucasian));\n		factors.add(new FamilyHistoryFactor(factory, patient.getMID(), 250.0, 251.0));\n		factors.add(new ChildhoodInfectionFactor(factory, patient.getMID(), 79.30));\n		return factors;\n	}\n'),(1891,'	public boolean hasRiskFactor() {\n		if (hasRisk == null)\n			hasRisk = hasFactor();\n		return hasRisk;\n	}\n'),(1892,'	public List<PatientRiskFactor> getPatientRiskFactors() {\n		List<PatientRiskFactor> patientRiskFactors = new ArrayList<PatientRiskFactor>();\n		List<PatientRiskFactor> diseaseRiskFactors = getDiseaseRiskFactors();\n		for (PatientRiskFactor factor : diseaseRiskFactors) {\n			if (factor.hasRiskFactor()) {\n				patientRiskFactors.add(factor);\n			}\n		}\n		return patientRiskFactors;\n	}\n'),(1894,'	public boolean hasFactor() {\n		try {\n			return factory.getRiskDAO().hadChildhoodInfection(patientID, icdCodes);\n		} catch (DBException e) {\n			System.err.println(\"DBException on Childhood Infection Risk, giving no risk\");\n			return false;\n		}\n	}\n'),(1895,'	public boolean hasFactor() {\n		return (record.getBloodPressureSystolic() > systolicThreshold)\n				|| (record.getBloodPressureDiastolic() > diastolicThreshold);\n	}\n'),(1896,'	public boolean hasFactor() {\n		try {\n			return factory.getRiskDAO().hasSmoked(patientID);\n		} catch (DBException e) {\n			e.printStackTrace();\n			return false;\n		}\n	}\n'),(1897,'	public boolean hasFactor() {\n		return (record.getCholesterolHDL() < hdlThreshold) || (record.getCholesterolLDL() > ldlThreshold)\n				|| (record.getCholesterolTri() > triThreshold);\n	}\n'),(1898,'	public boolean hasFactor() {\n		double bmi = currentHealthRecord.getBodyMassIndex();\n		return bmi > bmiThreshold && !Double.isInfinite(bmi);\n	}\n'),(1899,'	public double getBodyMassIndex() {\n		return 703 * (weight / (height * height));\n	}\n'),(1901,'	public String getDescription() {\n		return \"Patient\'s ethnicity is \" + patient.getEthnicity();\n	}\n'),(1902,'	public boolean hasFactor() {\n		for (Ethnicity ethnicity : atRisk) {\n			if (patient.getEthnicity().equals(ethnicity) && !Ethnicity.NotSpecified.equals(ethnicity))\n				return true;\n		}\n		return false;\n	}\n'),(1904,'	public boolean hasFactor() {\n		try {\n			return factory.getRiskDAO().hasFamilyHistory(patientID, icdLower, icdUpper);\n		} catch (DBException e) {\n			e.printStackTrace();\n			return false;\n		}\n	}\n'),(1905,'	public boolean hasFactor() {\n		return patient.getAge() > age;\n	}\n'),(1906,'	public boolean hasFactor() {\n		try {\n			return factory.getRiskDAO().hadPriorDiagnoses(patientID, lowerICDCode, upperICDCode);\n		} catch (DBException e) {\n			e.printStackTrace();\n			return false;\n		}\n	}\n'),(1908,'	public String getDescription() {\n		return \"Patient is \" + patient.getGender().toString().toLowerCase();\n	}\n'),(1909,'	public boolean hasFactor() {\n		return gender.equals(patient.getGender()) && !gender.equals(Gender.NotSpecified);\n	}\n'),(1921,'	public void validate(ReferralBean p) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"Notes\", p.getReferralDetails(), ValidationFormat.REFERRAL_NOTES, false));\n		errorList.addIfNotNull(checkFormat(\"Priority\", Integer.toString(p.getPriority()), ValidationFormat.PRIORITY, false));\n		errorList.addIfNotNull(checkFormat(\"Patient ID\", p.getPatientID(), ValidationFormat.MID, false));\n		errorList.addIfNotNull(checkFormat(\"Receiver ID\", p.getReceiverID(), ValidationFormat.MID, false));		\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(1938,'	public Date getDateOfDeath() {\n		try {\n			return new SimpleDateFormat(\"MM/dd/yyyy\").parse(dateOfDeathStr);\n		} catch (ParseException e) {\n			e.printStackTrace();\n			return null;\n		}\n	}\n'),(1945,'	public void validate(AllergyBean m) throws FormValidationException {\n		ErrorList errorList = new ErrorList();\n		errorList.addIfNotNull(checkFormat(\"Allergy Description\", m.getDescription(),\n				ValidationFormat.ALLERGY_DESCRIPTION, false));\n		if (errorList.hasErrors())\n			throw new FormValidationException(errorList);\n	}\n'),(1951,'	public String getPhone() {\n		return phone1 + \"-\" + phone2 + \"-\" + phone3;\n	}\n'),(1955,'	public boolean validateEmail(String email) throws FormValidationException {\n		MailValidator val = new MailValidator();\n		return val.isValid(email);\n	}\n'),(1980,'	public String getConfirmAnswer() {\n		return confirmAnswer;\n	}\n');
/*!40000 ALTER TABLE `node_code` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `node_comment`
--

DROP TABLE IF EXISTS `node_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `node_comment` (
  `node_id` int(11) NOT NULL,
  `comment_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `node_comment`
--

LOCK TABLES `node_comment` WRITE;
/*!40000 ALTER TABLE `node_comment` DISABLE KEYS */;
/*!40000 ALTER TABLE `node_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `project`
--

DROP TABLE IF EXISTS `project`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `project` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `closeness_threshold` double NOT NULL,
  `team_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `project`
--

LOCK TABLES `project` WRITE;
/*!40000 ALTER TABLE `project` DISABLE KEYS */;
INSERT INTO `project` VALUES (1,'PROJECT 1',0,1),(2,'TestProject',0,1);
/*!40000 ALTER TABLE `project` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `requirement`
--

DROP TABLE IF EXISTS `requirement`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `requirement` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `description` varchar(150) DEFAULT NULL,
  `projectId` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `requirement`
--

LOCK TABLES `requirement` WRITE;
/*!40000 ALTER TABLE `requirement` DISABLE KEYS */;
INSERT INTO `requirement` VALUES (1,'R1','test requirement1',0),(2,'R2','test requirement2',0);
/*!40000 ALTER TABLE `requirement` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `requirement_trace`
--

DROP TABLE IF EXISTS `requirement_trace`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `requirement_trace` (
  `requirementId` int(11) NOT NULL,
  `projectId` int(11) NOT NULL,
  `nodeId` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `requirement_trace`
--

LOCK TABLES `requirement_trace` WRITE;
/*!40000 ALTER TABLE `requirement_trace` DISABLE KEYS */;
INSERT INTO `requirement_trace` VALUES (1,0,0),(2,0,1);
/*!40000 ALTER TABLE `requirement_trace` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `team`
--

DROP TABLE IF EXISTS `team`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `team` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `leader_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `team`
--

LOCK TABLES `team` WRITE;
/*!40000 ALTER TABLE `team` DISABLE KEYS */;
INSERT INTO `team` VALUES (1,'neuron group',1);
/*!40000 ALTER TABLE `team` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `team_message`
--

DROP TABLE IF EXISTS `team_message`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `team_message` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` varchar(500) NOT NULL,
  `from_user` int(11) NOT NULL,
  `from_username` varchar(30) NOT NULL,
  `team_id` int(11) NOT NULL,
  `team_name` varchar(30) NOT NULL,
  `time` timestamp NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `team_message`
--

LOCK TABLES `team_message` WRITE;
/*!40000 ALTER TABLE `team_message` DISABLE KEYS */;
INSERT INTO `team_message` VALUES (1,'Test sending team message',1,'admin',1,'neuron group','2020-05-01 15:16:17');
/*!40000 ALTER TABLE `team_message` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `team_message_state`
--

DROP TABLE IF EXISTS `team_message_state`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `team_message_state` (
  `message_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `team_id` int(11) NOT NULL,
  `state` tinyint(4) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `team_message_state`
--

LOCK TABLES `team_message_state` WRITE;
/*!40000 ALTER TABLE `team_message_state` DISABLE KEYS */;
INSERT INTO `team_message_state` VALUES (1,1,1,1),(1,2,1,0),(1,3,1,1),(1,4,1,1);
/*!40000 ALTER TABLE `team_message_state` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `team_user`
--

DROP TABLE IF EXISTS `team_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `team_user` (
  `team_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `team_user`
--

LOCK TABLES `team_user` WRITE;
/*!40000 ALTER TABLE `team_user` DISABLE KEYS */;
INSERT INTO `team_user` VALUES (1,1),(1,2),(1,3),(1,4);
/*!40000 ALTER TABLE `team_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `password` varchar(20) NOT NULL,
  `role` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES (1,'admin','123456',1),(2,'test2','123456',1),(3,'test3','123456',1),(4,'test4','123456',1);
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-07-29 15:56:43
